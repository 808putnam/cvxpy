Search.setIndex({"docnames": ["api_reference/cvxpy", "api_reference/cvxpy.atoms", "api_reference/cvxpy.atoms.affine", "api_reference/cvxpy.atoms.elementwise", "api_reference/cvxpy.atoms.other_atoms", "api_reference/cvxpy.constraints", "api_reference/cvxpy.expressions", "api_reference/cvxpy.problems", "api_reference/cvxpy.reductions", "api_reference/cvxpy.reductions.back_end", "api_reference/cvxpy.reductions.dcp2cone", "api_reference/cvxpy.reductions.middle_end", "api_reference/cvxpy.reductions.qp2quad_form", "api_reference/cvxpy.transforms", "citing/index", "contributing/index", "dev_notes", "examples/applications/Channel_capacity_BV4.57", "examples/applications/MM", "examples/applications/OOCO", "examples/applications/ant_array_min_beamwidth", "examples/applications/censored_data", "examples/applications/clock_mesh", "examples/applications/consensus_opt", "examples/applications/fault_detection", "examples/applications/fir_chebychev_design", "examples/applications/interdiction", "examples/applications/l1_trend_filter", "examples/applications/max_entropy", "examples/applications/maximise_minimum_SINR_BV4.20", "examples/applications/nonneg_matrix_fact", "examples/applications/optimal_power_gaussian_channel_BV4.62", "examples/applications/parade_route", "examples/applications/robust_kalman", "examples/applications/sparse_covariance_est", "examples/applications/sparse_solution", "examples/applications/tv_inpainting", "examples/applications/water_filling_BVex5.2", "examples/basic/least_squares", "examples/basic/linear_program", "examples/basic/mixed_integer_quadratic_program", "examples/basic/quadratic_program", "examples/basic/sdp", "examples/basic/socp", "examples/derivatives/fundamentals", "examples/derivatives/queuing_design", "examples/derivatives/structured_prediction", "examples/dgp/dgp_fundamentals", "examples/dgp/max_volume_box", "examples/dgp/pf_matrix_completion", "examples/dgp/power_control", "examples/dgp/rank_one_nmf", "examples/dqcp/concave_fractional_function", "examples/dqcp/hypersonic_shape_design", "examples/dqcp/minimum_length_least_squares", "examples/index", "examples/machine_learning/lasso_regression", "examples/machine_learning/logistic_regression", "examples/machine_learning/ridge_regression", "examples/machine_learning/svm", "faq/index", "index", "install/index", "license/index", "related_projects/index", "short_course/index", "tutorial/advanced/index", "tutorial/dcp/index", "tutorial/dgp/index", "tutorial/dqcp/index", "tutorial/functions/index", "tutorial/index", "tutorial/intro/index", "updates/index"], "filenames": ["api_reference/cvxpy.rst", "api_reference/cvxpy.atoms.rst", "api_reference/cvxpy.atoms.affine.rst", "api_reference/cvxpy.atoms.elementwise.rst", "api_reference/cvxpy.atoms.other_atoms.rst", "api_reference/cvxpy.constraints.rst", "api_reference/cvxpy.expressions.rst", "api_reference/cvxpy.problems.rst", "api_reference/cvxpy.reductions.rst", "api_reference/cvxpy.reductions.back_end.rst", "api_reference/cvxpy.reductions.dcp2cone.rst", "api_reference/cvxpy.reductions.middle_end.rst", "api_reference/cvxpy.reductions.qp2quad_form.rst", "api_reference/cvxpy.transforms.rst", "citing/index.rst", "contributing/index.rst", "dev_notes.rst", "examples/applications/Channel_capacity_BV4.57.rst", "examples/applications/MM.rst", "examples/applications/OOCO.rst", "examples/applications/ant_array_min_beamwidth.rst", "examples/applications/censored_data.rst", "examples/applications/clock_mesh.rst", "examples/applications/consensus_opt.rst", "examples/applications/fault_detection.rst", "examples/applications/fir_chebychev_design.rst", "examples/applications/interdiction.rst", "examples/applications/l1_trend_filter.rst", "examples/applications/max_entropy.rst", "examples/applications/maximise_minimum_SINR_BV4.20.rst", "examples/applications/nonneg_matrix_fact.rst", "examples/applications/optimal_power_gaussian_channel_BV4.62.rst", "examples/applications/parade_route.rst", "examples/applications/robust_kalman.rst", "examples/applications/sparse_covariance_est.rst", "examples/applications/sparse_solution.rst", "examples/applications/tv_inpainting.rst", "examples/applications/water_filling_BVex5.2.rst", "examples/basic/least_squares.rst", "examples/basic/linear_program.rst", "examples/basic/mixed_integer_quadratic_program.rst", "examples/basic/quadratic_program.rst", "examples/basic/sdp.rst", "examples/basic/socp.rst", "examples/derivatives/fundamentals.rst", "examples/derivatives/queuing_design.rst", "examples/derivatives/structured_prediction.rst", "examples/dgp/dgp_fundamentals.rst", "examples/dgp/max_volume_box.rst", "examples/dgp/pf_matrix_completion.rst", "examples/dgp/power_control.rst", "examples/dgp/rank_one_nmf.rst", "examples/dqcp/concave_fractional_function.rst", "examples/dqcp/hypersonic_shape_design.rst", "examples/dqcp/minimum_length_least_squares.rst", "examples/index.rst", "examples/machine_learning/lasso_regression.rst", "examples/machine_learning/logistic_regression.rst", "examples/machine_learning/ridge_regression.rst", "examples/machine_learning/svm.rst", "faq/index.rst", "index.rst", "install/index.rst", "license/index.rst", "related_projects/index.rst", "short_course/index.rst", "tutorial/advanced/index.rst", "tutorial/dcp/index.rst", "tutorial/dgp/index.rst", "tutorial/dqcp/index.rst", "tutorial/functions/index.rst", "tutorial/index.rst", "tutorial/intro/index.rst", "updates/index.rst"], "titles": ["API Documentation", "Atoms", "Affine Atoms", "cvxpy.atoms.elementwise package", "Other Atoms", "Constraints", "Expressions", "Problems", "Reductions", "Back-End Reductions", "cvxpy.reductions.dcp2cone package", "Middle-End Reductions", "cvxpy.reductions.qp2quad_form package", "Transforms", "Citing CVXPY", "Contributing", "Developer Notes", "Capacity of a Communication Channel", "Method of multipliers", "Object Oriented Convex Optimization", "Minimize beamwidth of an array with arbitrary 2-D geometry", "Fitting censored data", "Sizing of clock meshes", "Consensus optimization", "Fault detection", "Chebychev design of an FIR filter given a desired <span class=\"math notranslate nohighlight\">\\(H(\\omega)\\)</span>", "TODO", "<span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> trend filtering", "Entropy maximization", "Power Assignment in a Wireless Communication System", "Nonnegative matrix factorization", "Optimal Power and Bandwidth Allocation in a Gaussian Channel", "Optimal parade route", "Robust Kalman filtering for vehicle tracking", "Sparse covariance estimation for Gaussian variables", "Computing a sparse solution of a set of linear inequalities", "Total variation in-painting", "Water Filling in Communications", "Least-squares", "Linear program", "Mixed-integer quadratic program", "Quadratic program", "Semidefinite program", "Second-order cone program", "Derivatives fundamentals", "Queuing design", "Structured prediction", "DGP fundamentals", "Maximizing the volume of a box", "Perron-Frobenius matrix completion", "Power control", "Rank-one nonnegative matrix factorization", "Fractional optimization", "Aerospace Design via Quasiconvex Optimization", "Minimum-length least squares", "Examples", "Machine Learning: Lasso Regression", "Logistic regression with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> regularization", "Machine Learning: Ridge Regression", "Support vector machine classifier with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span>-regularization", "FAQ", "Welcome to CVXPY 1.4", "Install", "License", "Related Projects", "CVXPY Short Course", "Advanced Features", "Disciplined Convex Programming", "Disciplined Geometric Programming", "Disciplined Quasiconvex Programming", "Atomic Functions", "User Guide", "What is CVXPY?", "Changes to CVXPY"], "terms": {"cvxpy": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 66, 67, 68, 69, 70, 71], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73], "design": [0, 15, 20, 55, 63], "intuit": [0, 32], "enough": [0, 7, 15, 66], "so": [0, 1, 4, 6, 7, 9, 15, 17, 20, 22, 24, 25, 26, 29, 31, 32, 34, 35, 36, 44, 49, 51, 53, 56, 58, 66, 67, 68, 73], "mai": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 25, 26, 29, 62, 63, 66, 67, 68, 69, 72, 73], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73], "without": [0, 3, 4, 7, 8, 10, 12, 15, 26, 33, 39, 46, 62, 63, 66, 72, 73], "consult": [0, 7, 47, 60, 66, 73], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 24, 26, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73], "refer": [0, 3, 7, 9, 15, 20, 22, 25, 27, 34, 35, 44, 53, 60, 66, 68, 69, 70, 73], "tutori": [0, 7, 44, 47, 48, 50, 55, 60, 61, 66, 67, 68, 70, 72, 73], "suffic": [0, 62], "acquaint": 0, "you": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 36, 40, 44, 47, 60, 61, 62, 63, 66, 67, 68, 69, 72, 73], "our": [0, 9, 10, 11, 12, 15, 21, 29, 32, 33, 36, 39, 45, 46, 47, 51, 52, 53, 57, 58, 59, 61, 66, 68, 69, 73], "softwar": [0, 8, 10, 12, 15, 60, 61, 63, 64, 66], "nonetheless": [0, 5], "we": [0, 2, 3, 4, 5, 8, 9, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73], "includ": [0, 4, 9, 10, 15, 25, 26, 37, 47, 49, 51, 61, 62, 63, 66, 73], "here": [0, 2, 3, 4, 7, 8, 9, 11, 13, 15, 21, 26, 29, 32, 33, 34, 39, 41, 42, 44, 45, 46, 53, 61, 64, 66, 67, 68, 69, 72, 73], "those": [0, 2, 4, 7, 8, 15, 36, 58, 62, 63, 66, 72, 73], "who": [0, 8, 15, 19, 20, 61], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "comfort": 0, "read": [0, 15, 61, 66, 70, 72], "technic": [0, 73], "all": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 15, 17, 19, 21, 22, 23, 25, 26, 29, 33, 37, 43, 46, 47, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 19, 26, 57, 60, 63, 66, 73], "function": [0, 1, 2, 3, 4, 5, 6, 7, 9, 13, 15, 17, 18, 20, 21, 23, 24, 25, 29, 31, 32, 34, 35, 37, 42, 44, 45, 46, 49, 51, 52, 53, 55, 57, 59, 66, 67, 69, 71, 72, 73], "import": [0, 1, 3, 4, 7, 11, 13, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 72, 73], "namespac": [0, 61, 73], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "mean": [0, 1, 3, 4, 7, 8, 13, 15, 17, 24, 26, 31, 34, 46, 54, 55, 56, 58, 60, 63, 66, 67, 68, 69, 70, 72, 73], "thei": [0, 1, 5, 8, 9, 11, 13, 15, 23, 26, 32, 45, 47, 52, 60, 66, 67, 68, 69, 72, 73], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 51, 52, 53, 54, 56, 58, 61, 62, 66, 67, 68, 69, 70, 72, 73], "simpli": [0, 5, 21, 37, 58, 62, 66], "write": [0, 5, 6, 8, 10, 12, 13, 19, 20, 26, 37, 53, 60, 63, 66, 70, 72, 73], "symbol": [0, 9, 11, 12, 66, 72, 73], "where": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 63, 66, 68, 69, 72, 73], "name": [0, 3, 4, 6, 7, 15, 20, 21, 25, 27, 28, 30, 34, 35, 45, 47, 48, 62, 63, 66, 73], "your": [0, 7, 9, 10, 11, 12, 15, 60, 61, 62, 63, 66, 68, 69, 72, 73], "choic": [0, 7, 9, 26, 32, 56, 57, 59, 72], "long": [0, 7, 66, 73], "packag": [0, 15, 21, 26, 38, 39, 41, 42, 43, 62, 64, 66], "python": [0, 6, 7, 15, 26, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 22, 40, 60, 61, 62, 63, 64, 66, 73], "file": [0, 10, 12, 15, 63, 66, 68, 69, 73], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 68, 69, 70, 72, 73], "group": [0, 8, 29], "five": 0, "section": [0, 15, 22, 26, 34, 35, 55, 60, 63, 66, 67, 68, 69, 70, 72], "atom": [0, 6, 7, 9, 10, 13, 15, 28, 49, 51, 52, 66, 71], "constraint": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 61, 62, 66, 67, 68, 69, 71], "express": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 15, 36, 47, 53, 61, 63, 68, 69, 70, 71, 72, 73], "problem": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 26, 29, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 71, 73], "reduct": [0, 7, 15, 71], "implement": [0, 1, 3, 4, 5, 9, 13, 15, 18, 20, 33, 49, 62, 64, 66, 73], "mathemat": [0, 1, 4, 5, 6, 67], "like": [0, 2, 5, 7, 13, 15, 21, 26, 47, 51, 56, 60, 66, 67, 72, 73], "exp": [0, 1, 7, 9, 10, 12, 13, 15, 20, 25, 26, 46, 47, 52, 57, 66, 68, 69, 70], "log": [0, 1, 4, 5, 6, 7, 8, 13, 14, 17, 24, 26, 27, 28, 31, 32, 34, 37, 45, 46, 49, 55, 56, 57, 58, 59, 66, 70, 71, 72, 73], "sqrt": [0, 1, 21, 24, 25, 52, 53, 67, 68, 69, 70], "impos": [0, 5, 7, 9, 26, 56], "upon": [0, 5], "variabl": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73], "tree": [0, 1, 5, 6, 9, 10, 22, 60, 67], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 18, 22, 23, 27, 28, 29, 31, 33, 34, 35, 37, 44, 45, 46, 47, 56, 57, 58, 59, 60, 66, 67, 68, 71, 73], "other": [0, 1, 5, 6, 7, 8, 15, 26, 36, 58, 61, 62, 63, 66, 69, 71, 73], "relat": [0, 5, 7, 17, 20, 33, 56, 66], "principl": [0, 26, 37], "oper": [0, 1, 2, 3, 5, 6, 8, 13, 20, 23, 26, 33, 34, 42, 44, 45, 46, 47, 66, 69, 71, 73], "convert": [0, 8, 9, 10, 11, 12, 13, 15, 21, 23, 30, 64, 66, 73], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 44, 45, 46, 48, 50, 51, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73], "particular": [0, 8, 11, 15, 21, 22, 23, 46, 47, 54, 63, 66, 73], "form": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 17, 18, 20, 23, 25, 26, 27, 29, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 46, 47, 59, 61, 63, 67, 68, 69, 70, 71, 72, 73], "anoth": [0, 2, 5, 6, 8, 9, 15, 31, 62, 66], "equival": [0, 2, 3, 4, 5, 7, 8, 9, 11, 51, 66, 68, 70, 72, 73], "transform": [0, 4, 8, 15, 47, 63, 68, 71, 72], "addit": [0, 4, 7, 13, 15, 21, 26, 32, 39, 41, 43, 58, 61, 63, 66, 68, 69, 73], "avail": [0, 7, 8, 13, 20, 34, 39, 60, 62, 63, 66, 73], "manipul": [0, 13, 64, 66, 73], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 55, 61, 63, 64, 66, 67, 68, 69, 72, 73], "lower": [1, 13, 21, 22, 25, 26, 29, 35, 37, 53, 58, 66, 69, 72], "case": [1, 3, 4, 5, 15, 17, 21, 22, 26, 29, 31, 33, 36, 44, 53, 55, 60, 66, 70, 72, 73], "appli": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 18, 19, 21, 33, 35, 47, 63, 66, 67, 68, 69, 70], "return": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 22, 24, 26, 29, 31, 32, 37, 41, 44, 46, 56, 57, 58, 60, 61, 66, 68, 69, 70, 72, 73], "composit": [1, 3, 4, 44, 45, 47, 67, 68, 71], "thereof": [1, 2, 5, 63], "precis": [1, 17, 29, 31, 37, 66, 68, 69, 72], "mechan": [1, 4, 63, 73], "allow": [1, 5, 6, 8, 9, 13, 15, 20, 26, 47, 48, 62, 66, 73], "build": [1, 8, 15, 20, 22, 32, 39, 61, 62, 73], "up": [1, 3, 4, 5, 7, 8, 9, 10, 15, 26, 29, 58, 66], "everi": [1, 7, 8, 10, 11, 15, 26, 32, 47, 60, 68, 69, 70, 72], "tag": [1, 47], "inform": [1, 7, 8, 13, 14, 15, 17, 19, 21, 37, 47, 58, 62, 63, 66, 68, 70, 73], "about": [1, 5, 7, 8, 9, 10, 11, 12, 15, 21, 61, 66], "its": [1, 2, 3, 4, 5, 6, 7, 9, 15, 18, 32, 35, 44, 47, 51, 52, 53, 56, 62, 63, 66, 67, 68, 69, 73], "domain": [1, 3, 4, 5, 6, 29, 45, 47, 66, 68, 69, 70], "sign": [1, 3, 6, 59, 66, 69, 70, 71, 72, 73], "curvatur": [1, 3, 6, 53, 70, 71], "monoton": [1, 3, 13, 46, 59, 67, 68, 70], "let": [1, 2, 7, 15, 20, 21, 26, 29, 32, 33, 38, 44, 47, 49, 61, 66, 68, 69, 73], "instanc": [1, 6, 7, 8, 12, 15, 32, 66, 67, 72], "reason": [1, 13, 15, 24, 57, 59, 63, 66, 73], "whether": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 29, 37, 47, 60, 63, 66, 67, 68, 69, 72, 73], "dcp": [1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 17, 31, 37, 47, 66, 68, 69, 70, 71, 72], "dgp": [1, 3, 7, 11, 44, 49, 51, 55, 66, 71, 73], "see": [1, 3, 4, 6, 7, 9, 10, 11, 12, 15, 19, 20, 21, 24, 26, 36, 44, 56, 60, 61, 62, 63, 66, 68, 69, 70, 72, 73], "page": [1, 5, 13, 14, 15, 17, 29, 31, 37, 62, 63, 65, 66, 68, 73], "compact": 1, "access": [1, 7, 8, 9, 15, 47, 66], "summari": [1, 10, 12], "each": [1, 2, 3, 5, 6, 7, 8, 9, 13, 15, 18, 19, 20, 22, 23, 24, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 50, 57, 59, 60, 63, 66, 67, 68, 69, 70, 72], "": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 17, 19, 20, 21, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 40, 41, 42, 44, 46, 47, 50, 53, 61, 62, 63, 66, 68, 69, 70, 72, 73], "attribut": [1, 4, 6, 7, 11, 13, 44, 47, 60, 63, 68, 69, 71, 72], "affin": [1, 3, 4, 5, 6, 9, 10, 12, 13, 15, 35, 39, 41, 45, 47, 66, 67, 68, 69, 70, 73], "addexpress": 1, "mulexpress": 1, "divexpress": 1, "bmat": [1, 68, 70], "conj": [1, 66, 70], "convolv": [1, 70, 73], "cumsum": [1, 70], "expr": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 66, 67, 68, 70, 72, 73], "axi": [1, 2, 4, 5, 17, 20, 26, 29, 33, 36, 37, 46, 53, 68, 71], "diag": [1, 6, 22, 50, 66, 68, 70], "diff": [1, 70], "hstack": [1, 19, 20, 32, 46, 50, 67, 68, 70, 73], "imag": [1, 6, 20, 25, 66, 70], "index": [1, 6, 7, 33, 37, 47, 66, 69, 73], "kron": [1, 20, 25, 70, 73], "matmul": [1, 68], "multipli": [1, 4, 10, 12, 23, 25, 26, 31, 36, 46, 50, 51, 55, 57, 59, 61, 66, 68, 69, 70, 73], "outer": [1, 4, 51, 70, 73], "partial_trac": [1, 70], "partial_transpos": [1, 70], "promot": [1, 5, 32, 68, 70], "psd_wrap": 1, "real": [1, 5, 11, 13, 20, 25, 46, 47, 58, 61, 66, 68, 70, 72, 73], "reshap": [1, 10, 12, 20, 21, 22, 25, 29, 53, 68, 70, 73], "scalar_product": 1, "sum": [1, 3, 4, 5, 6, 7, 13, 17, 19, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 45, 46, 47, 49, 50, 51, 56, 57, 58, 59, 66, 67, 68, 70, 73], "trace": [1, 4, 34, 42, 49, 51, 68, 70, 73], "transpos": [1, 6, 44, 66, 73], "negexpress": 1, "upper_tri": [1, 70], "vec": [1, 4, 5, 13, 68, 70], "vec_to_upper_tri": [1, 70, 73], "vstack": [1, 20, 27, 44, 51, 53, 68, 70, 73], "elementwis": [1, 2, 4, 5, 13, 31, 35, 39, 41, 45, 46, 47, 49, 51, 71, 72], "ab": [1, 5, 13, 19, 20, 25, 26, 32, 34, 35, 36, 46, 57, 66, 70], "entr": [1, 17, 28, 68, 70], "huber": [1, 33, 55, 70], "inv_po": [1, 53, 70], "kl_div": [1, 31, 70], "log_normcdf": [1, 70, 73], "log1p": [1, 70], "loggamma": [1, 70, 73], "logist": [1, 55, 70], "maximum": [1, 4, 7, 13, 17, 20, 21, 24, 25, 26, 29, 37, 39, 45, 48, 50, 51, 66, 67, 68, 69, 70, 73], "minimum": [1, 4, 20, 26, 29, 32, 50, 55, 66, 67, 68, 69, 70, 72, 73], "neg": [1, 5, 6, 10, 13, 24, 30, 66, 67, 70, 72, 73], "po": [1, 6, 11, 26, 34, 44, 45, 46, 47, 48, 49, 50, 51, 53, 59, 66, 68, 69, 70], "power": [1, 4, 5, 6, 15, 19, 22, 37, 47, 53, 55, 63, 66, 73], "rel_entr": [1, 70, 73], "scalen": [1, 70], "squar": [1, 2, 4, 7, 20, 21, 25, 32, 33, 36, 40, 46, 53, 55, 56, 58, 61, 66, 67, 68, 70, 72], "xexp": [1, 68, 70, 73], "cummax": 1, "diff_po": [1, 45, 68], "dotsort": [1, 70, 73], "eye_minus_inv": [1, 68], "geo_mean": [1, 68, 70], "w": [1, 4, 5, 6, 9, 10, 11, 15, 20, 25, 26, 31, 32, 33, 35, 45, 46, 48, 68, 69, 70, 73], "approx_error": [1, 4], "gmatmul": [1, 46, 68, 73], "harmonic_mean": [1, 68, 70], "inv_prod": [1, 70], "lambda_max": [1, 70], "lambda_min": [1, 45, 70], "lambda_sum_largest": [1, 70], "lambda_sum_smallest": [1, 70], "log_det": [1, 34, 70], "log_sum_exp": [1, 13, 70], "matrix_frac": [1, 66, 70], "max": [1, 9, 11, 13, 19, 20, 22, 25, 29, 30, 45, 46, 50, 51, 60, 68, 69, 70, 73], "min": [1, 9, 11, 15, 45, 50, 60, 68, 69, 70, 73], "mixed_norm": [1, 70], "norm": [1, 18, 20, 21, 25, 26, 27, 30, 32, 33, 36, 38, 43, 57, 59, 66, 67, 68, 70, 72], "norm1": [1, 56], "norm2": [1, 56], "norm_inf": 1, "normnuc": 1, "one_minus_po": [1, 45, 68], "perspect": [1, 9, 26, 70, 73], "pf_eigenvalu": [1, 49, 68], "pnorm": [1, 58, 68, 70], "ptp": [1, 70, 73], "prod": [1, 5, 45, 68], "quad_form": [1, 41, 66, 68, 70, 73], "quad_over_lin": [1, 7, 68, 70], "resolv": [1, 15, 33, 68, 73], "sigma_max": 1, "std": [1, 70, 73], "sum_largest": [1, 70], "sum_smallest": [1, 70], "sum_squar": [1, 7, 18, 21, 23, 24, 27, 33, 38, 40, 46, 54, 61, 66, 68, 70, 72], "suppfuncatom": [1, 13], "tr_inv": [1, 70, 73], "tv": [1, 36, 70], "var": [1, 25, 36, 45, 66, 70, 72, 73], "von_neumann_entr": [1, 70, 73], "might": [1, 6, 7, 15, 21, 23, 38, 39, 45, 58, 66, 69, 73], "constructor": [1, 66, 68, 73], "some": [1, 5, 6, 7, 9, 13, 15, 20, 21, 26, 31, 40, 46, 49, 51, 55, 66, 67, 68, 69, 73], "For": [1, 2, 3, 4, 6, 7, 9, 13, 15, 21, 23, 26, 27, 29, 30, 33, 36, 38, 39, 47, 53, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73], "exampl": [1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 19, 20, 21, 23, 25, 27, 28, 30, 34, 35, 44, 45, 46, 48, 50, 53, 56, 57, 58, 61, 63, 66, 68, 69, 70, 71, 72, 73], "x": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73], "mapsto": [1, 13, 45], "lambda_": [1, 4, 45, 49, 68, 69, 70], "construct": [1, 2, 4, 5, 7, 8, 9, 10, 15, 19, 20, 22, 25, 35, 36, 39, 40, 47, 51, 54, 57, 59, 61, 66, 67, 68, 69, 70, 72, 73], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 49, 50, 52, 53, 54, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73], "inherit": [1, 15], "directli": [1, 2, 5, 7, 9, 10, 11, 12, 29, 31, 66, 73], "indirectli": 1, "most": [1, 4, 5, 7, 8, 15, 53, 56, 57, 59, 62, 64, 66], "wai": [1, 5, 6, 7, 8, 9, 13, 15, 19, 21, 26, 55, 60, 61, 66, 67, 72, 73], "altern": [1, 4, 7, 23, 66, 68], "wrapper": [1, 2, 4, 7, 15, 66], "initi": [1, 14, 18, 29, 30, 32, 35, 36, 46, 53, 61, 66, 72], "run": [1, 23, 26, 29, 33, 35, 40, 46, 60, 66, 68, 69], "cp": [1, 2, 7, 11, 13, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73], "shape": [1, 2, 5, 6, 13, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 48, 50, 55, 56, 58, 61, 66, 67, 68, 70, 72, 73], "2": [1, 2, 3, 4, 5, 7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72], "symmetr": [1, 3, 5, 6, 9, 13, 22, 34, 40, 42, 66, 69, 70, 72, 73], "true": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 68, 69, 70, 72, 73], "print": [1, 4, 5, 7, 8, 11, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 60, 61, 63, 66, 67, 68, 69, 70, 72], "type": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 30, 60, 63, 66, 69, 72, 73], "show": [1, 20, 21, 22, 24, 25, 26, 27, 30, 32, 33, 34, 35, 37, 46, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 72], "unary_oper": [1, 2], "happen": [1, 9, 60, 69, 72], "becaus": [1, 3, 4, 7, 9, 11, 15, 26, 33, 52, 57, 58, 66], "1": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 72], "negat": [1, 2], "base": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 21, 24, 34, 35, 61, 62, 63, 64, 66, 67, 68, 69, 73], "3": [1, 2, 4, 5, 7, 9, 10, 11, 12, 15, 17, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 56, 57, 58, 61, 62, 66, 67, 68, 69, 70, 72], "last": [1, 7, 8, 9, 10, 12, 15, 19, 26, 29, 32, 37, 69, 72], "ani": [1, 2, 4, 6, 7, 10, 12, 13, 15, 20, 26, 32, 39, 63, 66, 67, 68, 70, 72, 73], "ha": [1, 3, 4, 5, 9, 10, 11, 13, 15, 17, 19, 20, 21, 24, 26, 29, 31, 32, 33, 35, 36, 37, 40, 45, 47, 49, 51, 53, 55, 62, 63, 66, 67, 68, 69, 70, 73], "been": [1, 9, 11, 19, 37, 53, 62, 63, 66, 73], "arg": [1, 2, 3, 4, 5, 7, 9, 10, 11, 23, 66], "abstract": [1, 5, 6, 8, 15, 26, 73], "properti": [1, 5, 6, 7, 19, 20, 22, 25, 27, 30, 34, 35, 45, 66, 73], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 23, 26, 32, 34, 47, 60, 61, 63, 64, 66, 67, 68, 69, 70, 73], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73], "describ": [1, 6, 7, 9, 15, 17, 20, 26, 32, 35, 44, 45, 46, 60, 63, 66, 68, 69, 70, 73], "closur": [1, 6], "region": [1, 5, 6, 26, 66], "finit": [1, 5, 6], "grad": [1, 6, 13], "give": [1, 3, 4, 6, 9, 13, 21, 24, 26, 31, 33, 37, 50, 63, 66, 70, 72, 73], "sub": [1, 6, 29, 67], "super": [1, 6, 66], "gradient": [1, 4, 6, 7, 18, 36, 45, 46, 55, 71], "r": [1, 4, 5, 6, 9, 10, 11, 15, 16, 17, 18, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 53, 54, 56, 57, 58, 59, 64, 66, 68, 69, 70, 72], "t": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 57, 59, 63, 66, 67, 68, 69, 70, 72, 73], "matrix": [1, 2, 4, 5, 6, 9, 15, 17, 19, 20, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 42, 50, 55, 56, 58, 66, 67, 71, 72, 73], "vector": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 19, 20, 21, 24, 25, 31, 32, 33, 35, 36, 38, 40, 44, 45, 46, 51, 54, 57, 60, 66, 67, 69, 71], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 26, 33, 47, 66, 67, 68, 70], "indic": [1, 6, 7, 13, 15, 24, 26, 36, 39, 41, 43, 49, 58, 63, 66, 72, 73], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 68, 69, 70, 71, 72, 73], "unknown": [1, 3, 33, 47, 53, 67, 68, 69, 70, 72, 73], "outsid": [1, 13, 20, 26, 31, 32, 33, 66], "map": [1, 6, 7, 8, 9, 10, 11, 12, 15, 46, 66, 72, 73], "scipi": [1, 3, 6, 7, 15, 17, 22, 27, 34, 61, 62, 66, 72, 73], "csc": [1, 6], "spars": [1, 6, 10, 12, 15, 24, 27, 32, 36, 55, 56, 57, 59, 61, 62, 66, 72, 73], "is_atom_affin": 1, "bool": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 66, 73], "is_atom_concav": 1, "concav": [1, 3, 4, 6, 7, 13, 18, 35, 45, 47, 52, 55, 57, 67, 68, 69, 70], "is_atom_convex": 1, "convex": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 37, 40, 45, 46, 47, 49, 52, 53, 55, 57, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73], "is_atom_log_log_affin": 1, "is_atom_log_log_concav": 1, "is_atom_log_log_convex": 1, "is_decr": 1, "idx": [1, 56, 57, 59], "non": [1, 5, 7, 8, 10, 12, 13, 15, 22, 26, 33, 35, 39, 41, 43, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 73], "increas": [1, 3, 4, 5, 30, 36, 45, 47, 48, 52, 56, 58, 59, 66, 67, 68, 69, 73], "argument": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 44, 45, 47, 66, 67, 68, 69, 70, 73], "is_incr": 1, "decreas": [1, 3, 45, 47, 52, 59, 67, 68, 69, 73], "add_expr": 2, "arg_group": 2, "affatom": 2, "number": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 46, 47, 50, 51, 66, 67, 68, 69, 70, 73], "binary_oper": 2, "lh_exp": 2, "rh_exp": 2, "binaryoper": 2, "multipl": [2, 4, 5, 6, 8, 31, 46, 55, 66, 67, 68, 70, 72, 73], "semant": [2, 4, 6, 8, 61, 66, 67, 69, 70, 73], "exactli": [2, 4, 5, 6, 7, 26, 56, 66, 67, 68, 70], "numpi": [2, 4, 5, 6, 7, 8, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 62, 66, 67, 70, 72], "except": [2, 4, 6, 7, 10, 12, 13, 15, 20, 22, 25, 27, 30, 33, 34, 35, 47, 63, 66, 67, 68, 69, 72, 73], "scalar": [2, 3, 4, 5, 7, 29, 44, 59, 66, 67, 69, 71, 72, 73], "permit": [2, 69], "creat": [2, 4, 5, 6, 7, 8, 15, 20, 26, 29, 30, 32, 34, 35, 42, 43, 53, 56, 58, 62, 66, 67, 72, 73], "left": [2, 4, 18, 20, 23, 26, 30, 33, 35, 36, 56, 57, 58, 59, 66, 67, 68, 70], "hand": [2, 7, 9, 15, 20, 26, 66], "side": [2, 7, 9, 26, 44, 66], "right": [2, 4, 9, 18, 20, 21, 23, 25, 26, 30, 33, 35, 36, 37, 57, 59, 63, 66, 67, 68, 70], "lh_expr": 2, "rh_expr": 2, "divis": [2, 59], "block_list": 2, "block": [2, 7, 9, 15, 20, 23, 26, 32, 66, 68, 69, 70], "take": [2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 17, 24, 26, 29, 46, 64, 66, 67, 68, 70, 73], "intern": [2, 4, 6, 19, 53, 73], "stack": [2, 46, 70], "horizont": [2, 22, 70], "vertic": [2, 22, 70], "repres": [2, 4, 5, 6, 9, 10, 12, 13, 19, 20, 26, 32, 36, 37, 38, 50, 53, 62, 63, 66, 72, 73], "complex": [2, 6, 11, 15, 19, 20, 25, 55, 67, 70, 71, 73], "conjug": [2, 66, 70], "1d": [2, 6, 20, 73], "discret": [2, 4, 9, 17, 20, 25, 26, 33, 36], "convolut": 2, "two": [2, 3, 5, 6, 8, 9, 13, 15, 17, 19, 26, 29, 32, 33, 35, 47, 51, 66, 67, 68, 69, 72, 73], "c": [2, 5, 6, 7, 9, 10, 12, 13, 15, 17, 19, 21, 22, 24, 26, 33, 36, 39, 40, 42, 43, 44, 46, 47, 53, 62, 64, 66, 67, 68, 70, 72, 73], "b": [2, 5, 7, 8, 9, 10, 12, 15, 18, 20, 22, 26, 27, 28, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 51, 53, 54, 60, 61, 66, 67, 69, 72, 73], "length": [2, 4, 5, 6, 9, 31, 53, 55, 66, 69, 70], "n": [2, 4, 5, 6, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 66, 68, 69, 70, 72, 73], "m": [2, 3, 4, 5, 15, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 56, 57, 58, 59, 61, 66, 68, 70, 72], "respect": [2, 5, 7, 9, 13, 17, 21, 26, 44, 45, 46, 53, 66, 67, 68, 70, 72], "c_k": 2, "sum_": [2, 4, 13, 15, 17, 21, 23, 24, 26, 28, 29, 31, 33, 34, 36, 37, 38, 45, 46, 50, 51, 57, 68, 70], "j": [2, 4, 14, 17, 19, 22, 25, 26, 27, 29, 34, 35, 36, 39, 42, 49, 50, 51, 68, 70], "k": [2, 4, 5, 9, 10, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 50, 66, 68, 70], "a_ib_j": 2, "quad": [2, 15, 17, 20, 24, 25, 31, 33, 42, 43, 45, 46, 47, 51, 57], "0": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72], "ldot": [2, 3, 15, 21, 24, 26, 33, 36, 42, 43, 45, 46, 47, 50, 57, 59, 68, 69, 70], "match": [2, 5, 22, 29, 36], "constant": [2, 3, 4, 7, 10, 11, 12, 21, 22, 29, 30, 31, 44, 47, 53, 60, 66, 67, 68, 69, 70, 72, 73], "int": [2, 3, 4, 5, 6, 7, 9, 10, 12, 20, 22, 24, 26, 29, 56, 59, 66, 73], "axisatom": [2, 4], "cumul": [2, 3, 4, 70], "being": [2, 15, 24, 73], "across": [2, 7, 9, 23, 50, 73], "2d": [2, 4, 6, 20, 66, 73], "diag_mat": 2, "diag_vec": 2, "extract": [2, 15, 73], "diagon": [2, 6, 34, 66], "make": [2, 5, 7, 8, 9, 15, 16, 20, 21, 22, 24, 26, 28, 33, 39, 56, 58, 60, 63, 66, 67, 68, 69, 72, 73], "numer": [2, 3, 4, 5, 6, 9, 12, 13, 15, 21, 33, 35, 52, 60, 66, 67, 68, 72, 73], "question": [2, 15, 49, 60], "default": [2, 3, 4, 5, 7, 13, 15, 62, 66, 70, 72, 73], "abov": [2, 5, 7, 15, 20, 21, 30, 37, 44, 46, 47, 53, 56, 58, 62, 63, 66, 67, 69, 72], "main": [2, 8, 15, 62, 66], "below": [2, 7, 9, 13, 14, 15, 20, 21, 22, 24, 25, 26, 29, 32, 33, 35, 36, 45, 49, 51, 52, 53, 54, 63, 66, 67, 68, 69, 72, 73], "kth": [2, 70], "order": [2, 5, 8, 9, 10, 11, 12, 15, 21, 22, 29, 31, 37, 39, 45, 46, 55, 64, 66, 70, 73], "differ": [2, 4, 6, 8, 15, 17, 20, 23, 27, 35, 36, 37, 38, 39, 41, 47, 55, 56, 61, 63, 64, 66, 67, 69, 70, 72, 73], "between": [2, 3, 4, 5, 8, 9, 13, 15, 17, 21, 26, 29, 32, 36, 47, 50, 51, 66, 72], "adjac": 2, "element": [2, 4, 5, 17, 20, 22, 32, 34, 35, 68, 69, 70], "second": [2, 5, 7, 9, 10, 12, 15, 20, 22, 24, 26, 27, 29, 33, 45, 55, 59, 61, 64, 66, 70, 73], "unchang": 2, "arg_list": 2, "concaten": [2, 4, 8, 9, 21, 37, 66, 70], "arbitrari": [2, 29, 73], "imaginari": [2, 20, 25, 66, 70], "part": [2, 5, 8, 15, 20, 25, 61, 63, 64, 66, 70, 73], "kei": [2, 8, 9, 15, 66], "orig_kei": 2, "slice": [2, 5, 9], "support": [2, 3, 5, 7, 8, 9, 13, 15, 61, 63, 66, 73], "via": [2, 4, 6, 7, 19, 20, 26, 33, 47, 62, 66, 68, 69, 70, 73], "overload": [2, 5, 6, 66], "low": [2, 7, 8, 15, 21, 66, 69], "level": [2, 7, 8, 15, 20, 29, 31, 37, 50, 62, 66], "should": [2, 5, 6, 7, 9, 11, 15, 26, 29, 48, 53, 57, 60, 62, 63, 66, 68, 70, 72, 73], "instanti": [2, 4, 7, 8, 66, 73], "e": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 29, 31, 34, 36, 46, 47, 60, 62, 66, 67, 68, 70, 72, 73], "kroneck": 2, "product": [2, 4, 6, 15, 20, 26, 35, 39, 49, 51, 63, 66, 68, 69, 70, 73], "stat": [2, 4, 17, 37, 71], "keepdim": [2, 4, 70], "fals": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 26, 32, 56, 59, 60, 66, 67, 70], "y": [2, 3, 4, 5, 9, 13, 15, 17, 18, 20, 21, 22, 24, 26, 27, 30, 31, 32, 33, 34, 36, 37, 44, 45, 46, 47, 51, 52, 53, 56, 57, 58, 59, 66, 67, 68, 69, 70, 72, 73], "float": [2, 3, 4, 5, 6, 7, 8, 13, 26, 29, 44, 57, 66, 67, 73], "ndarrai": [2, 5, 6, 8, 15, 67, 70, 72, 73], "nest": [2, 66], "input": [2, 3, 5, 8, 9, 10, 11, 13, 15, 17, 28, 29, 31, 33, 45, 46, 53, 66, 70, 73], "flatten": [2, 4, 5, 15, 20, 21, 22, 24, 26, 32, 70], "alreadi": [2, 9, 21, 62, 66], "linear": [2, 5, 9, 10, 12, 13, 15, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 38, 43, 46, 55, 57, 58, 59, 64, 66, 73], "dim": [2, 7, 22, 66, 70], "tupl": [2, 4, 6, 9, 10, 26, 49, 66, 73], "assum": [2, 3, 4, 5, 9, 10, 12, 17, 22, 26, 31, 32, 33, 45, 53, 63, 66], "texttt": [2, 4, 13, 31, 70, 73], "x_1": [2, 4, 11, 22, 46, 68, 70], "otim": 2, "cdot": [2, 4, 22, 27, 46, 50, 51, 53, 68, 70], "x_n": [2, 4, 33, 46, 47, 68, 70], "compos": [2, 66], "len": [2, 15, 22, 24, 26, 31, 33, 34, 53, 54, 56, 58], "implicit": [2, 3, 4, 13], "subsystem": [2, 66], "partial": [2, 13, 21, 44, 51, 70, 73], "along": [2, 4, 8, 19, 20, 26, 32, 53, 63, 66, 68, 71], "text": [2, 3, 5, 13, 20, 22, 25, 27, 29, 30, 31, 34, 35, 48, 49, 50, 51, 63, 66, 67, 68, 70, 72], "th": [2, 8, 15, 23, 32, 37, 45, 50], "tr": [2, 4, 34, 42, 68, 70], "x_k": [2, 17], "x_": [2, 4, 33, 49, 51, 68, 70, 72], "integ": [2, 4, 5, 6, 7, 9, 10, 12, 15, 20, 26, 55, 61, 64, 69, 71, 73], "encod": [2, 6, 7, 8, 11, 24, 26], "dimens": [2, 4, 5, 6, 7, 10, 12, 29, 33, 34, 35, 66, 67, 68, 70, 72, 73], "out": [2, 3, 10, 12, 13, 15, 19, 23, 24, 26, 29, 36, 39, 47, 53, 56, 61, 63, 66, 67, 68, 69, 73], "tensor": [2, 46], "defin": [2, 4, 5, 8, 13, 15, 19, 20, 22, 24, 26, 29, 33, 36, 38, 39, 41, 42, 43, 51, 53, 56, 58, 63, 64, 66, 69, 70], "rais": [2, 4, 5, 6, 7, 8, 11, 13, 20, 22, 25, 27, 30, 34, 35, 47, 60, 66, 67, 68, 69, 72, 73], "valueerror": [2, 5, 7, 8, 13, 66, 67, 73], "If": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 29, 34, 38, 47, 60, 62, 63, 66, 67, 68, 69, 70, 72, 73], "wrap": 2, "assert": [2, 11, 47, 48, 52, 63, 66, 68, 69], "psd": [2, 4, 6, 7, 9, 10, 12, 13, 15, 22, 34, 66, 73], "str": [2, 4, 6, 7, 8, 10, 12, 13, 66], "f": [2, 3, 4, 7, 9, 10, 11, 13, 15, 18, 19, 22, 23, 28, 43, 44, 47, 56, 58, 59, 66, 67, 68, 69, 70, 73], "unvector": 2, "new": [2, 6, 7, 8, 9, 11, 15, 20, 21, 26, 29, 30, 35, 61, 62, 66, 69, 70, 72], "entri": [2, 3, 4, 5, 6, 7, 14, 15, 24, 26, 30, 38, 39, 41, 42, 46, 49, 51, 56, 66, 67, 68, 70, 72, 73], "store": [2, 5, 10, 12, 19, 20, 34, 35, 36, 61, 66, 67, 68, 69, 70], "column": [2, 4, 5, 9, 10, 12, 17, 22, 24, 32, 36, 70, 72], "major": [2, 5, 8, 15, 21, 26, 66, 70, 73], "also": [2, 3, 7, 8, 9, 13, 15, 19, 26, 31, 32, 33, 37, 38, 45, 47, 55, 57, 59, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "known": [2, 21, 31, 35, 36, 38, 43, 45, 47, 49, 51, 53, 66, 67, 68, 69, 70], "fortran": [2, 22, 66], "ortran": 2, "standard": [2, 3, 4, 9, 15, 30, 33, 35, 39, 41, 53, 61, 62, 67, 70, 71, 72, 73], "inner": [2, 4, 15, 70], "alwai": [2, 13, 26, 62, 67, 70, 73], "have": [2, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 19, 21, 22, 23, 24, 26, 31, 32, 33, 38, 39, 41, 45, 47, 50, 53, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73], "note": [2, 4, 5, 7, 13, 14, 17, 19, 20, 25, 26, 32, 33, 34, 36, 60, 66, 67, 68, 69], "independ": [2, 24, 26, 34, 60, 67], "one": [2, 4, 5, 6, 7, 8, 9, 13, 15, 21, 24, 25, 26, 29, 30, 31, 36, 39, 43, 47, 55, 60, 62, 63, 66, 67, 68, 69, 70, 73], "d": [2, 9, 10, 12, 15, 21, 22, 25, 26, 27, 32, 35, 43, 44, 45, 46, 47, 48, 53, 57, 59, 66, 68], "drop": [2, 4, 70, 73], "after": [2, 4, 5, 6, 7, 10, 12, 15, 25, 26, 30, 36, 47, 62, 66, 68, 72, 73], "ax": [2, 4, 15, 18, 24, 26, 32, 33, 34, 35, 36, 38, 39, 40, 41, 54, 66, 69, 72], "unaryoper": 2, "strictli": [2, 36, 46, 70], "upper": [2, 13, 22, 26, 29, 53, 56, 57, 58, 59, 66, 69, 70], "triagon": 2, "perform": [2, 5, 15, 20, 24, 32, 33, 44, 60, 62, 63, 66, 73], "row": [2, 4, 5, 6, 9, 15, 20, 22, 27, 33, 36, 38, 60, 70], "np": [2, 4, 5, 6, 7, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 66], "arrai": [2, 3, 4, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 67, 68, 73], "10": [2, 4, 5, 7, 13, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 43, 46, 47, 48, 52, 53, 54, 56, 57, 66, 68, 69, 72, 73], "11": [2, 20, 22, 24, 26, 27, 28, 30, 33, 35, 36, 45, 53, 66, 68, 70, 72, 73], "12": [2, 4, 22, 24, 26, 27, 30, 32, 33, 34, 35, 36, 45, 53, 66, 69, 73], "13": [2, 4, 14, 22, 24, 27, 28, 30, 33, 35, 40, 45, 53, 54, 66], "14": [2, 4, 20, 22, 24, 27, 30, 33, 35, 37, 45, 46, 51, 66, 73], "15": [2, 4, 22, 24, 25, 26, 27, 30, 32, 33, 35, 38, 39, 41, 46, 53, 62, 66, 72], "16": [2, 20, 22, 24, 25, 26, 27, 30, 33, 34, 35, 56, 57, 58, 59, 66, 72], "17": [2, 4, 14, 22, 24, 26, 27, 30, 33, 66, 69, 73], "18": [2, 22, 24, 26, 27, 30, 33, 66, 73], "19": [2, 22, 24, 27, 30, 33, 62], "20": [2, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 38, 41, 46, 56, 58, 59, 61, 66, 67, 73], "21": [2, 22, 24, 27, 30, 33, 72], "22": [2, 22, 24, 26, 27, 30, 33, 34, 45], "23": [2, 4, 21, 22, 30, 33], "24": [2, 22, 28, 30, 33, 34], "25": [2, 4, 17, 22, 25, 26, 30, 32, 33, 40, 46, 53], "strict": [2, 5, 34, 70, 72], "triangular": [2, 70], "specifi": [2, 4, 6, 7, 8, 9, 13, 15, 29, 52, 54, 61, 66, 67, 69, 72, 73], "invert": [2, 8, 9, 10, 11, 12, 15, 66], "ensur": [2, 26, 30, 46, 66, 67], "exponenti": [3, 5, 9, 10, 12, 15, 45, 47, 64, 66, 68, 73], "suppli": [3, 7, 8, 13, 15, 29, 47, 57, 66, 68, 69], "absolut": [3, 5, 13, 15, 25, 35, 66], "operatornam": [3, 4, 70], "begin": [3, 4, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 66, 68, 70], "2m": [3, 70], "geq": [3, 4, 5, 15, 17, 21, 29, 41, 44, 45, 50, 59, 66, 67, 68, 69, 70], "leq": [3, 5, 15, 20, 24, 26, 29, 32, 33, 39, 41, 43, 44, 45, 46, 47, 48, 50, 54, 66, 67, 68, 69, 70], "end": [3, 4, 8, 13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 63, 66, 68, 69, 70], "disambigu": 3, "http": [3, 4, 7, 10, 12, 15, 26, 27, 47, 60, 63, 66], "github": [3, 15, 60, 61, 62, 66, 68, 69, 70, 73], "com": [3, 15, 24, 33, 66], "issu": [3, 15, 21, 35, 60, 61, 62, 63, 66, 68, 69, 70], "733": 3, "distribut": [3, 10, 12, 15, 17, 20, 21, 26, 34, 45, 46, 63, 66, 73], "normal": [3, 4, 15, 21, 22, 25, 27, 30, 34, 36, 46, 51, 53, 56, 57, 58, 59, 63, 66, 70], "random": [3, 13, 17, 18, 20, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 54, 56, 57, 58, 59, 61, 66, 72], "quadrat": [3, 7, 8, 9, 10, 11, 12, 33, 55, 64, 66, 73], "approxim": [3, 4, 5, 13, 30, 35, 44, 45, 48, 51, 55, 56, 66, 70, 73], "modest": 3, "accuraci": [3, 4, 15, 33, 57, 58, 60, 66, 70, 72], "over": [3, 5, 7, 13, 15, 22, 26, 30, 32, 46, 53, 57, 59, 61, 66, 69, 70, 72, 73], "4": [3, 4, 7, 11, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 45, 46, 49, 53, 59, 66, 67, 68, 70, 72], "detail": [3, 5, 7, 15, 16, 32, 60, 65, 66, 70, 72, 73], "natur": [3, 19, 45, 61, 73], "pr": [3, 57, 70], "1224": [3, 70], "analog": [3, 66, 68], "call": [3, 6, 7, 8, 9, 15, 17, 19, 23, 44, 47, 60, 62, 66, 67, 68, 69, 70, 72, 73], "log_ndtr": 3, "opt": [3, 9, 26, 46], "would": [3, 6, 7, 15, 19, 21, 26, 29, 32, 39, 41, 43, 44, 45, 51, 60, 66, 68, 69, 70, 72, 73], "obviou": 3, "casual": 3, "user": [3, 5, 6, 7, 8, 15, 24, 33, 38, 53, 61, 62, 64, 66, 70, 73], "gamma": [3, 13, 29, 33, 45, 48, 66, 70, 72, 73], "full": [3, 15, 47, 66, 73], "rang": [3, 4, 7, 13, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 42, 43, 46, 47, 50, 51, 53, 56, 57, 58, 59, 66, 70, 72], "approach": [3, 13, 19, 32, 33, 58, 61], "perfect": [3, 7, 24, 38], "goe": [3, 13, 15], "infin": [3, 4, 13], "228": [3, 70], "special": [3, 17, 44, 63, 66, 73], "evalu": [3, 6, 7, 11, 13, 46, 66, 68, 69], "rather": [3, 5, 13, 15, 30, 61, 66, 73], "than": [3, 4, 5, 6, 7, 8, 9, 13, 15, 17, 19, 21, 24, 26, 30, 33, 36, 45, 57, 58, 59, 61, 66, 69, 72, 73], "regress": [3, 15, 21, 38, 46, 55], "arg1": 3, "arg2": 3, "sequenc": [3, 4, 8, 9, 32, 33, 66, 69], "alia": [3, 4], "p": [3, 4, 6, 7, 9, 10, 12, 14, 15, 17, 19, 23, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 41, 42, 43, 46, 47, 50, 58, 60, 66, 68, 70, 73], "max_denom": [3, 4], "1024": [3, 4], "expon": [3, 66], "must": [3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 17, 20, 24, 25, 26, 29, 31, 44, 45, 46, 47, 53, 60, 61, 63, 66, 68, 69, 70, 72, 73], "specif": [3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 22, 26, 34, 49, 51, 55, 63, 66, 73], "given": [3, 4, 5, 7, 8, 9, 11, 13, 15, 17, 20, 23, 24, 26, 29, 30, 31, 32, 33, 36, 37, 38, 44, 45, 46, 47, 49, 53, 57, 59, 66, 67, 69, 70, 73], "ccl": 3, "posit": [3, 4, 5, 6, 9, 10, 12, 15, 17, 20, 24, 26, 31, 33, 34, 35, 39, 40, 41, 44, 46, 47, 49, 50, 51, 52, 57, 66, 67, 68, 69, 70, 72, 73], "same": [3, 4, 5, 6, 13, 15, 18, 20, 25, 26, 27, 28, 30, 31, 34, 35, 60, 63, 66, 67, 68, 70, 72, 73], "8": [3, 7, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 45, 46, 47, 49, 51, 54, 66, 70, 73], "infti": [3, 4, 13, 26, 66, 73], "neq": [3, 4, 29, 50, 68, 70], "ration": [3, 4], "represent": [3, 4, 5, 6, 7, 11, 13, 15, 20, 25, 53, 66, 72], "small": [3, 7, 15, 26, 35, 44, 45, 46, 54, 58, 66], "denomin": [3, 4, 7, 52, 69], "emploi": 3, "when": [3, 4, 5, 6, 7, 9, 13, 15, 16, 20, 24, 26, 29, 30, 33, 41, 43, 44, 52, 57, 62, 66, 67, 68, 69, 70, 72, 73], "comput": [3, 4, 6, 7, 13, 20, 22, 24, 25, 26, 34, 44, 45, 46, 55, 57, 59, 63, 66, 69, 72], "better": [3, 4, 5, 21, 33, 58, 62], "fraction": [3, 4, 25, 26, 29, 31, 32, 46, 55, 66], "usual": [3, 4, 13, 15, 45, 56, 58, 66, 72], "exact": [3, 4, 7, 15, 34, 73], "No": [3, 9, 13, 29, 60, 66], "cone": [3, 4, 5, 7, 9, 10, 12, 15, 34, 36, 55, 64, 66, 72, 73], "Such": [3, 13, 15], "could": [3, 7, 13, 19, 26, 66, 67, 72], "handl": [3, 4, 9, 13, 15, 33, 60, 66, 73], "reli": [3, 61, 66], "result": [3, 4, 5, 7, 9, 21, 24, 26, 28, 33, 38, 39, 41, 42, 43, 56, 61, 63, 66, 67, 69, 70, 72, 73], "fewer": 3, "current": [3, 5, 9, 13, 15, 20, 26, 62, 66, 72, 73], "method": [3, 5, 6, 7, 8, 9, 13, 15, 19, 23, 27, 29, 35, 44, 46, 47, 55, 56, 58, 60, 68, 69, 71, 72, 73], "even": [3, 7, 8, 9, 12, 15, 21, 22, 26, 30, 63, 66, 67, 68, 69, 72], "reformul": [3, 5], "re": [3, 5, 15, 26, 33, 35, 36, 46, 66, 68, 69, 72, 73], "interest": [3, 8, 15, 24, 26, 30, 49, 66, 69, 73], "help": [3, 8, 15, 62, 66, 69], "enhanc": [3, 15], "abil": [3, 15, 62, 66, 73], "pleas": [3, 8, 9, 10, 11, 12, 14, 15, 60, 66, 68, 69, 73], "get": [3, 6, 7, 15, 24, 26, 33, 61, 62, 67, 71, 72, 73], "touch": [3, 15], "u": [3, 8, 15, 23, 26, 29, 31, 33, 36, 47, 61, 66, 68, 72], "check": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 25, 26, 27, 29, 35, 37, 47, 60, 61, 66, 67, 68, 69, 73], "1222": [3, 15], "final": [3, 15, 20, 24, 25, 26, 29, 32, 46, 53, 66, 68], "determin": [3, 8, 13, 22, 26, 29, 32, 35, 63, 66, 67, 68, 70, 72], "g": [3, 4, 6, 9, 13, 15, 20, 22, 26, 28, 29, 32, 41, 43, 50, 60, 66, 68, 72, 73], "001": [3, 4, 13, 29], "1001": 3, "1000": [3, 26, 33, 34, 46, 59, 66], "math": [3, 14, 17, 20, 25, 26, 53, 61], "while": [3, 5, 8, 9, 13, 20, 21, 23, 26, 29, 38, 45, 57, 59, 60, 63, 66, 67, 68, 69, 70, 73], "0001": 3, "version": [3, 8, 10, 12, 15, 20, 22, 61, 62, 63, 66, 68, 70, 73], "program": [3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 35, 44, 45, 46, 48, 49, 50, 51, 52, 54, 60, 61, 64, 71, 72, 73], "consid": [3, 4, 8, 13, 15, 17, 19, 20, 22, 24, 26, 28, 29, 31, 35, 44, 45, 47, 53, 58, 61, 73], "onli": [3, 4, 5, 6, 7, 9, 13, 15, 20, 21, 22, 25, 26, 29, 32, 33, 47, 60, 62, 63, 66, 67, 68, 69, 73], "relev": [3, 6, 7, 64, 66], "solv": [3, 4, 5, 7, 8, 9, 11, 13, 15, 17, 18, 21, 23, 24, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 71, 72, 73], "alpha": [3, 5, 15, 22, 26, 29, 31, 32, 33, 36, 37, 44, 46, 48, 66, 70], "beta": [3, 22, 31, 48, 56, 57, 58, 59, 70], "root": [3, 9, 10, 15, 62], "neither": [4, 13, 68], "nor": [4, 13, 68], "langl": [4, 13, 53, 70], "sort": [4, 15, 46, 70], "rangl": [4, 13, 53, 70], "both": [4, 6, 7, 9, 12, 13, 15, 17, 19, 26, 33, 36, 62, 66, 67, 68, 69, 70, 73], "less": [4, 5, 33, 58, 62, 66, 69], "conceptu": 4, "pad": 4, "zero": [4, 6, 7, 9, 10, 12, 15, 17, 18, 20, 22, 23, 26, 29, 30, 32, 33, 34, 35, 36, 43, 45, 46, 56, 57, 58, 59, 66, 67], "larger": [4, 7, 26, 36, 57, 59, 64, 66, 67], "gener": [4, 5, 6, 7, 8, 9, 10, 11, 19, 24, 26, 32, 33, 38, 39, 40, 41, 42, 43, 45, 47, 51, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70], "5": [4, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 58, 59, 62, 66, 67, 68, 70, 72, 73], "boolean": [4, 6, 9, 24, 26, 32, 57, 59, 66, 73], "weight": [4, 13, 20, 22, 25, 26, 27, 29, 30, 35, 45], "largest": [4, 70], "assign": [4, 6, 9, 15, 26, 37, 55, 56, 58, 66, 72], "etc": [4, 13, 15, 26, 66, 72], "uniti": 4, "enforc": [4, 6, 7, 15, 21, 23, 26, 34, 46, 69], "spectral": [4, 49, 68, 70], "radiu": [4, 26, 33, 43, 49, 68], "geometr": [4, 7, 11, 14, 15, 44, 48, 50, 51, 53, 61, 64, 71, 73], "option": [4, 6, 7, 8, 10, 12, 13, 15, 26, 33, 47, 60, 61, 62, 68, 69, 71, 72, 73], "p_1": [4, 50, 68, 70], "p_n": [4, 50, 68, 70], "frac": [4, 5, 20, 24, 29, 33, 44, 45, 46, 50, 51, 52, 53, 54, 57, 68, 70], "mathbf": [4, 18, 21, 22, 24, 26, 28, 30, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 51, 54, 68, 69, 70], "tp": 4, "nonneg": [4, 5, 6, 7, 9, 10, 12, 13, 15, 35, 37, 52, 55, 56, 57, 58, 59, 66, 67, 69, 72, 73], "nonzero": [4, 20, 22, 34, 35, 69], "ones": [4, 7, 21, 22, 26, 27, 35, 46, 50, 56, 67, 72], "unweight": 4, "x_i": [4, 17, 22, 23, 24, 28, 32, 35, 37, 57, 59, 70], "whenev": [4, 60, 73], "p_i": [4, 29, 31, 50], "unconstrain": 4, "rule": [4, 7, 15, 25, 35, 44, 45, 47, 60, 66, 70, 71, 72], "occur": [4, 15, 24, 31], "sai": [4, 15, 26, 33, 47, 66, 68, 69], "cannot": [4, 6, 7, 13, 26, 29, 35, 63, 66, 67, 68, 72], "made": [4, 9, 15, 63, 66, 73], "immedi": [4, 15], "approx": [4, 25, 44, 56], "w_1": 4, "w_n": 4, "adjust": [4, 32, 35, 66], "modifi": [4, 6, 7, 15, 22, 25, 26, 63, 66, 73], "error": [4, 6, 7, 15, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 46, 47, 54, 56, 57, 58, 59, 62, 66, 69, 72, 73], "found": [4, 5, 15, 20, 27, 28, 32, 35, 36, 53, 54, 60, 66, 72, 73], "through": [4, 5, 6, 7, 9, 14, 15, 21, 26, 45, 46, 62, 63, 66, 67, 73], "seen": [4, 33, 52], "string": [4, 6, 7, 8, 9, 16, 66, 72], "maxim": [4, 9, 11, 13, 17, 18, 19, 26, 32, 34, 37, 47, 52, 53, 55, 57, 66, 67, 68, 69, 72], "point": [4, 5, 7, 13, 15, 21, 22, 26, 32, 33, 35, 37, 53, 58, 60, 62, 66], "few": [4, 15, 26, 30, 57, 66], "decim": 4, "place": [4, 15, 26, 32, 63, 66], "sometim": [4, 21, 60, 66, 69], "34": [4, 22], "56": [4, 22], "78": [4, 22], "90": [4, 22], "45": [4, 20, 22, 32, 59], "30": [4, 20, 21, 22, 25, 30, 36, 61], "In": [4, 7, 8, 9, 15, 17, 21, 24, 26, 31, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 72, 73], "123": [4, 22], "456": 4, "789": 4, "256": 4, "341": 4, "295": 4, "512": 4, "1e": [4, 5, 7, 13, 24, 26, 27, 28, 32, 33, 34, 35, 44, 45, 46, 54, 66], "contain": [4, 7, 9, 13, 15, 20, 26, 29, 46, 53, 55, 63, 66], "combin": [4, 13, 26, 63, 66], "73": 4, "60": [4, 14, 20, 22, 26, 33, 46, 66], "often": [4, 15, 21, 56, 66], "9": [4, 20, 22, 24, 26, 27, 28, 30, 32, 33, 35, 36, 43, 46, 47, 49, 51, 53, 54, 62, 63, 66, 73], "153": 4, "term": [4, 9, 10, 13, 19, 22, 23, 32, 33, 57, 59, 63, 66, 73], "obj": [4, 17, 19, 20, 22, 24, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 53, 66, 67, 72], "constr": [4, 26, 32, 33, 66], "val": [4, 6, 46, 66, 72], "whose": [4, 5, 6, 9, 10, 11, 46, 66], "possibl": [4, 7, 13, 15, 17, 24, 26, 29, 32, 60, 63, 66, 73], "offer": [4, 8, 33, 63], "more": [4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 19, 22, 24, 26, 33, 36, 55, 58, 61, 62, 63, 66, 67, 68, 70, 73], "accur": [4, 19, 33, 66], "cost": [4, 19, 26, 33, 35, 38, 58, 66], "requir": [4, 8, 10, 12, 15, 37, 39, 46, 53, 61, 62, 63, 66, 67, 68, 69, 73], "inequ": [4, 5, 6, 7, 9, 12, 15, 28, 39, 41, 42, 45, 46, 53, 55, 66, 69, 72], "_": [4, 5, 7, 9, 15, 18, 23, 26, 36, 40, 41, 42, 44, 45, 46, 47, 51, 56, 59, 66, 67, 68, 70], "mathbin": 4, "diamond": [4, 10, 12, 14, 60, 61, 63], "time": [4, 5, 7, 9, 15, 17, 18, 19, 22, 24, 26, 27, 29, 30, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 61, 66, 68, 70, 72, 73], "ccc": 4, "prod_": [4, 26, 49, 68], "j1": 4, "a_": [4, 26, 39, 46, 48, 49, 51, 68], "1j": [4, 20, 25, 66, 68], "pj": 4, "vdot": [4, 68, 70], "mj": [4, 68], "harmon": 4, "reciproc": [4, 29, 45, 47, 68], "eigenvalu": [4, 49, 51, 66, 69, 70], "det": [4, 34, 70], "sum_i": [4, 35, 59], "max_": [4, 29, 68, 70], "q": [4, 6, 7, 10, 12, 40, 41, 45, 66, 68, 70], "lp": [4, 26, 62, 66, 73], "sum_k": [4, 70], "sum_l": [4, 70], "lvert": [4, 68, 70], "l": [4, 7, 10, 15, 20, 22, 29, 46, 53, 66, 70], "rvert": [4, 68, 70], "l_": [4, 18], "mix": [4, 5, 9, 10, 12, 15, 55, 61, 64, 71, 73], "valid": [4, 8, 13, 26, 46, 67, 68, 69], "fro": [4, 30, 68, 70], "frobeniu": [4, 51, 55, 70], "nuc": [4, 70], "singular": [4, 70], "inf": [4, 7, 22, 66, 68, 70, 72], "set": [4, 5, 6, 7, 9, 13, 15, 20, 21, 24, 26, 27, 29, 30, 32, 33, 34, 36, 37, 40, 42, 44, 46, 47, 49, 55, 57, 59, 60, 62, 64, 68, 69, 70, 71, 72], "reduc": [4, 8, 9, 10, 11, 12, 18, 20, 21, 23, 58, 61, 66], "size": [4, 5, 6, 7, 9, 13, 15, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 55, 56, 57, 58, 59, 67, 70, 73], "norm_nuc": 4, "f_recess": 4, "fact": [4, 7, 56, 59, 66, 67], "epigraph": 4, "mathbb": [4, 5, 15, 17, 29, 57, 66], "fx": [4, 28, 43], "gt": 4, "sf": [4, 70], "se": 4, "web": [4, 7, 24, 33, 47], "stanford": [4, 26, 27, 32, 33, 36, 46, 47, 60, 66, 67], "edu": [4, 26, 27, 47, 60, 67], "boyd": [4, 14, 17, 20, 21, 22, 24, 25, 27, 29, 30, 31, 34, 35, 37, 47, 48, 50, 60, 61, 66], "paper": [4, 5, 14, 27, 35, 45, 46, 47, 60, 68, 69, 73], "pdf": [4, 24, 26, 33, 60], "sw_aff_ctrl": 4, "view": [4, 26, 32], "underli": [4, 27], "doe": [4, 5, 7, 9, 20, 21, 25, 29, 31, 36, 47, 56, 62, 63, 66, 67, 68, 69], "callabl": [4, 6], "z": [4, 5, 7, 9, 13, 15, 23, 40, 44, 46, 47, 57, 66, 68, 69], "perpect": 4, "perron": [4, 51, 55], "magnitud": [4, 25, 44], "equal": [4, 5, 6, 7, 9, 12, 15, 22, 26, 32, 39, 41, 43, 51, 53, 60, 66, 69, 72], "guarante": [4, 13, 26, 67, 68, 69, 73], "factori": 4, "treat": [4, 7, 30, 66, 67, 68, 70, 72], "accept": [4, 8, 9, 10, 11, 12, 13, 15, 63, 66, 73], "_p": [4, 68, 70], "n_": [4, 5, 32, 41, 68, 70], "actual": [4, 13, 20, 21, 24, 26, 32, 33, 44, 45, 52], "otherwis": [4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 29, 30, 31, 57, 62, 63], "them": [4, 5, 9, 10, 21, 26, 56, 60, 62, 66, 72], "come": [4, 62, 66, 73], "acronym": 4, "peak": 4, "ignor": [4, 21, 26], "assume_psd": 4, "ij": [4, 17, 26, 29, 34, 36, 39, 42, 49, 50, 51, 68, 70], "2_": [4, 44], "si": [4, 68], "ddof": 4, "deviat": [4, 51], "quantiti": [4, 20, 25, 26, 38, 66], "bessel": 4, "correct": [4, 9, 66, 67], "smallest": [4, 70], "suppfunc": 4, "parent": [4, 66], "mathrm": [4, 15, 26, 36, 45, 53, 54, 57, 59, 68, 70], "definit": [4, 5, 63, 66, 69, 70, 72], "total_vari": 4, "total": [4, 21, 22, 24, 29, 31, 32, 33, 37, 39, 45, 50, 55, 66, 67, 73], "variat": [4, 55], "matric": [4, 6, 7, 9, 10, 12, 13, 15, 19, 20, 22, 33, 40, 42, 49, 51, 62, 67, 68, 70, 71, 73], "l1": [4, 27, 35, 55, 59], "l2": [4, 67], "extend": [4, 19, 33, 73], "third": [4, 15, 20, 63], "varianc": [4, 24, 41, 58], "quad_approx": 4, "von": 4, "neumann": 4, "entropi": [4, 5, 17, 55], "logm": [4, 70], "logarithm": [4, 5, 26, 47, 68], "textstyl": 4, "lambda_i": [4, 43, 45], "expect": [4, 15, 24, 41, 58, 66, 73], "applic": [4, 8, 9, 10, 11, 12, 15, 61, 63, 65, 66, 67], "quantum": [4, 73], "restrict": [5, 7, 26, 61, 66], "optim": [5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 55, 57, 59, 61, 64, 65, 66, 67, 68, 69, 72, 73], "seven": 5, "semidefinit": [5, 6, 9, 10, 12, 15, 34, 40, 55, 64, 71, 72, 73], "dimension": [5, 10, 12, 15, 35, 40, 66, 70, 72, 73], "vast": [5, 66], "need": [5, 6, 7, 8, 11, 13, 15, 16, 26, 33, 37, 40, 56, 58, 62, 66, 73], "first": [5, 7, 8, 9, 15, 18, 20, 22, 26, 29, 30, 32, 45, 46, 59, 66, 73], "three": [5, 8, 15, 22, 36, 47, 67, 68, 70], "addition": [5, 45, 47, 62, 66, 69], "know": [5, 7, 8, 21, 26, 31, 66], "anyth": [5, 7, 8], "how": [5, 7, 9, 15, 21, 32, 34, 39, 44, 52, 54, 55, 56, 58, 63, 65, 66, 67, 68, 69, 72, 73], "api": [5, 8, 9, 10, 11, 12, 13, 61, 66, 68, 73], "do": [5, 8, 9, 13, 15, 20, 21, 25, 26, 29, 33, 35, 56, 58, 59, 61, 63, 66, 73], "provid": [5, 8, 9, 13, 62, 63, 66, 69, 72, 73], "advanc": [5, 7, 14, 26, 71, 73], "find": [5, 7, 8, 9, 15, 17, 21, 26, 29, 35, 38, 41, 46, 53, 54, 56, 58, 59, 66, 69, 70, 72], "inspect": [5, 7, 52], "dual": [5, 7, 8, 9, 13, 18, 26, 36, 39, 41, 43, 47, 60, 62, 71, 73], "residu": [5, 30, 38, 66], "constr_id": 5, "canon": [5, 6], "uniqu": [5, 26], "id": [5, 6, 8, 10, 12, 60], "is_dcp": [5, 6, 7, 46, 48, 60, 66, 67], "dpp": [5, 6, 7, 15, 44, 46, 72, 73], "toler": [5, 13, 29, 30, 66], "08": [5, 22, 24, 27, 31, 33, 66], "violat": [5, 66, 67, 73], "constrain": [5, 6, 22, 24, 26, 28, 32, 33, 34, 50, 66, 73], "associ": [5, 13, 18, 32, 34, 57, 59, 63], "distanc": [5, 21, 26, 32, 69], "project": [5, 6, 14, 15, 36, 46, 53, 61, 66, 73], "onto": [5, 6, 66], "pi": [5, 20, 22, 25], "v": [5, 13, 15, 21, 22, 24, 33, 47, 53, 56, 58, 59, 60, 68, 72], "_2": [5, 15, 21, 24, 27, 33, 36, 38, 40, 43, 46, 54, 56, 58, 66, 67, 69, 70], "prefer": [5, 40, 63, 66], "To": [5, 14, 15, 18, 19, 24, 26, 32, 33, 37, 46, 60, 61, 62, 63, 66, 68, 69, 72, 73], "nonposit": [5, 6, 66, 67, 69], "As": [5, 8, 13, 20, 26, 29, 32, 37, 44, 56, 58, 66, 67, 70, 72, 73], "belong": [5, 9, 15], "polar": [5, 20], "sens": [5, 13, 24, 56, 58, 67, 72], "dual_valu": [5, 39, 41, 43, 47, 48, 61, 66], "former": [5, 56], "succcurlyeq_": 5, "s_n": 5, "second_ord": 5, "origin": [5, 7, 8, 9, 10, 11, 12, 13, 18, 21, 22, 26, 27, 30, 33, 36, 44, 60, 63, 66, 72], "mid": [5, 45, 57, 66], "ye": [5, 60], "cup": [5, 66], "rel": [5, 21, 26, 36, 51, 66], "k_": [5, 15], "cl": [5, 15], "sinc": [5, 15, 17, 20, 23, 29, 31, 33, 35, 37, 45, 61, 66, 67], "veri": [5, 15, 37, 66, 73], "similar": [5, 21, 36, 45, 58, 66, 68, 69, 70], "convers": [5, 53, 61, 63, 69], "theorem": [5, 67, 69], "node": [5, 6, 9, 10, 19, 22, 26, 31, 60, 66], "quadratur": 5, "algorithm": [5, 7, 18, 26, 32, 35, 66, 73], "control": [5, 14, 24, 26, 55, 61, 63, 66], "collect": [5, 6, 45], "3d": [5, 15, 66], "common": [5, 15, 29, 39, 41, 47, 55, 63, 72, 73], "compon": [5, 9, 20, 39, 40, 45], "open": [5, 15, 27, 40, 60, 61, 62, 64, 66], "interv": [5, 20, 26, 29, 33, 46, 53], "follow": [5, 7, 8, 13, 14, 15, 18, 20, 23, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "code": [5, 7, 8, 9, 10, 11, 12, 20, 22, 23, 26, 33, 35, 38, 39, 40, 41, 42, 43, 44, 51, 52, 57, 59, 60, 61, 62, 63, 66, 68, 69, 70, 72, 73], "snippet": [5, 15, 60, 66], "incorrect": 5, "satisfi": [5, 7, 13, 26, 35, 45, 47, 60, 66, 67, 68, 69, 72], "ndim": [5, 6, 13, 15, 67, 73], "unlik": [5, 26], "attempt": [5, 9, 34, 66], "appropri": [5, 8, 15, 63, 66, 73], "finite_set": 5, "ineq_form": 5, "separ": [5, 20, 61, 63, 66], "union": [5, 63], "canonic": [5, 7, 9, 10, 11, 12, 15, 61, 71, 73], "formul": [5, 17, 20, 25, 31, 45, 46, 47, 49, 50, 57, 59, 68, 73], "binari": 5, "speed": [5, 7, 8, 15, 33, 60, 66], "solver": [5, 7, 8, 9, 11, 13, 20, 22, 26, 27, 28, 30, 31, 33, 34, 35, 36, 40, 46, 61, 69, 71, 72], "simpl": [5, 7, 9, 15, 21, 29, 35, 37, 41, 44, 52, 65, 66, 67, 68, 69, 72], "branch": [5, 15], "bound": [5, 13, 21, 22, 24, 26, 29, 48, 50, 53, 66, 69, 72], "choos": [5, 6, 7, 9, 20, 24, 26, 29, 37, 39, 45, 49, 53, 57, 59, 60, 63, 72], "methodologi": [5, 35], "work": [5, 14, 15, 20, 21, 25, 26, 27, 28, 30, 34, 35, 62, 63, 66, 67, 73], "h": [5, 9, 13, 15, 20, 26, 32, 41, 46, 48, 66], "d_": [5, 45], "op": 5, "succeq": [5, 17, 22, 28, 30, 31, 34, 37, 42], "local": [5, 15, 19, 23, 35, 53], "significantli": [5, 61, 66], "expand": [5, 11, 15], "effect": [5, 7, 9, 26, 32, 44, 66], "scale": [5, 15, 26, 33, 35, 36, 46, 64, 66], "param": [5, 10, 12, 45], "conic": [5, 8, 9, 10, 11, 36, 64, 66, 73], "link": [6, 63], "togeth": [6, 70, 72], "mani": [6, 14, 15, 21, 36, 39, 55, 56, 58, 61, 64, 66, 69, 72, 73], "conveni": [6, 66], "creation": [6, 7], "compound": [6, 66], "__add__": 6, "arraylik": 6, "__div__": 6, "One": [6, 15, 21, 31, 45, 66], "divid": [6, 9, 22, 31, 57, 59], "__eq__": 6, "self": [6, 8, 15, 19, 66], "__ge__": 6, "__le__": 6, "__lshift__": 6, "__matmul__": 6, "__mul__": 6, "__pow__": 6, "__radd__": 6, "__rdiv__": 6, "__rlshift__": 6, "__rmatmul__": 6, "__rmul__": 6, "__rrshift__": 6, "__rshift__": 6, "__rsub__": 6, "__rtruediv__": 6, "__sub__": 6, "__truediv__": 6, "miss": [6, 36, 42, 49], "dict": [6, 7, 8, 9, 10, 11, 12, 15, 22, 26, 60, 66], "is_affin": [6, 69], "is_concav": [6, 69], "is_const": [6, 69], "is_convex": [6, 47, 69], "disciplin": [6, 7, 14, 27, 44, 47, 52, 54, 60, 71, 72, 73], "parametr": [6, 7, 15, 21, 71, 72, 73], "ruleset": [6, 7, 68, 69, 73], "involv": [6, 7, 13, 15, 26, 61, 66, 69, 72], "is_dgp": [6, 7, 44, 46, 47, 48, 50, 66, 68], "is_dpp": [6, 7], "context": [6, 7, 26, 47, 68], "parameter": [6, 10, 12, 15, 34, 73], "is_dqcp": [6, 7, 52, 54, 69], "dqcp": [6, 7, 52, 53, 54, 71, 73], "is_log_log_affin": [6, 47, 68], "is_log_log_concav": [6, 47, 68], "is_log_log_convex": [6, 68], "is_nonneg": 6, "is_nonpo": 6, "is_zero": 6, "iter": [6, 7, 13, 20, 22, 23, 26, 27, 30, 33, 36, 46, 53, 66], "nonpo": [6, 12, 66, 67, 72], "nsd": [6, 66], "hermitian": [6, 66], "sparsiti": [6, 34, 56, 59, 66], "carri": [6, 12, 23, 63], "permiss": [6, 10, 12, 15, 63, 66], "contradict": 6, "either": [6, 7, 8, 10, 11, 12, 13, 15, 20, 26, 32, 62, 63, 66, 67, 69, 72, 73], "entir": [6, 19, 66, 72], "tuplewith": [6, 66], "fix": [6, 13, 15, 21, 26, 30, 34, 35, 46, 62, 66, 73], "pattern": [6, 9, 20, 34, 66], "sensibl": [6, 66], "idiom": [6, 7, 66], "round": [6, 24, 57], "project_and_assign": [6, 66], "var_id": 6, "kwarg": [6, 7, 13, 15, 66], "declar": [6, 37, 68], "hyper": [6, 58], "machin": [6, 14, 15, 60, 61, 62], "learn": [6, 14, 61], "model": [6, 13, 14, 15, 19, 21, 22, 23, 26, 46, 55, 57, 60, 61, 62, 66, 72, 73], "trade": [6, 55, 57, 58, 59, 63, 72], "off": [6, 20, 22, 26, 33, 36, 46, 57, 58, 59, 72, 73], "curv": [6, 13, 22, 57, 59, 72], "raw": [6, 8, 16], "primit": 6, "implicitli": [6, 26, 69], "cast": [6, 26, 51, 70], "col": [6, 33, 36], "callback_param": 6, "callback": 6, "deriv": [6, 7, 20, 25, 27, 28, 30, 33, 34, 35, 45, 63, 66, 73], "enabl": [6, 8, 19, 66, 73], "replac": [6, 11, 26, 33, 47, 56, 59, 63, 68, 72, 73], "automat": [6, 7, 15, 62, 66, 69, 72, 73], "updat": [6, 7, 18, 23, 24, 26, 33, 35, 37, 46, 72, 73], "With": [6, 16, 17, 21, 66], "pq": [6, 70], "callbackparamet": 6, "lambda": [6, 26, 27, 39, 41, 45, 46, 56, 57, 58, 59, 69], "expos": [6, 19, 66], "encapsul": 7, "report": [7, 15, 26, 61, 73], "wa": [7, 8, 9, 13, 25, 36, 45, 53, 56, 61, 62, 63, 66, 72, 73], "infeas": [7, 9, 20, 29, 53, 66, 71, 73], "unbound": [7, 9, 66, 71, 73], "statu": [7, 8, 9, 17, 20, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 40, 46, 53, 66, 72, 73], "immut": [7, 72], "yourself": 7, "want": [7, 15, 29, 32, 34, 38, 44, 62, 66, 72, 73], "add": [7, 15, 19, 20, 26, 32, 33, 62, 63, 69, 70, 73], "exist": [7, 8, 15, 62, 69, 73], "instead": [7, 9, 15, 21, 22, 24, 27, 29, 60, 66, 68, 73], "new_constraint": 7, "queri": [7, 53], "statist": [7, 17, 66, 73], "recent": [7, 62, 66, 68, 69, 73], "invoc": [7, 8, 11], "captur": [7, 19, 72, 73], "size_metr": 7, "solver_stat": [7, 66], "save": [7, 66], "modif": [7, 22, 35, 63], "accessor": 7, "backward": [7, 8, 44, 45, 46, 66, 73], "solut": [7, 10, 11, 12, 15, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 45, 46, 53, 54, 55, 66, 69, 72, 73], "differenti": [7, 14, 44, 45, 46, 64, 66, 73], "obtain": [7, 10, 12, 15, 26, 30, 33, 39, 41, 43, 53, 56, 58, 63, 66, 68, 69, 70], "word": [7, 58, 66], "calcul": [7, 20, 31, 34, 66], "sensit": [7, 20, 45, 55, 71, 73], "perturb": [7, 26, 44, 66], "integr": [7, 15, 33, 53, 66], "toolkit": 7, "popul": [7, 9, 44, 66], "It": [7, 9, 13, 15, 24, 26, 33, 40, 47, 53, 54, 56, 58, 60, 61, 66, 67, 68, 70, 72, 73], "requires_grad": [7, 44, 45, 66], "ep": [7, 10, 26, 36, 45, 66], "dx": [7, 27, 66], "dp": [7, 66], "test": [7, 29, 56, 57, 58, 59, 60, 72], "assert_allclos": 7, "easili": [7, 15, 17, 19, 21, 36, 66, 72], "almost": [7, 36], "analyt": [7, 21, 66], "compliant": [7, 9, 12, 52, 66], "chain": [7, 44, 60, 66, 72], "Then": [7, 15, 17, 21, 29, 41, 66], "dz": 7, "chosen": [7, 29, 34, 57, 66], "correspond": [7, 9, 15, 25, 26, 34, 36, 38, 41, 43, 44, 50, 51, 56, 58, 62, 66, 68, 70], "custom": [7, 64, 71], "interpret": [7, 9, 23, 26, 37, 56, 72], "solvererror": [7, 22, 72, 73], "tell": [7, 15, 66, 72], "chang": [7, 8, 15, 17, 20, 26, 39, 41, 43, 44, 45, 63, 66, 71], "delta": [7, 20, 29, 33, 35, 44, 45, 48, 53, 66], "unspecifi": [7, 11, 66], "compat": [7, 8, 15, 34, 66], "2e": [7, 24, 27, 28, 33, 45, 66], "get_problem_data": [7, 66], "gp": [7, 29, 44, 45, 46, 47, 48, 49, 50, 51, 64, 66, 68], "enforce_dpp": [7, 66], "ignore_dpp": [7, 66], "verbos": [7, 8, 24, 26, 27, 28, 32, 33, 36, 46, 53, 66, 69, 73], "canon_backend": [7, 10, 12, 66], "solver_opt": [7, 8], "data": [7, 8, 9, 10, 11, 15, 18, 23, 27, 31, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 57, 59, 61, 62, 66, 72], "enclos": [7, 63], "solvingchain": [7, 66], "compil": [7, 8, 63, 66, 73], "target": [7, 8, 11, 13, 15, 19, 20, 23, 66, 73], "dictionari": [7, 10, 12, 26, 66], "were": [7, 14, 32, 56, 66, 73], "howev": [7, 15, 19, 21, 24, 26, 29, 33, 35, 47, 62, 63, 66, 70, 73], "intermedi": 7, "further": [7, 65, 66, 73], "interfac": [7, 9, 62, 63, 64, 66], "invok": [7, 8, 15, 66], "solve_via_data": [7, 8, 15, 66], "thin": [7, 66], "around": [7, 15, 21, 26, 66], "extern": [7, 66], "process": [7, 14, 15, 23, 29, 45, 66, 72], "unpack_result": [7, 66], "recov": [7, 9, 15, 24, 26, 32, 33, 36, 56, 62, 66, 73], "inverse_data": [7, 8, 10, 11, 12, 66], "sc": [7, 15, 20, 22, 27, 30, 36, 45, 46, 61, 62, 64, 66, 69, 73], "soln": [7, 66], "unpack": [7, 11, 66, 72], "bypass": [7, 66], "probdata": [7, 66], "cone_dim": [7, 15, 66], "soc": [7, 9, 10, 12, 15, 36, 43, 53, 55, 66], "structur": [7, 8, 9, 15, 19, 55, 66], "depend": [7, 15, 33, 46, 62, 66, 67, 69, 70, 73], "pars": [7, 66], "dpperror": [7, 66], "thrown": [7, 66], "try": [7, 15, 21, 22, 26, 32, 33, 47, 60, 66, 67, 69, 72, 73], "just": [7, 9, 13, 15, 26, 35, 44, 47, 56, 66, 68, 69, 72], "warn": [7, 36, 66, 73], "cpp": [7, 66], "backend": [7, 61, 62, 71, 73], "affect": [7, 10, 12, 66, 69], "select": [7, 9, 26, 35, 36, 58, 59, 62, 66, 70], "output": [7, 8, 9, 12, 15, 17, 24, 37, 45, 46, 68, 69, 70], "pass": [7, 9, 15, 22, 66, 68, 69], "overrid": [7, 15, 66], "lowest": 7, "invers": [7, 8, 11, 34, 49, 51], "invalid": [7, 67], "mild": [7, 66], "subsequ": [7, 8, 44, 63, 66], "much": [7, 9, 15, 21, 22, 66], "faster": [7, 66, 72], "document": [7, 8, 9, 15, 62, 63, 66, 73], "www": [7, 10, 12, 15, 24, 27, 33, 47, 63], "org": [7, 10, 12, 15, 47, 63], "html": [7, 27, 47, 66], "complianc": [7, 10, 12, 15, 63], "is_qp": 7, "classmethod": 7, "register_solv": 7, "func": [7, 70], "keyword": [7, 13, 15, 44, 66, 68, 69], "execut": [7, 9, 30, 63], "eco": [7, 15, 24, 27, 33, 35, 36, 61, 62, 64, 66], "osqp": [7, 26, 33, 46, 61, 62, 64, 66], "hide": [7, 66], "qcp": [7, 52, 53, 54, 66, 69], "quasiconvex": [7, 14, 20, 29, 52, 54, 61, 66, 71, 73], "wide": 7, "stop": [7, 66], "criteria": 7, "strategi": 7, "improv": [7, 8, 15, 21, 33, 34, 56, 58, 63], "qualiti": 7, "There": [7, 29, 32, 47, 55, 57], "satisfactori": 7, "done": [7, 25, 46, 66, 73], "prob": [7, 9, 13, 15, 17, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 59, 61, 66, 67, 72, 73], "abstol": [7, 24, 33, 66], "6": [7, 15, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 41, 45, 46, 51, 53, 54, 62, 66, 72, 73], "max_it": [7, 18, 23, 26, 30, 33, 36, 45, 46, 66], "10000": [7, 30, 45, 46], "mydict": 7, "msk_dpar_intpnt_co_tol_near_rel": 7, "mosek": [7, 15, 62, 64, 66, 73], "mosek_param": [7, 66], "why": [7, 13, 26, 66, 73], "dcperror": [7, 47], "dgperror": 7, "suitabl": [7, 15], "among": 7, "instal": [7, 15, 40, 52, 54, 60, 61, 66, 73], "unanticip": 7, "encount": [7, 15, 60, 66, 73], "state": [7, 8, 9, 10, 11, 12, 15, 33, 63, 68], "primal": [7, 9, 15, 36, 66], "fail": [7, 15, 17, 20, 22, 27, 31, 60, 66, 69, 72], "compilation_tim": 7, "took": [7, 66], "shallow": [7, 60], "copi": [7, 10, 12, 15, 22, 26, 33, 37, 63], "reassign": 7, "append": [7, 19, 20, 26, 32, 33, 35, 36, 42, 43, 46, 50, 53, 56, 57, 58, 59, 66, 72], "undefin": [7, 20], "behavior": [7, 66, 73], "suffix": 7, "inaccur": [7, 15, 66], "variou": [7, 21, 45], "metric": [7, 36, 66], "regard": [7, 8, 20, 63], "num_scalar_vari": 7, "num_scalar_data": 7, "appar": 7, "num_scalar_eq_constr": 7, "num_scalar_leq_constr": 7, "max_data_dimens": 7, "longest": 7, "max_big_small_squar": 7, "big": [7, 73], "smaller": [7, 21, 26, 66], "solver_nam": 7, "solve_tim": [7, 53, 66], "setup_tim": [7, 53], "num_it": [7, 53, 66], "extra_stat": [7, 66], "miscellan": 7, "doubl": [7, 15, 16], "setup": [7, 23, 35, 36, 66], "had": [7, 26, 59, 62], "go": [7, 15, 26, 32], "extra": [7, 15, 60, 62], "typic": [7, 32, 36], "from_dict": 7, "attr": [7, 8, 53], "moder": [8, 73], "amount": [8, 15, 19, 37, 39, 45, 66, 73], "effort": [8, 15, 55, 73], "rewrit": [8, 14, 26, 29, 31, 66, 73], "system": [8, 14, 22, 24, 26, 31, 33, 35, 45, 46, 50, 55, 60, 62, 63, 66, 67], "inde": 8, "sure": [8, 15, 16, 66, 72], "flexibl": [8, 9, 19], "capabl": [8, 66], "preserv": [8, 70], "public": [8, 61, 73], "aspect": [8, 26, 32, 48], "notic": [8, 15, 44, 47, 57, 58, 59, 63, 66, 72], "futur": [8, 20, 73], "releas": [8, 61, 62, 73], "contributor": [8, 15, 63], "curiou": 8, "okai": 8, "contact": [8, 15], "direct": [8, 15, 20, 23, 26, 53, 63, 66], "care": [8, 46, 60], "forward": [8, 33, 66], "categori": [8, 73], "terminologi": 8, "classifi": [8, 55, 57, 66], "middl": [8, 22], "back": [8, 15, 23, 73], "simplifi": [8, 26], "wherea": [8, 33, 56], "mode": [8, 45], "breakdown": 8, "complex2r": 8, "cvxattr2constr": 8, "dgp2dcp": 8, "canonicalize_expr": [8, 9, 10, 11], "evalparam": 8, "flipobject": 8, "dcp2cone": [8, 11], "canonicalize_tre": [8, 9, 10], "qp2symbolicqp": [8, 12], "dualiz": [8, 15, 66, 73], "slack": [8, 15, 66], "exchang": 8, "opt_val": [8, 53], "primal_var": [8, 53], "dual_var": [8, 53], "miscellen": 8, "propag": [8, 60], "actor": 8, "By": [8, 24, 26, 44, 45, 56, 66, 70], "proce": 8, "retriev": [8, 10, 11, 12, 66], "own": [8, 63, 69, 73], "proven": 8, "possibli": [8, 9], "__init__": [8, 15, 19], "inversedata": [8, 10, 11], "emit": 8, "previous": [8, 26, 73], "logic": 8, "singl": [8, 9, 13, 15, 26, 33, 56, 58, 68, 70], "1th": 8, "whehter": 8, "yield": [8, 48, 58], "start": [8, 13, 15, 20, 23, 26, 29, 33, 46, 62, 70, 71, 73], "solving_chain": 8, "prepend": 8, "warm_start": [8, 66], "warm": [8, 26, 33, 46, 71, 73], "solver_chain": 8, "necessarili": [8, 59, 63, 66], "best": [9, 29, 35, 66], "piecewis": [9, 12, 27], "closer": [9, 15], "what": [9, 15, 21, 26, 61, 68, 69, 71, 73], "befor": [9, 10, 11, 12, 15, 21, 26, 27, 66, 73], "readi": 9, "disclaim": [9, 10, 11, 12, 63], "quad_obj": [9, 10], "minim": [9, 10, 11, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72], "affine_abov": [9, 10], "path": [9, 10, 15, 29, 32, 50, 57, 59, 62], "recurs": [9, 10], "qp2quad_form": 9, "qp2symbolic_qp": 9, "consist": [9, 12, 13, 15, 21, 23, 32, 33, 61, 63, 66, 73], "qp": [9, 12, 15, 26, 33, 46, 66, 73], "cone2con": 9, "affine2direct": 9, "easier": [9, 63, 73], "purpos": [9, 13, 15, 26, 63, 72], "pretend": 9, "paramconeprog": [9, 10], "apply_paramet": [9, 10, 12, 15], "format_constraint": [9, 15], "respons": [9, 22, 25, 63], "thing": [9, 26, 72], "k_dir": 9, "sever": [9, 15, 49, 51, 66, 68, 73], "accord": [9, 20, 62, 66], "elementari": [9, 15], "appear": [9, 14, 15, 60, 62, 63, 66], "necessari": [9, 15, 44, 62], "strong": 9, "dualiti": [9, 13, 26], "hold": [9, 13, 35, 39, 41, 43, 47, 63, 66, 67, 68, 73], "feasibl": [9, 15, 20, 29, 35, 43, 53, 66], "written": [9, 17, 25, 26, 62, 63, 66, 67, 70], "agnost": 9, "consider": [9, 15, 44, 45], "static": [9, 12, 73], "inv_data": 9, "trivial": [9, 15, 33, 39, 41, 66], "enum": 9, "free": [9, 36, 53, 60, 63, 66], "fr": 9, "dual_exp": 9, "de": [9, 25], "subject": [9, 10, 12, 17, 18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 63, 66], "under": [9, 10, 12, 15, 22, 29, 44, 45, 63, 66, 67, 68, 69, 73], "lift": [9, 11, 53], "constitu": 9, "impli": [9, 10, 12, 15, 57, 63, 66], "py": [9, 15, 26, 66], "expcon": [9, 15], "aff": 9, "dir": [9, 15], "k_aff": 9, "built": [9, 60, 61, 64, 66, 70], "forth": [9, 15], "ad": [9, 15, 22, 37, 38, 58, 60, 61, 66, 67, 73], "yet": [9, 73], "intend": [9, 66], "lead": [9, 58], "bool_idx": 9, "int_idx": 9, "orthant": 9, "remov": [9, 26, 32, 73], "copyright": [10, 12, 15, 63], "2013": [10, 12], "steven": [10, 12, 14, 60, 61, 63], "licens": [10, 12, 66], "apach": [10, 12, 15, 63, 66], "unless": [10, 12, 15, 63, 72], "law": [10, 12, 15, 53, 63], "agre": [10, 12, 15, 63], "AS": [10, 12, 15, 63], "basi": [10, 12, 15, 35, 63, 66, 73], "warranti": [10, 12, 15, 63], "OR": [10, 12, 15, 62, 63, 73], "condit": [10, 12, 15, 21, 29, 47, 58, 63, 66, 67, 68, 69], "OF": [10, 12, 15, 63], "kind": [10, 12, 15, 63], "languag": [10, 12, 14, 15, 60, 61, 63, 64, 72], "govern": [10, 12, 15, 63], "limit": [10, 12, 13, 15, 19, 20, 26, 27, 32, 45, 48, 63, 66, 69], "conedim": [10, 12, 15], "constr_map": [10, 12, 15], "present": [10, 12, 15, 25, 68, 69, 73], "format": [10, 12, 15, 17, 18, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 63, 66, 73], "eq_dim": 10, "exp_dim": 10, "leq_dim": 10, "p3d_dim": 10, "p3": 10, "psd_dim": 10, "soc_dim": 10, "conematrixstuf": 10, "matrixstuf": [10, 12], "ordered_constraint": 10, "stuf": 10, "stuff": 10, "stuffed_object": [10, 12], "extractor": [10, 12], "var_id_to_col": [10, 12], "param_id_to_col": [10, 12], "paramprob": [10, 12], "px": [10, 12, 17], "cone_constr1": 10, "a_1": [10, 12, 42, 47, 68], "b_1": [10, 12, 42], "cone_constrk": 10, "a_i": [10, 12, 15, 20, 24, 25, 32, 38, 39, 43, 47, 60, 68], "b_i": [10, 12, 15, 26, 38, 39, 42, 43, 60], "offset": [10, 12, 46, 59], "apply_param_jac": [10, 12], "delc": 10, "dela": [10, 12], "delb": [10, 12], "active_param": [10, 12], "jacobian": [10, 12, 66], "dparam": [10, 12], "id_to_param_valu": [10, 12], "zero_offset": [10, 12], "keep_zero": [10, 12], "explicit": [10, 12, 15, 66], "is_mixed_integ": [10, 12], "split_adjoint": [10, 12], "del_var": [10, 12], "adjoint": [10, 12, 44, 66], "split_solut": [10, 12], "sltn": [10, 12], "active_var": [10, 12], "split": [10, 12, 23, 25, 26, 29, 33, 36, 46, 66], "individu": [10, 12, 63], "2017": [10, 12, 36, 63], "akshai": [10, 14, 61], "agraw": [10, 14, 61], "robin": [10, 12, 14, 61], "verschueren": [10, 12, 14, 61], "regardless": [11, 66, 68], "wish": [11, 66], "cvx_attr2constr": 11, "x1": [11, 68, 70], "x2": 11, "x3": 11, "monomi": [11, 47, 66, 68], "x_2": [11, 22, 46, 47, 68], "x_3": 11, "posynomi": [11, 45, 47, 68], "dgp_problem": 11, "gp2dcp": 11, "dcp_problem": 11, "eval_param": 11, "parametererror": 11, "flip_object": 11, "flip": [11, 13], "vice": [11, 21], "versa": [11, 21], "2016": [12, 14, 60], "jaehyun": [12, 61], "park": [12, 61], "paramquadprog": 12, "tx": [12, 21, 32, 38, 39, 41, 43], "equality_constr1": 12, "equality_constrk": 12, "delp": 12, "delq": 12, "qpmatrixstuf": 12, "fill": [12, 55], "quadform": 12, "exclus": [12, 63], "docstr": [12, 16], "beyond": [13, 30, 66, 73], "conform": 13, "fundament": [13, 55, 60], "analysi": [13, 55, 67, 68, 69, 71, 73], "extrem": 13, "fenchel": 13, "auxiliari": [13, 46], "standard_norm": 13, "rand": [13, 21, 24, 26, 28, 30, 33, 34, 40], "formal": [13, 70, 73], "supremum": 13, "sup": [13, 17], "wikipedia": 13, "__call__": 13, "pareto": [13, 60], "moreov": 13, "boundari": [13, 20, 21], "attain": 13, "weighted_sum": 13, "interpol": 13, "targets_and_prior": 13, "prioriti": [13, 15], "off_target": 13, "05": [13, 20, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36, 46, 50, 53, 66], "penalti": [13, 33, 56, 58], "within": [13, 15, 24, 26, 29, 33, 43, 53, 63, 66], "trang": 13, "hard": [13, 24, 26, 32], "err_tol": 13, "tight": [13, 24, 26, 33], "heurist": [13, 26, 34, 66], "partial_optim": 13, "opt_var": 13, "dont_opt_var": 13, "partialproblem": 13, "stage": [13, 15, 26, 32], "graph": [13, 19, 26, 52, 64], "abs_x": 13, "entrywis": 13, "publish": [14, 60], "encourag": [14, 15, 56, 58, 59, 60, 73], "accompani": [14, 68, 69, 73], "jmlr": 14, "mloss": 14, "jcd": 14, "bibtex": [14, 60], "articl": [14, 60], "diamond2016cvxpi": 14, "author": [14, 15, 17, 29, 31, 37, 60, 63], "stephen": [14, 24, 30, 60, 61], "titl": [14, 20, 22, 24, 25, 34, 37, 56, 58, 60, 63, 72], "ython": [14, 60], "embed": [14, 19, 60, 61, 64, 72], "journal": [14, 60], "research": [14, 60, 61], "year": [14, 60, 61, 73], "volum": [14, 55], "83": [14, 48], "agrawal2018rewrit": 14, "decis": [14, 15, 24, 26, 32, 64, 66], "2018": [14, 26, 33], "42": [14, 22], "featur": [14, 15, 20, 38, 57, 58, 59, 60, 61, 71], "develop": [14, 61, 62, 65, 66, 73], "These": [14, 17, 26, 29, 45, 55, 66, 68, 70, 72, 73], "agrawal2019dgp": 14, "letter": 14, "springer": 14, "berlin": 14, "heidelberg": 14, "2019": [14, 46], "961": 14, "976": 14, "agrawal2020dqcp": 14, "2020": 14, "inproceed": 14, "agrawal2019differenti": 14, "layer": [14, 46, 64, 66], "amo": 14, "brandon": 14, "barratt": [14, 46], "shane": [14, 46], "kolter": 14, "zico": 14, "booktitl": 14, "neural": 14, "9558": 14, "9570": 14, "agrawal2020differenti": 14, "arxiv": 14, "archiveprefix": 14, "eprint": 14, "2004": [14, 63], "12553": 14, "primaryclass": 14, "oc": 14, "welcom": [15, 62], "don": [15, 36, 63, 66, 72], "expert": [15, 55], "answer": 15, "discord": [15, 61], "discuss": [15, 26, 60, 61, 63, 66, 72], "stackoverflow": [15, 60], "address": 15, "todo": [15, 20, 34], "typo": 15, "websit": [15, 47, 60, 62, 66], "brows": [15, 61], "tracker": [15, 60, 61], "unassign": 15, "bug": [15, 60, 61, 73], "request": [15, 60, 61, 68, 69], "polish": [15, 26, 33, 46], "librari": [15, 47, 49, 50, 51, 61, 62, 64, 67, 68, 72], "align": [15, 33, 53], "ve": [15, 60, 73], "identifi": [15, 24, 63], "opportun": 15, "next": [15, 26, 30, 32, 44, 45, 46, 54, 57, 59, 66, 73], "conduct": [15, 22], "overal": 15, "guid": [15, 61], "rest": [15, 57, 59, 73], "exhaust": [15, 61], "promin": [15, 63], "roughli": 15, "categor": 15, "medium": [15, 63], "larg": [15, 27, 33, 36, 47, 64, 66], "scope": 15, "focu": 15, "maintain": [15, 21, 33, 60, 61, 73], "cosmo": 15, "jl": [15, 64], "1161": 15, "interior": [15, 26, 62, 66], "sdp": [15, 22, 42, 66, 73], "1093": 15, "1419": 15, "post": [15, 37, 60], "citat": [15, 60], "1223": 15, "serial": 15, "532": 15, "1333": 15, "1438": 15, "pretti": 15, "summar": [15, 68], "10x": 15, "memori": 15, "usag": [15, 66], "cvxcore": [15, 66, 73], "especi": [15, 45], "broadcast": [15, 23, 55, 67, 73], "break": [15, 26, 29, 32, 67], "fork": [15, 62], "repositori": [15, 62], "configur": [15, 20, 62, 63], "git": [15, 62], "offici": [15, 62, 66, 73], "repo": [15, 62], "remot": [15, 23], "upstream": 15, "fetch": 15, "master": [15, 23], "track": [15, 55, 63], "official_mast": 15, "command": [15, 16, 62, 66], "pull": [15, 21, 68, 69], "sync": 15, "huge": 15, "merg": 15, "conflict": 15, "never": [15, 66, 69], "switch": [15, 66, 73], "checkout": 15, "resum": 15, "send": [15, 23], "adher": 15, "unittest": 15, "doesn": [15, 66, 67, 73], "introduc": [15, 44, 47, 61, 66, 69, 73], "onc": [15, 20, 53, 66], "member": 15, "team": [15, 26], "themselv": 15, "review": [15, 73], "complet": [15, 34, 42, 53, 55, 66, 72, 73], "trigger": 15, "continu": [15, 26, 56, 62, 66, 73], "platform": [15, 62], "commit": 15, "ruff": 15, "navig": [15, 62], "pip": [15, 40, 52, 54, 62, 66], "abid": 15, "convent": [15, 73], "pre": [15, 24, 27, 28, 33, 66], "presenc": [15, 26, 33], "insuffici": 15, "live": [15, 21], "directori": [15, 19, 62], "framework": [15, 73], "organ": 15, "basetest": 15, "base_test": 15, "test_": 15, "pytest": [15, 62], "cd": 15, "test_dgp": 15, "testdgp": 15, "test_product": 15, "caus": [15, 21, 26, 63], "suppress": 15, "stdout": 15, "flag": [15, 67, 68, 69], "test_benchmark": 15, "parti": [15, 63], "lifeblood": 15, "grate": 15, "anyon": 15, "willing": 15, "volunt": 15, "warrant": 15, "coordin": [15, 33], "princip": 15, "outlin": 15, "forthcom": 15, "far": 15, "tri": 15, "cover": [15, 26, 32, 65, 66, 73], "essenti": 15, "spectacular": 15, "feedback": [15, 68, 69], "keep": [15, 26, 36, 60], "date": [15, 27, 63], "prompt": [15, 60], "codepath": 15, "conic_solv": [15, 66], "conicsolv": [15, 66], "awesom": 15, "awesomepi": 15, "awesome_conif": 15, "folder": 15, "manag": [15, 62, 63, 73], "interact": [15, 67, 68, 69], "six": 15, "import_solv": [15, 66], "easi": [15, 26, 73], "remain": [15, 21, 26, 57, 59, 62, 63, 73], "goal": [15, 26, 32, 33, 39, 45, 47, 49, 50, 52, 57, 58, 59], "close": [15, 21, 26, 32, 35, 38, 44, 46, 60, 66, 73], "kept": 15, "short": [15, 61, 73], "ll": [15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 67, 73], "situat": [15, 73], "glpk": [15, 62, 64, 66], "orient": [15, 26, 55], "look": [15, 19, 20, 21, 26, 36, 67], "someth": 15, "gurobi": [15, 62, 64, 66, 73], "nag": [15, 62, 66], "nontrivi": 15, "properli": [15, 58], "moment": 15, "concret": [15, 73], "doteq": 15, "subset": [15, 26, 35, 36, 42], "k_e": 15, "pow": [15, 46, 66], "later": [15, 22, 26, 34], "now": [15, 20, 21, 26, 29, 31, 53, 66, 70, 73], "powcone3d": [15, 66, 73], "exp_cone_ord": 15, "dure": 15, "recoveri": 15, "step": [15, 18, 20, 22, 24, 29, 32, 33, 36, 37, 46, 62, 66, 73], "understand": [15, 66], "correctli": [15, 60, 73], "cone_matrix_stuf": 15, "eq": 15, "equat": [15, 24, 31, 33, 44, 46, 47, 49, 51, 53, 66], "ineq": 15, "suppos": [15, 18, 19, 21, 23, 34, 41, 44], "good": [15, 21, 24, 34, 57, 59, 66], "idea": [15, 26, 46], "deliber": [15, 63], "psd_format_mat": 15, "noth": [15, 63], "behav": [15, 67], "borrow": 15, "ident": [15, 26, 29, 36, 66], "consecut": 15, "p3d": 15, "tripl": 15, "nonlinear": [15, 40, 66], "permut": 15, "earlier": [15, 20, 73], "nativ": [15, 20, 34, 73], "previou": [15, 26, 66, 73], "statement": [15, 63, 69], "avoid": [15, 73], "introduct": [15, 61, 67], "unnecessari": 15, "therefor": [15, 53, 54, 66], "mention": 15, "lagrangian": [15, 18], "broken": 15, "m_1": 15, "m_6": 15, "mathcal": [15, 26, 36, 38, 39, 40, 41, 42, 43, 44, 46, 66], "mu_1": 15, "mu_6": 15, "mu_i": [15, 45], "mu_2": 15, "m_2": 15, "k_i": [15, 23], "m_i": [15, 68, 70], "denot": [15, 17, 26, 29, 38, 42, 45, 46, 47, 49, 66, 68, 69, 70], "remark": [15, 66], "particularli": [15, 66], "comment": [15, 20, 62, 63], "thread": [15, 45, 66], "helper": 15, "util": [15, 31, 66], "isn": 15, "edit": [15, 62, 66], "content": [15, 63], "clear": [15, 26], "test_conic_solv": 15, "overwhelm": 15, "line": [15, 19, 20, 24, 25, 26, 32, 46, 53, 62, 66], "solver_test_help": 15, "standardtestsdp": 15, "staticmethod": 15, "def": [15, 17, 19, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 37, 44, 46, 56, 57, 58, 66, 72], "test_sdp_1min": 15, "sth": 15, "sdp_1": 15, "verify_object": 15, "digit": 15, "record": [15, 59, 66], "check_primal_feas": 15, "check_complementar": 15, "check_dual_domain": 15, "standardtestsocp": 15, "test_socp_0": 15, "socp_0": 15, "verify_primal_valu": 15, "test_mi_socp_1": 15, "mi_socp_1": 15, "predefin": 15, "partli": [15, 62], "solvertesthelp": 15, "test_mosek_lp_1": 15, "standardtestlp": 15, "test_lp_1": 15, "basic": [15, 61, 65, 66, 72], "bf": [15, 36, 57, 59, 66, 70], "latex": 16, "backslash": 16, "robert": [17, 29, 31, 37], "gower": [17, 29, 31, 37], "roger": [17, 29, 31, 37], "hill": [17, 29, 31, 37], "sami": [17, 29, 31, 37], "al": [17, 29, 31, 37], "izzi": [17, 29, 31, 37], "timothi": [17, 29, 31, 37], "pollington": [17, 29, 31, 37], "keith": [17, 29, 31, 37], "brigg": [17, 29, 31, 37], "vandenbergh": [17, 22, 29, 31, 34, 35, 37, 48, 50, 60, 61, 66], "exercis": [17, 26, 29, 31, 63], "57": 17, "207": 17, "memoryless": 17, "transit": [17, 73], "probabl": [17, 24, 26, 57, 60], "p_": [17, 31, 50], "x_j": [17, 26, 39, 68], "shannon": 17, "mutual": 17, "sup_x": 17, "y_i": [17, 34, 46, 57, 59, 70], "log_2y_i": 17, "log_2p_": 17, "minimis": [17, 29, 31, 37], "due": [17, 24, 32, 44, 66, 72, 73], "quit": [17, 58], "usr": [17, 29, 31, 37], "bin": [17, 29, 31, 37], "env": [17, 26, 29, 31, 37, 66], "python3": [17, 26, 29, 31, 37], "xlogi": 17, "channel_capac": 17, "sum_x": [17, 37], "\u2119": 17, "\u211d": 17, "log_2": [17, 31], "becom": [17, 19, 20, 32, 34, 35, 47, 73], "c_j": [17, 26, 39], "greater": [17, 45, 62, 66, 69, 73], "nan": [17, 29, 31, 37, 66], "signal": [17, 24, 27, 29, 31, 50], "maximis": [17, 29, 31, 37], "els": [17, 20, 22, 26, 29, 30, 37, 45], "pmatrix": 17, "75": [17, 26, 32], "set_printopt": [17, 29, 31, 37], "4g": [17, 29, 31, 37], "1887": 17, "mbox": [18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54], "augment": 18, "rho": [18, 23, 26, 33, 45, 46, 66, 72], "2_2": [18, 23, 24, 33], "g_": [18, 29, 50], "inf_x": 18, "ascent": 18, "lll": [18, 23, 46], "mathop": [18, 23, 36, 70], "rm": [18, 23, 59], "argmin": [18, 20, 23, 46, 57], "script": [18, 61, 68, 69, 73], "seed": [18, 20, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 54, 56, 57, 58, 59, 61, 66, 72], "randn": [18, 21, 24, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 46, 54, 56, 57, 58, 59, 61, 66, 72], "resid": 18, "aug_lagr": 18, "5905035557463005": 18, "572761551213633": 18, "simpler": 19, "tradit": [19, 73], "flow": [19, 53], "edg": [19, 26, 32, 73], "explicitli": [19, 63, 66, 73], "incid": 19, "enter": [19, 26, 44, 66], "leav": [19, 66], "sink": [19, 26], "capac": [19, 37, 55], "frame": 19, "undirect": 19, "connect": [19, 26, 32], "in_nod": 19, "out_nod": 19, "edge_flow": 19, "node1": 19, "node2": 19, "accumul": [19, 73], "refram": 19, "electr": 19, "grid": [19, 20, 21, 22, 26, 32], "consum": 19, "station": 19, "energi": 19, "storag": 19, "facil": 19, "contribut": [19, 61, 62, 63], "loss": [19, 23, 39, 46, 56, 58, 59, 63], "transmiss": 19, "seri": [19, 27, 35, 73], "judson": [20, 22, 25, 27, 28, 30, 34, 35, 61], "wilson": [20, 22, 25, 27, 28, 30, 34, 35, 61], "2014": [20, 22, 25, 27, 28, 30, 34, 35, 66], "adapt": [20, 21, 22, 25, 26, 27, 28, 30, 33, 34, 35, 46, 48, 50], "signific": [20, 34], "cvx": [20, 21, 22, 25, 27, 28, 30, 34, 35, 50, 64], "almir": [20, 25, 35, 50], "mutapc": [20, 25, 35, 50], "2006": [20, 22, 25, 35], "topic": [20, 22, 25, 27, 34, 35], "lectur": [20, 25, 26, 32], "ee364": [20, 25], "synthesi": 20, "lebret": 20, "unit": [20, 32, 34, 39, 53], "obei": 20, "sidelob": 20, "beam": 20, "theta_": 20, "tar": 20, "bw": 20, "occupi": [20, 26, 60], "angular": 20, "theta_b": 20, "theta": [20, 46, 67, 68], "t_": [20, 22], "sb": 20, "foral": [20, 32, 67, 68], "notin": [20, 42], "gain": [20, 29, 50], "sideband": 20, "threshold": [20, 24, 34, 35, 46, 50], "shade": 20, "coeffici": [20, 21, 25, 53, 56, 57, 59], "spec": [20, 25], "refin": [20, 66], "counterpart": 20, "uniform": [20, 26], "array_geometri": 20, "2d_random": 20, "1d_uniform_lin": 20, "2d_uniform_lattic": 20, "lambda_wl": 20, "wavelength": 20, "theta_tar": 20, "min_sidelob": 20, "db": [20, 25, 44], "max_half_beam": 20, "50": [20, 21, 22, 27, 33, 35, 36, 46, 56, 57, 58, 63, 66], "half": 20, "randomli": [20, 30, 32, 36, 57, 59], "locat": [20, 26, 32, 33, 53], "repeat": [20, 28, 29, 30, 32, 34, 35, 37, 66], "experi": [20, 34, 35], "uniformli": 20, "36": [20, 22, 35], "loc": [20, 21, 25, 35, 37, 56, 57, 58, 59], "inter": 20, "space": [20, 35, 48, 66], "elif": 20, "ie": [20, 47], "360": 20, "co": [20, 21], "180": 20, "sin": 20, "ind_closest": 20, "atar": 20, "halfbeam_bot": 20, "halfbeam_top": 20, "width": [20, 22, 26, 48, 53], "sampl": [20, 22, 25, 34, 46], "angl": [20, 25], "degre": [20, 66], "resolut": 20, "until": [20, 29, 32, 58], "uncertainti": [20, 24], "halfbeam_cur": 20, "ceil": [20, 69], "stopband": 20, "ind": [20, 22, 33], "squeez": [20, 46], "logical_or": 20, "bj": 20, "atar_r": 20, "atar_i": 20, "neg_atar_i": 20, "atar_ri": 20, "as_r": 20, "as_i": 20, "neg_as_i": 20, "as_ri": 20, "as_ri_top": 20, "as_ri_bot": 20, "realones_ri": 20, "w_ri": 20, "as_ri_row": 20, "cvxopt": [20, 22, 27, 28, 34, 35, 36, 60, 62, 64, 66, 73], "degress": 20, "halfbeam": 20, "optimum": [20, 26], "nois": [20, 24, 29, 31, 32, 33, 46, 50, 58], "hens": 20, "26": [20, 22, 30, 33, 34], "6616084212553195": 20, "matplotlib": [20, 21, 22, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 46, 52, 53, 56, 57, 58, 59, 66, 72], "pyplot": [20, 21, 22, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 46, 52, 53, 56, 57, 58, 59, 66, 72], "plt": [20, 21, 22, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 46, 52, 53, 56, 57, 58, 59, 66, 72], "inlin": [20, 21, 22, 25, 27, 30, 34, 35, 36, 37, 46, 53, 56, 57, 58, 59], "ipython": [20, 21, 22, 25, 27, 30, 34, 35, 60], "rc": [20, 22, 25, 27, 29, 30, 34, 35, 66, 72], "usetex": [20, 22, 25, 27, 30, 34, 35, 66, 72], "font": [20, 22, 24, 25, 26, 27, 30, 33, 34, 35, 37, 66, 72], "famili": [20, 22, 25, 27, 30, 34, 35, 64, 66, 72], "serif": [20, 22, 25, 27, 30, 34, 35, 66, 72], "figur": [20, 21, 22, 25, 26, 27, 32, 34, 35, 46, 66, 67, 72], "figsiz": [20, 21, 22, 24, 25, 26, 27, 32, 33, 34, 35, 36, 66, 72], "scatter": [20, 23], "facecolor": 20, "edgecolor": [20, 26], "fontsiz": [20, 22, 34, 35, 56, 57, 58, 59, 66, 72], "tight_layout": [20, 35, 72], "w_im": 20, "a_r": [20, 25], "neg_a_i": 20, "a_ri": 20, "dot": [20, 21, 22, 24, 25, 26, 28, 30, 32, 33, 34, 35, 56, 58, 59, 70], "ymin": [20, 26, 32], "ymax": [20, 26, 32], "40": [20, 22, 35, 40], "arang": [20, 21, 25, 27, 31, 37], "log10": [20, 25], "xlabel": [20, 21, 22, 25, 27, 30, 35, 37, 46, 56, 57, 58, 59, 66, 72], "ylabel": [20, 21, 22, 25, 27, 30, 35, 37, 46, 57, 66, 72], "mag": 20, "ylim": [20, 22, 25, 35, 37], "zerodb": 20, "dby": 20, "xlim": [20, 22, 25, 35, 37], "1f": [20, 66], "lobe": 20, "center": [20, 21, 26], "theta_1": 20, "theta_2": 20, "55": [20, 26, 32, 33], "experiment": [21, 73], "measur": [21, 24, 33, 38, 46], "lifespan": 21, "mice": 21, "portion": 21, "durat": 21, "studi": [21, 44, 45], "deal": 21, "likelihood": [21, 24, 57], "estim": [21, 24, 26, 27, 33, 41, 46, 55, 56, 58], "mle": 21, "difficult": 21, "well": [21, 22, 26, 32, 33, 35, 58, 66, 73], "overcom": 21, "challeng": [21, 66], "homework": 21, "101": [21, 22, 45], "cours": [21, 73], "notat": 21, "epsilon": [21, 29, 54], "sigma": [21, 24, 26, 29, 33, 41, 42, 46, 50, 56, 58, 59], "underset": 21, "observ": [21, 33, 56, 58, 66], "fulli": [21, 60], "practic": [21, 58, 73], "200": [21, 24, 26, 36], "c_true": [21, 46], "argsort": 21, "y_order": 21, "x_order": 21, "y_censor": 21, "plot": [21, 22, 24, 26, 30, 32, 33, 37, 46, 52, 53, 56, 57, 58, 59, 66, 72], "plot_fit": 21, "fit_label": 21, "bo": 21, "label": [21, 22, 25, 26, 33, 35, 37, 46, 50, 56, 57, 58, 59, 66], "ro": [21, 32, 33], "legend": [21, 24, 25, 35, 37, 46, 56, 57, 58, 59, 66], "linalg": [21, 22, 26, 32, 34, 43, 66], "lstsq": 21, "c_ol": 21, "rcond": 21, "fit_ol": 21, "systemat": 21, "overestim": 21, "red": [21, 26, 32, 36], "cyan": 21, "blue": [21, 32, 36, 67], "exert": 21, "lot": [21, 26], "leverag": 21, "down": [21, 67, 73], "trendlin": 21, "tractabl": [21, 24], "throw": [21, 60, 72], "awai": [21, 66], "dataset": [21, 38, 46, 58], "accomplish": [21, 66], "c_ols_uncensor": 21, "fit_ols_uncensor": 21, "bad_predict": 21, "color": [21, 26, 46], "orang": [21, 46], "marker": 21, "o": [21, 26, 32, 36, 62, 66, 70], "lw": [21, 37], "vastli": 21, "unbias": 21, "glare": 21, "arrang": 21, "predict": [21, 26, 38, 44, 45, 55, 58, 66], "though": [21, 36, 66], "awar": [21, 62, 66], "x_uncensor": 21, "c_cvx": 21, "fit_cvx": 21, "qualit": [21, 56], "longer": [21, 57, 59, 61, 73], "inconsist": [21, 73], "But": [21, 26, 67], "job": [21, 26, 36, 53], "euclidean": [21, 66, 70], "c_": [21, 22], "compar": [21, 26, 33, 44, 45, 58, 66], "2f": [21, 26], "49": [21, 22], "advent": 21, "robust": [21, 22, 43, 55, 66], "entireti": 21, "lieven": 22, "vanderbergh": 22, "argyri": [22, 30], "zymni": [22, 30], "2005": [22, 24], "michael": 22, "grant": [22, 63], "cosmet": 22, "el": 22, "gamal": 22, "wire": 22, "transistor": 22, "circuit": 22, "topologi": [22, 26], "dissip": 22, "domin": 22, "per": 22, "thu": [22, 26, 31, 33, 35, 37], "segment": [22, 32, 72], "le": [22, 25, 34], "w_": [22, 31, 33, 45], "capacit": 22, "beta_i": [22, 31, 57, 59], "alpha_i": [22, 31, 37], "c_0": 22, "c_1": 22, "x_m": [22, 51], "c_m": 22, "simple_step": 22, "dt": 22, "expm": 22, "bd": 22, "ey": [22, 34, 46, 49, 51], "dimxdim": 22, "rowwis": 22, "columnwis": 22, "twice": 22, "xi": [22, 23, 72], "g0": 22, "c0": 22, "7": [22, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 45, 46, 48, 53, 62, 66, 72, 73], "wmax": 22, "cc": 22, "gg": 22, "matlab": [22, 64], "zo13": 22, "zo24": 22, "pn13": 22, "pn24": 22, "driver": 22, "eas": 22, "tradeoff": 22, "npt": 22, "delai": [22, 25, 45], "linspac": [22, 25, 26, 32, 33, 52, 53], "150": 22, "xdelai": 22, "100": [22, 26, 35, 36, 45, 46, 48, 56, 57, 58, 59, 66], "xnpt": 22, "area": [22, 48, 53], "xarea": 22, "revisit": 22, "gather": [22, 23], "tmax": 22, "xt": 22, "produc": [22, 27, 46, 66], "slower": [22, 58, 66], "kkt": [22, 66, 73], "kktsolver": [22, 60, 66], "optimal_inaccur": [22, 30, 72], "chop": 22, "inv": [22, 34], "500": [22, 27, 36], "2000": [22, 24, 66], "indmax": 22, "indmin": 22, "amin": 22, "jmax": 22, "jmin": 22, "tthre": 22, "ginvc": 22, "tdom": 22, "eig": 22, "elmor": 22, "amax": 22, "asarrai": 22, "92": 22, "88": 22, "96": 22, "600": [22, 26, 36], "fastest": 22, "slowest": [22, 56], "isfinit": 22, "52": 22, "04081632653061": 22, "54": 22, "08163265306123": 22, "12244897959184": 22, "58": [22, 36], "16326530612245": 22, "20408163265306": 22, "62": [22, 31], "244897959183675": 22, "64": 22, "28571428571429": 22, "66": [22, 36, 48, 67], "3265306122449": 22, "68": 22, "36734693877551": 22, "70": 22, "40816326530611": 22, "72": 22, "44897959183673": 22, "74": 22, "48979591836735": 22, "76": 22, "53061224489795": 22, "57142857142857": 22, "80": [22, 56, 66], "61224489795919": 22, "82": 22, "65306122448979": 22, "84": 22, "6938775510204": 22, "86": [22, 41], "73469387755102": 22, "77551020408163": 22, "81632653061224": 22, "85714285714286": 22, "94": 22, "89795918367346": 22, "93877551020408": 22, "98": 22, "9795918367347": 22, "0204081632653": 22, "27": [22, 25, 30, 33], "103": 22, "06122448979592": 22, "28": [22, 27, 30, 33, 35], "105": [22, 45], "10204081632654": 22, "29": [22, 30, 33], "107": [22, 45], "14285714285714": 22, "109": 22, "18367346938776": 22, "31": 22, "111": [22, 26, 32], "22448979591837": 22, "32": 22, "113": [22, 45], "26530612244898": 22, "33": [22, 35], "115": 22, "3061224489796": 22, "117": 22, "34693877551021": 22, "35": [22, 26, 32, 53], "119": 22, "38775510204081": 22, "121": 22, "42857142857143": 22, "37": [22, 33], "46938775510205": 22, "38": 22, "125": 22, "51020408163265": 22, "39": [22, 41], "127": 22, "55102040816327": 22, "129": 22, "59183673469389": 22, "41": [22, 33], "131": 22, "6326530612245": 22, "133": [22, 37], "67346938775512": 22, "43": 22, "135": 22, "71428571428572": 22, "44": [22, 33], "137": 22, "75510204081633": 22, "139": 22, "79591836734693": 22, "46": 22, "141": 22, "83673469387756": 22, "47": 22, "143": 22, "87755102040816": 22, "48": [22, 35], "145": [22, 37], "9183673469388": 22, "147": 22, "9591836734694": 22, "65284441": 22, "4391586": 22, "52378143": 22, "47092764": 22, "2363529": 22, "99999993": 22, "85353862": 22, "99999992": 22, "93601078": 22, "56994586": 22, "92325575": 22, "29557654": 22, "80041338": 22, "99999998": 22, "99999997": 22, "41300012": 22, "13553757": 22, "26699524": 22, "67049218": 22, "88916807": 22, "96487539e": 22, "01": [22, 24, 26, 27, 28, 30, 31, 33, 36, 45, 46, 54, 66, 72], "40591789e": 22, "70591442e": 22, "79376843e": 22, "27429285e": 22, "07446433e": 22, "02": [22, 24, 26, 27, 28, 30, 32, 33, 36, 46, 66], "38430105e": 22, "02136471e": 22, "07": [22, 24, 27, 28, 30, 33, 36, 46, 53, 66], "59913722e": 22, "28906472e": 22, "05807467e": 22, "09": [22, 24, 26, 27, 28, 31, 33, 47, 53, 66], "16285450e": 22, "91561390e": 22, "48052913e": 22, "58096913e": 22, "82528741e": 22, "85708568e": 22, "75578696e": 22, "39862772e": 22, "38639181e": 22, "2687881": 22, "04368684": 22, "17122095": 22, "133796": 22, "07360396": 22, "41346231": 22, "08016135": 22, "30642705": 22, "2224136": 22, "1484946": 22, "25755998": 22, "08016077": 22, "11200259": 22, "38352317": 22, "28159768": 22, "13439419": 22, "04368697": 22, "02445701": 22, "24083502": 22, "24534599": 22, "53896782e": 22, "18600578e": 22, "75218556e": 22, "19196383e": 22, "57176577e": 22, "30752726e": 22, "56673760e": 22, "35065528e": 22, "96797753e": 22, "03852376e": 22, "35404466e": 22, "12219313e": 22, "22938358e": 22, "91865186e": 22, "51304362e": 22, "31975762e": 22, "50790152e": 22, "39421076e": 22, "33247519e": 22, "27680128e": 22, "f_i": [23, 47], "fit": [23, 38, 55, 57, 59, 63], "train": [23, 46, 56, 57, 58, 59], "contrast": 23, "global": 23, "admm": 23, "xbar": 23, "prox": 23, "proxim": [23, 66], "_i": 23, "overlin": 23, "subproblem": [23, 69], "worker": 23, "parallel": [23, 53, 56, 72], "averag": [23, 45, 51, 59], "u_i": [23, 31, 43], "multiprocess": [23, 66, 72], "pipe": 23, "f_list": 23, "run_work": 23, "loop": [23, 29], "recv": 23, "proc": 23, "run_process": 23, "termin": [23, 63, 66], "sensor": [24, 33], "samar": 24, "sikandar": 24, "dimitri": 24, "gorinevski": [24, 27], "european": 24, "confer": 24, "cdc": 24, "ecc": 24, "44th": 24, "ieee": 24, "lbrace": [24, 26, 32, 33], "rbrace": [24, 26, 32, 33], "occurr": 24, "signatur": 24, "v_j": 24, "gaussian": [24, 25, 33, 55, 58, 73], "guess": [24, 30, 36, 66], "compress": 24, "ell": [24, 45, 57, 70], "nonconvex": [24, 32, 64], "relax": [24, 26, 35, 66], "ml": 24, "nearest": 24, "ratio": [24, 29, 31, 45, 46, 48, 50, 52, 53, 69], "That": [24, 26, 56, 62], "snr": 24, "x_true": [24, 33], "astyp": 24, "line2d": [24, 26, 32, 46, 53], "0x11ae42518": 24, "0x11aee9630": 24, "tau": [24, 32, 33, 36, 66], "const": 24, "x_rml": 24, "x_rnd": 24, "embotech": [24, 33], "gmbh": [24, 33], "zurich": [24, 33, 66], "switzerland": [24, 33], "2012": [24, 33, 36, 66], "pcost": [24, 27, 28, 33, 66], "dcost": [24, 27, 28, 33, 66], "gap": [24, 27, 28, 33, 36, 66], "dre": [24, 27, 28, 33, 66], "mu": [24, 26, 33, 45, 66], "ir": [24, 33, 66], "bt": [24, 33], "343e": 24, "03": [24, 26, 27, 28, 30, 33, 36, 46, 66], "862e": 24, "5e": [24, 27, 28, 33, 46, 66], "04": [24, 26, 27, 28, 30, 33, 36, 46, 66], "00": [24, 26, 27, 28, 30, 31, 33, 36, 46, 54, 66], "814e": 24, "580e": 24, "8e": [24, 27, 28, 33, 66], "6e": [24, 27, 28, 33, 45], "8500": 24, "079e": 24, "428e": 24, "4e": [24, 27, 28, 33, 66], "7544": 24, "7e": [24, 27, 33, 45, 66], "321e": 24, "030e": 24, "3e": [24, 27, 28, 33, 45, 66], "3122": 24, "074e": 24, "9e": [24, 27, 33, 66], "7839": 24, "121e": 24, "072e": 24, "3859": 24, "898e": 24, "060e": 24, "06": [24, 26, 27, 30, 33, 36, 46, 53, 66], "5780": 24, "778e": 24, "711e": 24, "9890": [24, 33], "307e": 24, "143e": 24, "5528": 24, "607e": 24, "286e": 24, "8303": 24, "741e": 24, "557e": 24, "6242": 24, "834e": 24, "749e": 24, "8043": 24, "888e": 24, "861e": 24, "9175": 24, "909e": 24, "902e": 24, "8198": 24, "914e": 24, "912e": 24, "8581": 24, "916e": 24, "9004": 24, "8174": 24, "8917": 24, "8588": 24, "9309": 24, "8768": 24, "9089": 24, "8362": 24, "feastol": [24, 33, 66], "reltol": [24, 33, 66], "runtim": [24, 33, 66], "538894": 24, "191": 24, "6347201927456": 24, "cpu": [24, 33], "51": 24, "sy": [24, 33, 34, 36, 66], "291": 24, "wall": [24, 26, 33, 48], "false_po": 24, "logical_and": 24, "false_neg": 24, "plotx": 24, "filenam": [24, 33, 66], "rcparam": [24, 26, 33, 37], "fig": [24, 26, 32, 33, 36, 46], "subplot": [24, 32, 33, 34, 36, 72], "sharex": [24, 33], "sharei": [24, 33], "enumer": [24, 26, 32, 33], "set_titl": [24, 33, 36], "set_ylim": 24, "savefig": [24, 33], "bbox_inch": [24, 33], "frequenc": 25, "h_": 25, "judg": [25, 33], "socp": [25, 43, 66], "impuls": 25, "zeroth": 25, "thumb": 25, "chenei": 25, "theori": [25, 26, 37, 63], "book": [25, 26, 60, 61], "hde": 25, "phase": [25, 66], "uncom": 25, "hdes_r": 25, "hdes_i": 25, "chebyshev": 25, "equivel": 25, "successfulli": [25, 72], "4999999999999996": 25, "repons": 25, "stem": [25, 62, 66], "freq": 25, "vari": [26, 33], "tabl": [26, 66, 68, 69], "combinator": 26, "shortest": 26, "dijkstra": 26, "s_algorithm": 26, "ell_1": [26, 56], "ee364b": [26, 32], "l1_ext_slid": 26, "__": 26, "explor": 26, "move": [26, 33, 73], "him": 26, "cycl": 26, "evas": 26, "p_j": [26, 29], "undetect": 26, "detect": [26, 55, 73], "event": [26, 63, 66], "he": 26, "resourc": 26, "Their": 26, "chanc": [26, 73], "amen": 26, "realli": 26, "hopefulli": 26, "won": [26, 66], "confus": [26, 60, 70], "hi": [26, 32], "face": 26, "pick": [26, 32], "star": [26, 32, 38, 39, 40, 41, 43], "remaind": 26, "analyz": [26, 66], "cell": [26, 30, 54], "notebook": [26, 32, 44, 47, 49, 51, 52, 54, 56, 58, 60, 66, 68, 69], "config": [26, 56, 57, 58, 59], "inlinebackend": [26, 56, 57, 58, 59], "figure_format": [26, 56, 57, 58, 59], "svg": [26, 56, 57, 58, 59], "retina": 26, "networkx": 26, "nx": 26, "formgraph": 26, "eta": [26, 44], "dummynod": 26, "perterb": 26, "insid": [26, 31, 32], "pos2": 26, "dummi": 26, "exit": 26, "random_geometric_graph": 26, "cross": [26, 63], "intersect": [26, 32], "remove_edg": 26, "digraph": 26, "add_edg": 26, "showpath": 26, "edgeprob": 26, "visiblenod": 26, "gnode": 26, "rnode": 26, "edgeprobd": 26, "hidden": 26, "green": [26, 32, 36], "black": [26, 36], "add_subplot": [26, 32], "number_of_nod": 26, "draw": 26, "regular": [26, 27], "draw_networkx_nod": 26, "nodelist": 26, "node_color": 26, "node_s": 26, "zip": [26, 49], "color2": 26, "mess": 26, "edge2ind": 26, "ind2edg": 26, "displai": [26, 35, 36, 63, 66], "visibleedg": 26, "edgelist": 26, "isinst": 26, "number_of_edg": 26, "transpar": 26, "draw_networkx_edg": 26, "edge_color": 26, "edge_cmap": 26, "cm": [26, 36], "rdylgn": 26, "arrow": 26, "edge_vmin": 26, "edge_vmax": 26, "visibl": [26, 36], "visiblepath": 26, "path_pair": 26, "path_color": 26, "colorbar": 26, "optpath": 26, "bring": [26, 73], "pair": [26, 46, 50, 66], "shortest_path": 26, "astar_path": 26, "foo": 26, "zeros_lik": 26, "p1": [26, 32, 70], "p2": [26, 32], "xmin": [26, 32], "xmax": [26, 32], "rectangl": [26, 32, 53], "xy": [26, 32, 44, 51, 68, 69], "sight": [26, 32], "getguardeffect": 26, "guardidx": 26, "evadeprob": 26, "edgecent": 26, "numguard": 26, "edgev": 26, "gid": 26, "get_a": 26, "e2": 26, "thwart": 26, "certain": [26, 29, 53, 66, 73], "firstli": 26, "similarli": [26, 45, 66, 69, 70], "turn": [26, 53], "still": [26, 47, 66], "network": [26, 45], "irregular": 26, "a_j": 26, "corner": 26, "anaconda3": 26, "lib": [26, 62], "site": 26, "nx_pylab": 26, "611": 26, "matplotlibdeprecationwarn": 26, "cb": 26, "is_numlik": 26, "incidence_matrix": 26, "toarrai": 26, "count": [26, 66], "v0": [26, 33, 46], "bartolomeo": [26, 33, 46, 61], "stellato": [26, 33, 46, 61], "goran": [26, 33, 46], "banjac": [26, 33, 46], "univers": [26, 33, 36, 46, 66], "oxford": [26, 33, 46], "354": 26, "808": 26, "nnz": [26, 33, 35, 36, 46, 66], "1416": 26, "qdldl": [26, 33, 46], "eps_ab": [26, 33, 46, 66], "0e": [26, 33, 46, 66], "eps_rel": [26, 33, 46, 66], "eps_prim_inf": [26, 33, 46], "eps_dual_inf": [26, 33, 46], "00e": [26, 33, 36, 46, 66], "4000": [26, 33], "check_termin": [26, 33, 46], "scaled_termin": [26, 33, 46], "pri": [26, 33, 36, 46, 66], "dua": [26, 33, 36, 46, 66], "9458e": 26, "97e": [26, 36, 45], "10e": [26, 36], "0606e": 26, "47e": [26, 36], "64e": [26, 45, 46, 66], "35e": [26, 36, 45], "unsuccess": 26, "0606": 26, "15e": [26, 36], "09e": [26, 36, 45], "flatnonzero": 26, "3f": 26, "341943e": 26, "634": 26, "theoret": 26, "343747e": 26, "budget": [26, 39], "personnel": 26, "problemat": 26, "chapter": 26, "r_j": 26, "yearli": 26, "naiv": 26, "against": [26, 29, 63, 73], "spend": [26, 38], "br": 26, "nu": 26, "454": 26, "1240": 26, "2478": 26, "3084e": 26, "54e": [26, 36], "59e": [26, 36, 45], "2269e": 26, "28e": [26, 33], "58e": [26, 36, 45], "06e": [26, 46], "2692": 26, "05e": 26, "131035e": 26, "29759913": 26, "87": 26, "576x432": 26, "_subplot": 26, "axessubplot": 26, "0xd19325278": 26, "8977e": 26, "71e": [26, 36, 45], "14e": [26, 33, 36], "0447e": 26, "16e": [26, 36, 45], "89e": 26, "66e": [26, 45], "325": 26, "0607e": 26, "79e": [26, 36], "46e": [26, 36], "95e": [26, 36], "6072": 26, "08e": [26, 36, 45], "37e": [26, 36, 45, 46], "123036e": 26, "again": 26, "553365e": 26, "whom": [26, 63], "put": [26, 37], "bit": [26, 31], "harder": 26, "forc": [26, 33, 34, 35], "evenli": 26, "nearbi": 26, "demonstr": [26, 32, 66], "highlight": 26, "light": 26, "profil": 26, "anywher": [26, 66], "visual": [26, 62, 67], "shown": [26, 67, 72], "65": [26, 32, 53], "rect": [26, 32], "fc": [26, 32], "add_patch": [26, 32], "reweight": 26, "set_size_inch": 26, "448": 26, "1305": 26, "27688": 26, "5225e": 26, "24e": [26, 33, 36, 45, 66], "50e": [26, 36], "8653e": 26, "33e": 26, "96e": [26, 36], "98e": 26, "8653": 26, "13e": 26, "7726e": 26, "23e": [26, 36], "8639e": 26, "36e": [26, 45], "400": [26, 36], "9265e": 26, "92e": [26, 36, 66], "8962e": 26, "74e": [26, 36, 45], "61e": 26, "800": 26, "8931e": 26, "31e": 26, "8566e": 26, "39e": [26, 36, 45], "56e": [26, 45, 46], "1200": 26, "8689e": 26, "1225": 26, "8471e": 26, "94e": [26, 36], "93e": 26, "30e": [26, 36, 46], "4712": 26, "86e": [26, 66], "0xd1b50d438": 26, "path_ind": 26, "213215e": 26, "kwangmoo": 27, "koh": 27, "2007": 27, "kim": [27, 48, 50], "l_1": [27, 29], "l1_trend_filt": 27, "aris": [27, 37, 41, 63, 64], "varieti": [27, 65, 73], "_1": [27, 35, 56, 57, 59, 67, 70, 72], "bmatrix": [27, 33, 44, 49, 51, 66], "l1_tf": 27, "load": [27, 36, 45], "price": 27, "loadtxt": 27, "snp500": 27, "txt": 27, "rb": 27, "delimit": 27, "skiprow": 27, "spdiag": 27, "vlambda": 27, "converg": [27, 29, 30, 35, 66], "did": [27, 30, 35, 66, 73], "0000e": [27, 28, 33, 46], "2350e": 27, "5374e": 27, "9086e": 27, "3346e": 27, "9403e": 27, "4110e": 27, "5979e": 27, "1278e": 27, "4154e": 27, "4522e": 27, "0480e": 27, "0710e": 27, "9603e": 27, "9825e": 27, "0529e": 27, "0542e": 27, "1994e": 27, "2004e": 27, "2689e": 27, "2693e": 27, "3728e": 27, "3729e": 27, "3802e": 27, "3803e": 27, "3965e": 27, "3998e": 27, "3999e": 27, "4011e": 27, "4013e": 27, "4014e": 27, "4017e": 27, "4015e": 27, "4014300716775199": 27, "linewidth": 27, "jo\u00ebll": 28, "skaf": [28, 30, 34], "2008": [28, 34], "tmp": 28, "nthe": [28, 38, 39, 41], "8736e": 28, "0720e": 28, "9687e": 28, "4688e": 28, "5883e": 28, "4595e": 28, "4889e": 28, "4763e": 28, "4816e": 28, "4804e": 28, "4809e": 28, "480901486350394": 28, "43483319": 28, "66111715": 28, "49201039": 28, "36030618": 28, "38416629": 28, "30283658": 28, "41730232": 28, "79107794": 28, "76667302": 28, "38292365": 28, "2479328": 28, "50416987": 28, "68053832": 28, "67163958": 28, "13877259": 28, "5248668": 28, "08418897": 28, "56927148": 28, "50000248": 28, "78291311": 28, "196": 29, "intefer": 29, "plu": [29, 57], "sinr": [29, 50], "transmitt": [29, 37, 50], "transmit": [29, 31], "receiv": [29, 31, 50, 63], "s_i": [29, 50], "ii": [29, 50, 63, 66], "interef": 29, "i_i": 29, "ik": [29, 50], "p_k": [29, 50], "sigma_i": [29, 50], "gamma_i": 29, "partit": [29, 44], "nonoverlap": 29, "k_1": 29, "k_m": 29, "share": [29, 61, 63], "p_l": 29, "k_l": 29, "iii": [29, 63], "rewritten": [29, 31, 43, 66, 73], "bisect": [29, 53, 69], "l_0": 29, "u_0": 29, "alpha_0": 29, "u_1": 29, "alpha_1": 29, "u_n": 29, "l_n": 29, "desir": [29, 34, 60, 66, 72], "maxmin_sinr": 29, "p_max": [29, 50], "p_receiv": 29, "group_max": 29, "\u03c3": 29, "interfer": [29, 50], "num_group": 29, "normalis": 29, "group_norm": 29, "optimis": [29, 31, 37], "1e4": 29, "generalis": 29, "\u03b1": [29, 31, 37], "li": 29, "algortithm": 29, "maxloop": 29, "1e7": 29, "finish": 29, "midpoint": 29, "atleast_1d": 29, "reach": [29, 32, 66], "\u03b5": 29, "sublevel": [29, 69], "satur": 29, "148": 29, "joell": [30, 34], "yx": 30, "_f": 30, "y_init": 30, "iter_num": 30, "At": [30, 32, 66, 68, 69, 73], "NOT": 30, "odd": 30, "eg": 30, "766300564135502": 30, "5840356930600721": 30, "3356679970549085": 30, "18670276027770083": 30, "12819921698143966": 30, "09295501592922492": 30, "06766021043574907": 30, "04958204907945361": 30, "03897402158866238": 30, "02979328283505179": 30, "022938564327729952": 30, "021943924920767337": 30, "01810297853945281": 30, "014551161988556204": 30, "014039687334395924": 30, "009354606824469416": 30, "008643141637584189": 30, "007278100007476402": 30, "008486679700021057": 30, "008827511916396866": 30, "008396764193205366": 30, "005265185332845983": 30, "006931929503816392": 30, "007356156596477946": 30, "0039053948996930054": 30, "003989885269615319": 30, "002920361405226024": 30, "007779246694466739": 30, "007339011292898449": 30, "005008539285258121": 30, "323426": 30, "11061189": 30, "69137835": 30, "20020115": 30, "13216889": 30, "5980743": 30, "64965406": 30, "340611": 30, "69871738": 30, "78278448": 30, "73721109": 30, "40464204": 30, "90898877": 30, "60774132": 30, "53717253": 30, "62647405": 30, "76242265": 30, "41151492": 30, "8048194": 30, "20313124": 30, "4071438": 30, "10269406": 30, "75323063": 30, "18928983": 30, "23428169": 30, "60364688": 30, "63792853": 30, "40855006": 30, "57257432": 30, "17227344": 30, "3905141": 30, "33367163": 30, "07723947": 30, "67735654": 30, "33039096": 30, "42003169": 30, "22641711": 30, "21470465": 30, "47350799": 30, "84931787": 30, "42153652": 30, "13598552": 30, "00816457": 30, "11463462": 30, "17914429": 30, "69942578": 30, "90353699": 30, "45664487": 30, "81023916": 30, "09668578": 30, "60813803": 30, "23214532": 30, "73741086": 30, "3148874": 30, "27589039": 30, "40755835": 30, "31904948": 30, "3469129": 30, "34256526": 30, "76924618": 30, "90607895": 30, "6632877": 30, "25412229": 30, "81696721": 30, "87218892": 30, "50032884": 30, "245879": 30, "25079329": 30, "25017792": 30, "72155621": 30, "5691922": 30, "47359672": 30, "76518996": 30, "66268312": 30, "43746574": 30, "72486628": 30, "97409333": 30, "39239642": 30, "09234807": 30, "16325748": 30, "18723548": 30, "00282008": 30, "41532595": 30, "03836298": 30, "90382914": 30, "38460446": 30, "213473": 30, "23641422": 30, "32784402": 30, "27179726": 30, "75789915": 30, "75119989": 30, "99502166": 30, "65444815": 30, "56073096": 30, "341146": 30, "02555143": 30, "24273668": 30, "01035919": 30, "49427978": 30, "56475742e": 30, "42102372e": 30, "40426641e": 30, "02845111e": 30, "38002833e": 30, "36189366e": 30, "27831861e": 30, "28165827e": 30, "60609403e": 30, "34595403e": 30, "54834858e": 30, "37954560e": 30, "01726231e": 30, "96879041e": 30, "74736667e": 30, "72955779e": 30, "53749151e": 30, "14934798e": 30, "81276972e": 30, "26647247e": 30, "93952558e": 30, "50946872e": 30, "18853643e": 30, "85961318e": 30, "96701863e": 30, "26183347e": 30, "41639937e": 30, "71711699e": 30, "33393633e": 30, "55176129e": 30, "89263105e": 30, "20725095e": 30, "56036398e": 30, "24033457e": 30, "38302416e": 30, "09810836e": 30, "55780427e": 30, "03636918e": 30, "08549910e": 30, "91844947e": 30, "31578328e": 30, "75528332e": 30, "93543168e": 30, "10037225e": 30, "65884776e": 30, "26650967e": 30, "53761974e": 30, "52855369e": 30, "43132832e": 30, "47569255e": 30, "07015116e": 30, "25961964e": 30, "59511553e": 30, "26808607e": 30, "98124301e": 30, "62801718e": 30, "53757673e": 30, "88661317e": 30, "64559055e": 30, "43675625e": 30, "72908811e": 30, "03553498e": 30, "45229205e": 30, "10121868e": 30, "93621271e": 30, "12383803e": 30, "45085312e": 30, "25155585e": 30, "84272390e": 30, "94988511e": 30, "41086863e": 30, "70049131e": 30, "73427259e": 30, "50933223e": 30, "38007474e": 30, "51575697e": 30, "99473425e": 30, "39362252e": 30, "06840502e": 30, "22844259e": 30, "70906925e": 30, "46340550e": 30, "04256418e": 30, "63290841e": 30, "39889787e": 30, "65220031e": 30, "22742919e": 30, "60875098e": 30, "41601146e": 30, "72448408e": 30, "44108256e": 30, "62667224e": 30, "26354249e": 30, "23656013e": 30, "81220987e": 30, "57729003e": 30, "90739234e": 30, "81123997e": 30, "15606388e": 30, "43189790e": 30, "02157264e": 30, "23117764e": 30, "79950842e": 30, "74317402e": 30, "61768644e": 30, "28680186e": 30, "62394448e": 30, "76277321e": 30, "85227596e": 30, "60481823e": 30, "33027425e": 30, "21455250e": 30, "17040399e": 30, "56606195e": 30, "41256203e": 30, "01386736e": 30, "36342995e": 30, "73587325e": 30, "22429324e": 30, "04432888e": 30, "35846517e": 30, "46121871e": 30, "93720663e": 30, "38806481e": 30, "42363429e": 30, "36215640e": 30, "31633730e": 30, "52108618e": 30, "23620331e": 30, "42078084e": 30, "62860853e": 30, "83780003e": 30, "20542830e": 30, "49712163e": 30, "31334078e": 30, "78805144e": 30, "46798183e": 30, "03546983e": 30, "79256197e": 30, "81320754e": 30, "22557723e": 30, "31892711e": 30, "34719938e": 30, "01388769e": 30, "52745774e": 30, "12014739e": 30, "42548761e": 30, "17321003e": 30, "50760383e": 30, "01455643e": 30, "46202248e": 30, "61714835e": 30, "15005890e": 30, "85452470e": 30, "39872783e": 30, "59000367e": 30, "24749082e": 30, "69461803e": 30, "16622183e": 30, "20910778e": 30, "15561552e": 30, "28864368e": 30, "77288000e": 30, "10264071e": 30, "38713553e": 30, "17730381e": 30, "05892579e": 30, "69449092e": 30, "71225020e": 30, "13410340e": 30, "57913703e": 30, "21168134e": 30, "04695033e": 30, "48187018e": 30, "38037868e": 30, "45409129e": 30, "34145488e": 30, "47289692e": 30, "98184939e": 30, "09549810e": 30, "51365483e": 30, "32683206e": 30, "26345269e": 30, "01647636e": 30, "72529426e": 30, "10472383e": 30, "48674297e": 30, "54468161e": 30, "92202367e": 30, "42249517e": 30, "63514531e": 30, "59800828e": 30, "08957766e": 30, "01954949e": 30, "41048252e": 30, "06257705e": 30, "57094132e": 30, "64204427e": 30, "26930797e": 30, "63755883e": 30, "210": 31, "central": 31, "messag": [31, 66, 73], "w_i": [31, 32, 35, 45], "tot": 31, "rate": [31, 37, 45], "r_i": 31, "corrupt": [31, 36, 58], "white": [31, 36], "beta_ip_i": 31, "simplest": 31, "itself": 31, "although": [31, 66, 73], "prohibit": 31, "utilis": 31, "kullback": 31, "leibler": 31, "diverg": 31, "optimal_pow": 31, "a_val": 31, "b_val": 31, "p_tot": 31, "w_tot": 31, "\u03b2": 31, "451": 31, "151e": 31, "708e": 31, "756e": 31, "788e": [31, 66], "000e": [31, 33, 66], "091e": 31, "955e": 31, "908e": [31, 33], "193e": 31, "slide": [32, 65], "tackl": 32, "protect": 32, "guard": 32, "discrit": 32, "coverag": 32, "secur": 32, "least": [32, 33, 40, 45, 46, 55, 56, 58, 61, 63, 66, 68, 69, 72], "alloc": [32, 35, 37, 41, 55], "induc": 32, "incentiv": 32, "toward": [32, 58, 73], "obstruct": 32, "form_path": 32, "pold": 32, "form_grid": 32, "guard_set": 32, "num": [32, 53], "pert": 32, "inrect": 32, "remove_guard": 32, "p_evad": 32, "minval": 32, "get_guard_effect": 32, "evade_func": 32, "guard_effect": 32, "detect_p": 32, "95": [32, 66], "85": [32, 34], "0x105d17cc0": 32, "increasingli": 32, "num_guard": 32, "xsol": 32, "27091799207174": 32, "placement": 32, "yellow": 32, "markers": 32, "0xb1853f1d0": 32, "pinpoint": 33, "high": [33, 62, 66, 69, 73], "noisi": [33, 66], "dynam": 33, "outlier": 33, "x_t": 33, "ax_t": 33, "bw_t": 33, "y_t": 33, "cx_t": 33, "v_t": 33, "w_t": 33, "drive": [33, 56, 58], "drift": 33, "tune": [33, 34, 56, 58], "algebra": 33, "y_": [33, 46, 70], "ax_": 33, "bw_": 33, "vestigi": 33, "concis": 33, "influenc": 33, "degrad": 33, "phi_": 33, "penal": [33, 58], "linearli": [33, 56, 57], "ball": [33, 43], "harshli": 33, "veloc": 33, "damp": 33, "recurr": 33, "subsect": 33, "acceler": [33, 36, 66], "v_": [33, 59], "plot_stat": 33, "trajectori": 33, "set_ylabel": 33, "yaxi": 33, "tick_right": 33, "set_label_posit": 33, "set_xlabel": 33, "plot_posit": 33, "traj": 33, "cloud": 33, "timestep": 33, "delt": 33, "endpoint": 33, "retstep": 33, "x_0": 33, "w_true": 33, "rkf1": 33, "distort": 33, "kf": 33, "rkf2": 33, "8004": 33, "6000": 33, "22000": 33, "1057e": 33, "57e": [33, 36], "27e": 33, "01e": 33, "plsh": [33, 46], "11e": [33, 45], "78e": [33, 36, 66], "success": [33, 46], "11057": 33, "3550": 33, "70e": [33, 36], "354957764113": 33, "598": 33, "rkf3": 33, "923e": 33, "090e": 33, "360e": 33, "8051": 33, "188e": 33, "134e": 33, "4259": 33, "956e": 33, "5830": 33, "881e": 33, "880e": 33, "7189": 33, "572e": 33, "5464": 33, "986e": 33, "985e": 33, "5716": 33, "262e": 33, "6007": 33, "425e": 33, "5871": 33, "601e": 33, "6383": 33, "728e": 33, "727e": 33, "7925": 33, "759e": 33, "5191": 33, "824e": 33, "860e": 33, "6740": 33, "864e": 33, "2982": 33, "876e": 33, "889e": 33, "7740": 33, "899e": 33, "9702": 33, "901e": 33, "6771": 33, "903e": 33, "9383": 33, "905e": 33, "8982": 33, "906e": 33, "9342": 33, "907e": 33, "8457": 33, "9013": 33, "9207": 33, "9009": 33, "9058": 33, "129066": 33, "39077": 33, "76954636933": 33, "3min": 33, "yy": 34, "s_": 34, "y_j": 34, "condition": 34, "y_1": [34, 46], "y_n": 34, "drawn": 34, "prior": 34, "knowledg": [34, 66], "todens": 34, "sparsen": 34, "strue": 34, "y_sampl": 34, "sqrtm": [34, 66], "cov": 34, "empti": [34, 36], "ss": 34, "logdet": 34, "comprehens": 34, "r_hat": 34, "167608186713004": 34, "545759632606043": 34, "989407069609157": 34, "spy": 34, "432x288": 34, "tropp": 35, "preceq": 35, "rao": 35, "kreutz": 35, "delgado": 35, "portfolio": [35, 41, 55], "transact": 35, "lobo": 35, "fazel": 35, "x0": [35, 39, 43], "x_l1": 35, "cardin": 35, "divers": 35, "nnz_l1": 35, "582394099513873": 35, "num_run": 35, "nnzs_log": 35, "x_log": 35, "linestyl": [35, 46], "intens": 36, "orig": 36, "255": 36, "pixel": 36, "reconstruct": [36, 57, 66, 72], "u_": 36, "ell_2": [36, 38, 43, 58], "u_orig": 36, "imread": 36, "loki512": 36, "png": 36, "u_corr": 36, "loki512_corrupt": 36, "imshow": 36, "cmap": 36, "grai": [36, 46], "v2": 36, "brendan": [36, 66], "donoghu": [36, 66], "lin": [36, 66], "indirect": [36, 63, 66], "1554199": 36, "cg": [36, 66], "tol": [36, 66], "5000": [36, 66], "acceleration_lookback": [36, 46, 66], "rho_x": 36, "523265": 36, "1045507": 36, "262144": 36, "783363": 36, "blk": [36, 66], "261121": 36, "kap": [36, 66], "19e": 36, "21e": [36, 45], "51e": [36, 66], "38e": 36, "69e": 36, "82e": [36, 45], "83e": [36, 45, 66], "12e": [36, 66], "20e": 36, "300": 36, "77e": [36, 45, 46], "75e": [36, 46], "65e": 36, "85e": 36, "07e": 36, "81e": 36, "45e": 36, "48e": 36, "700": 36, "49e": 36, "40e": 36, "720": 36, "04e": 36, "55e": [36, 45], "avg": [36, 66], "41e": [36, 66], "42e": 36, "dist": [36, 66], "1720e": 36, "7180e": 36, "9097e": 36, "0439e": 36, "2388e": 36, "8544e": 36, "11044": 36, "2661": 36, "2813": 36, "28989542425": 36, "magnifi": 36, "factor": [36, 55, 66], "img_diff": 36, "rgb": 36, "discard": [36, 51], "loki512color": 36, "pointer": 36, "523264": 36, "785408": 36, "1047552": 36, "3630814": 36, "1047553": 36, "2614279": 36, "786432": 36, "1827847": 36, "18e": 36, "02e": [36, 45], "34e": 36, "53e": [36, 45], "32e": 36, "52e": 36, "87e": 36, "60e": [36, 66], "43e": [36, 45], "760": 36, "03e": 36, "99e": [36, 45], "29e": [36, 45], "72e": [36, 46], "8769e": 36, "1246e": 36, "2851e": 36, "0269e": 36, "7005e": 36, "4293e": 36, "11465": 36, "6528": 36, "5971": 36, "652787130613": 36, "field": [36, 63, 66, 72, 73], "rec_arr": 36, "clip": 36, "511": 36, "classic": 37, "channel": [37, 55], "floor": [37, 48, 69], "baselin": 37, "straightforward": [37, 66, 67], "water_fil": 37, "ith": 37, "\u03b1_i": 37, "boldsymbol": 37, "achiev": [37, 54, 62, 66, 72], "bucket": 37, "863": 37, "533": 37, "333": 37, "illustr": [37, 58, 66], "flat": 37, "pylab": 37, "xtick": 37, "seek": 38, "005909828287484": 38, "17492418": 38, "38102551": 38, "34732251": 38, "0173098": 38, "0845784": 38, "08134019": 38, "293119": 38, "27019762": 38, "17493179": 38, "23953449": 38, "64097935": 38, "41633637": 38, "12799688": 38, "1063942": 38, "32158411": 38, "6468679280023557": 38, "lose": 39, "profit": 39, "exceed": 39, "star_i": [39, 41], "suggest": [39, 41, 43, 57, 59], "s0": 39, "lamb0": 39, "220912604467838": 39, "10131657": 39, "16370661": 39, "89711643": 39, "03228613": 39, "60662428": 39, "12655967": 39, "12985839": 39, "88200333": 39, "49089264": 39, "89851057": 39, "61175641": 39, "52817175": 39, "07296862": 39, "3015387": 39, "7612069": 39, "24937038": 39, "06014071": 39, "3224172": 39, "38405435": 39, "miqp": 40, "scip": [40, 62, 66, 73], "pyscipopt": [40, 62], "conda": [40, 62], "forg": [40, 62], "66000322824753": 40, "tpx": 41, "gx": 41, "financ": [41, 61], "stock": 41, "covari": [41, 42, 55], "balanc": [41, 66], "g_i": [41, 47], "h_i": 41, "89141585569918": 41, "68244521": 41, "29769913": 41, "38772183": 41, "79986015": 41, "18270433": 41, "20911897": 41, "50993526": 41, "76683701": 41, "45770675": 41, "78589638": 41, "45538054": 41, "67365045": 41, "79927156": 41, "54115873": 41, "cx": [42, 70], "a_ix": [42, 43], "a_p": 42, "b_p": 42, "tild": [42, 47], "sigma_": 42, "654348003008652": 42, "6080571": 42, "59770202": 42, "69575904": 42, "22228637": 42, "24689205": 42, "39679396": 42, "c_i": [43, 46], "d_i": [43, 45], "n_i": [43, 68, 70], "textrm": 43, "soc_constraint": 43, "582695716265503": 43, "40303325": 43, "4194569": 43, "69146656": 43, "26922215": 43, "30825472": 43, "70834842": 43, "19313706": 43, "64153496": 43, "47698583": 43, "66581033": 43, "61662526": 43, "35370661": 43, "02327185": 43, "04253095": 43, "06243588": 43, "49886837": 43, "35283078": 43, "14301082": 43, "16539699": 43, "22027817": 43, "15440264": 43, "06571645": 43, "86510445": 43, "114638": 43, "449291": 43, "37810251": 43, "6144058": 43, "11377797": 43, "xyz": 44, "xz": 44, "yz": 44, "objective_fn": [44, 45, 46, 47, 49, 56, 58, 68, 69], "acord": 44, "onlin": [44, 60, 66], "5612147353889386": 44, "31496200373359456": 44, "36892055859991446": 44, "3_": 44, "saw": [44, 56], "5612": 44, "3150": 44, "3690": 44, "mathsf": 44, "da": 44, "dc": 44, "x_hat": 44, "y_hat": 44, "z_hat": 44, "5f": 44, "55729": 44, "55734": 44, "31783": 44, "37179": 44, "37175": 44, "fairli": 44, "circ": 44, "nabla": [44, 46], "subtract": [44, 46, 66], "dalpha": 44, "27513": 44, "22709": 44, "22942": 44, "servic": [45, 63], "markovian": 45, "queue": 45, "item": [45, 46], "wait": 45, "serv": 45, "packet": 45, "buffer": [45, 66], "latenc": 45, "llcp": [45, 46, 47, 68], "arriv": 45, "poisson": 45, "ell_i": 45, "traffic": 45, "occup": 45, "q_i": 45, "meant": [45, 46, 47, 68], "q_": 45, "mu_": 45, "lam": 45, "w_max": 45, "d_max": 45, "q_max": 45, "lam_min": 45, "mu_max": 45, "lq": 45, "dens": [45, 62, 66], "457106781186705": 45, "32842713": 45, "67157287": 45, "82842712": 45, "17157287": 45, "60355339": 45, "4267767": 45, "takeawai": [45, 66], "highli": 45, "3g": 45, "213": 45, "411": 45, "927": 45, "458": 45, "229": 45, "466": 45, "661": 45, "0727": 45, "716": 45, "00996": 45, "245": 45, "122": 45, "282": 45, "76e": [45, 66], "334": 45, "0611": 45, "195": 45, "197": 45, "mu_valu": 45, "lam_valu": 45, "lam_pr": 45, "mu_pr": 45, "percent": [45, 56, 63], "_old_valu": 45, "lam_actu": 45, "mu_actu": 45, "32203282": 45, "77228841": 45, "07166961": 45, "94304296": 45, "99504983": 45, "99504965": 45, "87148458": 45, "10213353": 45, "newcommand": 46, "ascend": 46, "y_2": 46, "y_m": 46, "phi": 46, "hat": [46, 53, 57, 59], "z_i": [46, 57, 59], "i1": 46, "i2": 46, "emphas": [46, 66], "descent": 46, "effici": [46, 66], "taken": [46, 70], "clamp": 46, "slightli": [46, 66], "pytorch": [46, 64, 66], "cvxpylay": [46, 64, 73], "torch": 46, "set_default_tensor_typ": 46, "doubletensor": 46, "n_val": 46, "manual_se": 46, "243": 46, "multivariate_norm": 46, "multivariatenorm": 46, "lognorm": 46, "batch": 46, "a_tru": 46, "generate_data": [46, 56, 58], "num_point": 46, "latent": 46, "input_cp": 46, "train_input": 46, "train_output": 46, "0x12b367cd0": 46, "val_input": 46, "val_output": 46, "0x12da7e410": 46, "log_c": 46, "inputs_np": 46, "log_outputs_np": 46, "log_inputs_np": 46, "cp_pred": 46, "lstq_problem": 46, "1210": 46, "23000": 46, "time_limit": [46, 66], "22e": 46, "0014e": 46, "17e": 46, "68e": 46, "0100": 46, "010014212812318733": 46, "lstsq_val_pr": 46, "inp": 46, "pred": 46, "a_param": 46, "c_param": 46, "x_slack": 46, "x_param": 46, "a_tch": 46, "requires_grad_": 46, "c_tch": 46, "train_loss": 46, "val_loss": 46, "lam1": 46, "lam2": 46, "sgd": 46, "lr": 46, "epoch": 46, "solver_arg": 46, "no_grad": 46, "val_pr": 46, "4f": 46, "zero_grad": 46, "0018": 46, "0014": 46, "0017": 46, "0016": 46, "train_preds_tch": 46, "train_pr": 46, "detach": 46, "val_preds_tch": 46, "teal": 46, "subseteq": [47, 68], "said": [47, 66, 68], "log_log_curvatur": [47, 68], "var0": 47, "var1": 47, "param2": 47, "param3": 47, "cx_1": [47, 68], "a_2": [47, 68], "a_n": [47, 68], "monotonicti": 47, "expr_1": [47, 68], "expr_2": [47, 68], "expr_n": [47, 68], "expri": 47, "expr_i": 47, "mark": [47, 49, 63, 67, 68, 70], "colloqui": [47, 68, 69], "f_0": 47, "9999999926890524": 47, "9999999989968756": 47, "9999999529045318": 47, "000000020895385": 47, "1111111199586956": 47, "94877846244994e": 47, "1111111217156332": 47, "11111112214962586": 47, "forget": 47, "hassibi": [48, 50], "height": [48, 53], "depth": [48, 61, 68, 69], "hw": 48, "hd": 48, "wd": 48, "hwd": 48, "flr": 48, "a_wal": 48, "a_flr": 48, "wall_area": 48, "flr_area": 48, "hw_ratio": 48, "dw_ratio": 48, "77": 48, "45966630736292": 48, "7459666715289766": 48, "872983364643079": 48, "581988871583608": 48, "8333333206334043": 48, "6666666801983365": 48, "minu": [49, 51], "omega": [49, 51], "pf": [49, 68], "known_value_indic": 49, "known_valu": 49, "702374203221372": 49, "63616907": 49, "49991744": 49, "37774148": 49, "14221476": 49, "commun": [50, 55, 61, 63, 66], "trasmitt": 50, "trasmit": 50, "p_2": 50, "p_min": 50, "sinr_min": 50, "s_p": 50, "signal_pow": 50, "inverse_sinr": 50, "9615384629119621": 50, "18653846": 50, "16730769": 50, "23461538": 50, "19615385": 50, "17692308": 50, "criterion": 51, "mn": [51, 68, 70], "x_iy_j": 51, "x_1x_2": 51, "outer_product": 51, "relative_devi": 51, "7763568394002505e": 51, "84375": 51, "43389831": 51, "82440678": 51, "89999999": 51, "07999999": 51, "89637009": 51, "38893346": 51, "86838428": 51, "11561063": 51, "0569071": 51, "1196602": 51, "henc": [52, 69], "upgrad": [52, 54], "quasiconcav": [52, 69], "quasilinear": [52, 53, 69], "concave_fractional_fn": [52, 69], "4288821220397949": [52, 69], "50000165": 52, "triangl": 53, "wedg": 53, "hyperson": [53, 55], "drag": 53, "hypotenus": 53, "c_d": 53, "c_l": 53, "pressur": 53, "perpendicular": 53, "bodi": 53, "newtonian": 53, "sine": 53, "whet": 53, "c_p": 53, "elsewher": [53, 66], "stream": 53, "simplic": 53, "int_0": 53, "_x": 53, "_y": 53, "chord": 53, "surfac": 53, "plug": 53, "201": 53, "0x7f571d7bfdd8": 53, "payload": 53, "abl": [53, 67, 72, 73], "prepar": [53, 63], "var30766": 53, "var30793": 53, "var30747": 53, "var30779": 53, "param30811": 53, "000000": 53, "500000": 53, "30766": 53, "28425055": 53, "30793": 53, "32048066": 53, "30747": 53, "9203698369509382": 53, "30779": 53, "86287821": 53, "30764": 53, "184352986830617e": 53, "30775": 53, "68139086e": 53, "11799720e": 53, "85059567e": 53, "30788": 53, "73308751e": 53, "50722737e": 53, "55220021e": 53, "30802": 53, "04979217e": 53, "43109122e": 53, "68754271e": 53, "30835": 53, "4165742899966837e": 53, "0109e": 53, "4997e": 53, "125000": 53, "156250": 53, "140625": 53, "145508": 53, "146484": 53, "145996": 53, "01067238": 53, "14440604": 53, "9895144829793": 53, "97914383": 53, "2610785752467482e": 53, "37367039e": 53, "73702792e": 53, "37322961e": 53, "50627898e": 53, "58286953e": 53, "50619494e": 53, "77053008e": 53, "45051237e": 53, "20683981e": 53, "948014872712083e": 53, "000114922": 53, "6457e": 53, "145874": 53, "145905": 53, "145889": 53, "145897": 53, "1458979": 53, "854107648695203": 53, "9895238539767502": 53, "14436946495363565": 53, "verifi": [53, 67, 69], "inscrib": 53, "lambda1": 53, "lambda2": 53, "lambda3": 53, "pt1": 53, "pt2": 53, "pt3": 53, "pt4": 53, "04947620645689951": 53, "0390003355948896": 53, "15158793820131744": 53, "0072184732476817896": 53, "mse": [54, 56, 58], "x_star": 54, "And": 54, "00926009328813662": 54, "58366030e": 54, "38434327e": 54, "10714108e": 54, "44811159e": 54, "14622208e": 54, "51283929e": 54, "62931941e": 54, "16358584e": 54, "78132907e": 54, "76314786e": 54, "44712856": 54, "2245077": 54, "40349164": 54, "59357852": 54, "09491185": 54, "16938243": 54, "74055645": 54, "9537006": 54, "26621851": 54, "03261455": 54, "analys": 55, "ipynb": 55, "worst": 55, "risk": [55, 63, 66], "advertis": 55, "paint": 55, "box": [55, 61, 66, 67], "rank": 55, "queu": 55, "ridg": [55, 56], "lasso": [55, 72], "svm": [55, 59], "quantil": 55, "cryptocurr": 55, "entrop": 55, "gini": 55, "kurtosi": 55, "relativist": 55, "consensu": 55, "interdict": 55, "catch": 55, "smuggler": 55, "antenna": 55, "fault": 55, "filter": 55, "censor": 55, "trend": 55, "parad": 55, "rout": 55, "bandwidth": 55, "wireless": 55, "nba": 55, "game": 55, "win": 55, "kalman": 55, "vehicl": 55, "clock": 55, "mesh": 55, "water": 55, "travel": 55, "salesman": 55, "shrinkag": [56, 58], "hyperparamet": [56, 58], "decompos": [56, 58], "loss_fn": [56, 58], "lambd": [56, 57, 58, 59], "relationship": [56, 60], "densiti": [56, 59], "beta_star": [56, 58], "x_train": [56, 58], "y_train": [56, 58], "x_test": [56, 57, 58, 59], "y_test": [56, 57, 58, 59], "lambd_valu": [56, 58], "logspac": [56, 57, 58, 59, 66, 72], "train_error": [56, 57, 58, 59], "test_error": [56, 57, 58, 59], "beta_valu": [56, 58], "generaliz": 56, "plot_train_test_error": [56, 58], "xscale": [56, 57, 58, 59, 72], "driven": 56, "decai": 56, "latter": 56, "shrink": [56, 58, 59], "plot_regularization_path": [56, 58], "num_coeff": [56, 58], "wi": [56, 57, 58, 59], "posterior": 57, "beta_": [57, 59], "sigmoid": 57, "beta_tru": [57, 59], "log_likelihood": 57, "score": 57, "trial": [57, 59, 66], "lambda_v": [57, 59], "beta_v": [57, 59], "versu": [57, 59], "0x108adedd8": 57, "techniqu": 58, "unadorn": 58, "hope": 58, "aid": 58, "interpet": 58, "tend": 58, "vanilla": 58, "ill": [58, 66, 69], "higher": [58, 62, 66], "bia": 58, "world": [58, 61, 72], "pm": 59, "outcom": 59, "hing": 59, "simultan": 59, "__future__": 59, "reg": 59, "mail": [60, 63], "extens": [60, 62, 64, 66], "background": [60, 61], "visit": [60, 65, 66, 67], "__version__": 60, "robust_kktsolv": 60, "frontier": 60, "admittedli": 60, "cryptic": 60, "mimic": 60, "deep": 60, "deepcopi": 60, "modul": [60, 61, 66, 73], "leaf": [60, 66], "recreat": 60, "concept": 60, "behind": 60, "url": 60, "cvxpy_pap": 60, "convex optim": 61, "open sourc": 61, "everyon": 61, "join": 61, "lagrang": [61, 66], "tour": 61, "clarabel": [61, 64, 66, 73], "scientist": 61, "engin": 61, "student": [61, 66], "chat": 61, "rilei": 61, "murrai": 61, "philipp": 61, "schiel": 61, "peopl": 61, "eric": 61, "chu": 61, "enzo": 61, "busseti": 61, "aj": 61, "friend": 61, "chri": 61, "dembia": 61, "appreci": 61, "drastic": 61, "cvxpygen": [61, 64], "complementari": 61, "everyth": [61, 73], "linux": 62, "maco": 62, "window": 62, "isol": 62, "virtualenv": 62, "environ": [62, 66], "instruct": 62, "download": 62, "studio": 62, "tool": [62, 73], "xcode": 62, "activ": [62, 66], "virtual": 62, "cbc": [62, 66], "glop": [62, 66, 73], "pdlp": [62, 66, 73], "xpress": [62, 64, 66, 73], "cvxpy_env": 62, "strongli": [62, 73], "recommend": [62, 63, 66, 73], "fresh": 62, "alongsid": [62, 63], "clone": 62, "newli": 62, "mint": 62, "top": [62, 66], "codespac": 62, "preconfigur": 62, "devcontain": 62, "click": 62, "button": 62, "appl": 62, "m1": 62, "troubl": 62, "pyproject": 62, "toml": 62, "newer": 62, "cmake": 62, "homebrew": 62, "wheel": 62, "On": 62, "bundl": 62, "latest": [62, 66], "apt": 62, "ubuntu": 62, "bind": [62, 63], "cvxopt_build_glpk": 62, "cvxopt_glpk_lib_dir": 62, "cvxopt_glpk_inc_dir": 62, "procedur": [62, 66], "gurobipi": 62, "fico": [62, 66, 73], "clp": 62, "cgl": [62, 66], "cylp": 62, "prerequisit": 62, "copt": [62, 66, 73], "coptpi": 62, "cplex": [62, 66], "sdpa": [62, 66, 73], "sdpap": 62, "sdpt3": 62, "sdpt3glue": 62, "naginterfac": 62, "ortool": [62, 66], "reliabl": 62, "mip": [62, 66], "revis": [62, 63], "simplex": [62, 66], "advantag": [62, 66, 73], "piqp": [62, 66, 73], "proxqp": [62, 64, 66, 73], "proxsuit": 62, "Be": 62, "intent": 62, "pyarg": 62, "januari": 63, "AND": 63, "FOR": 63, "reproduct": 63, "shall": 63, "licensor": 63, "owner": 63, "entiti": 63, "legal": 63, "act": 63, "contract": 63, "ownership": 63, "fifti": 63, "outstand": 63, "benefici": 63, "translat": 63, "media": 63, "authorship": 63, "attach": 63, "appendix": 63, "editori": 63, "annot": 63, "elabor": 63, "whole": 63, "mere": 63, "intention": 63, "submit": 63, "inclus": 63, "behalf": 63, "electron": 63, "verbal": 63, "sent": 63, "exclud": 63, "conspicu": 63, "Not": [63, 66], "incorpor": [63, 66], "herebi": 63, "perpetu": 63, "worldwid": 63, "charg": 63, "royalti": 63, "irrevoc": 63, "reproduc": 63, "publicli": 63, "sublicens": 63, "patent": 63, "sell": 63, "transfer": 63, "claim": 63, "infring": 63, "alon": [63, 73], "institut": 63, "litig": 63, "counterclaim": 63, "lawsuit": 63, "alleg": 63, "constitut": 63, "contributori": 63, "redistribut": 63, "meet": 63, "recipi": 63, "retain": 63, "trademark": 63, "pertain": 63, "readabl": 63, "wherev": 63, "addendum": 63, "constru": 63, "compli": 63, "submiss": 63, "notwithstand": 63, "herein": 63, "supersed": 63, "agreement": 63, "customari": 63, "merchant": 63, "sole": 63, "liabil": 63, "tort": 63, "neglig": 63, "grossli": 63, "liabl": 63, "damag": 63, "incident": 63, "consequenti": 63, "charact": 63, "inabl": 63, "goodwil": 63, "stoppag": 63, "failur": 63, "malfunct": 63, "commerci": [63, 64, 66], "advis": 63, "fee": 63, "indemn": 63, "oblig": 63, "indemnifi": 63, "defend": 63, "harmless": 63, "incur": 63, "boilerpl": 63, "bracket": 63, "syntax": [63, 68, 70, 73], "descript": 63, "identif": 63, "archiv": 63, "ecosystem": 64, "tensorflow": [64, 66], "dccp": 64, "dmcp": 64, "multi": 64, "ncvx": 64, "osmm": 64, "stochast": 64, "snapvx": 64, "julia": 64, "cvxr": 64, "gpkit": 64, "pico": 64, "friendli": 64, "rust": 64, "teach": 65, "explain": [65, 67, 68, 69, 72], "home": 65, "overview": [65, 69], "unfamiliar": 66, "47610300459e": 66, "00025244976": 66, "999999986374": 66, "complementar": 66, "tighten": 66, "0d": [66, 73], "variant": 66, "cheap": 66, "decomposit": 66, "symmetri": 66, "benefit": [66, 73], "fine": 66, "grain": 66, "downsid": 66, "postiv": 66, "expr1": [66, 67, 68, 70], "constr1": 66, "expr2": [66, 67, 68, 70], "constr2": 66, "glpk_mi": 66, "ecos_bb": [66, 73], "polici": [66, 73], "recur": 66, "quickli": 66, "academia": 66, "faculti": 66, "academ": 66, "registr": 66, "exce": 66, "pure": 66, "is_real": 66, "is_complex": 66, "is_imag": 66, "subexpress": [66, 67], "prob1": [66, 67], "prob2": [66, 67, 72], "requries_grad": 66, "multiprecis": 66, "epsilondash": 66, "epsilonstar": 66, "manual": [66, 73], "pose": 66, "v1": 66, "powconend": [66, 73], "scipy_opt": 66, "installed_solv": 66, "progress": 66, "debug": 66, "domahidi": 66, "laboratori": 66, "eth": 66, "451e": 66, "125e": 66, "7857": 66, "839e": 66, "9829": 66, "828e": 66, "829e": 66, "9899": 66, "000121": 66, "82842708233": 66, "solverstat": 66, "iinfitem": 66, "intpnt_it": 66, "liinfitem": 66, "simplex_it": 66, "mio_num_relax": 66, "mio_intpnt_it": 66, "mio_simplex_it": 66, "doc": 66, "pythonapi": 66, "exploit": 66, "reus": 66, "cach": 66, "use_indirect": 66, "2500": 66, "90e": 66, "9223e": 66, "1168e": 66, "6446e": 66, "8284": 66, "8285": 66, "82837896975": 66, "000": 66, "mu_eq": 66, "mu_in": 66, "abstol_inacc": 66, "reltol_inacc": 66, "feastol_inacc": 66, "time_limit_sec": 66, "parameters_proto": 66, "parameters_pb2": 66, "glopparamet": 66, "protocol": 66, "msk_dpar_basis_tol_x": 66, "msk_ipar_num_thread": 66, "save_fil": 66, "prevent": 66, "accept_unknown": 66, "arbitrarili": 66, "bad": 66, "mio": 66, "tolerance_param": 66, "mosek_conif": 66, "preced": 66, "elimin": 66, "old": 66, "msk_ipar_intpnt_solve_form": 66, "msk_solve_du": 66, "ldl": 66, "ldl2": 66, "qr": 66, "chol": 66, "chol2": 66, "presolv": 66, "redund": 66, "held": 66, "maxiter": 66, "lambdastar": 66, "0e2": 66, "omegastar": 66, "search": 66, "lowerbound": 66, "0e5": 66, "upperbound": 66, "betastar": 66, "betabar": 66, "gammastar": 66, "issymmetr": 66, "isdimac": 66, "dimac": 66, "numthread": 66, "cpu_count": 66, "domainmethod": 66, "rangemethod": 66, "decomp": 66, "frvmethod": 66, "pivot": 66, "zeropoint": 66, "lu": 66, "anderson": 66, "precondit": 66, "sytem": 66, "use_quad_obj": 66, "cut": 66, "seem": 66, "buggi": 66, "alldifferentcut": 66, "redsplitcut": 66, "landpcut": 66, "preprocesscut": 66, "gomorycut": 66, "mircut": 66, "mircuts2": 66, "twomircut": 66, "residualcapacitycut": 66, "knapsackcut": 66, "flowcovercut": 66, "cliquecut": 66, "liftprojectcut": 66, "oddholecut": 66, "probingcut": 66, "simpleroundingcut": 66, "cutgennam": 66, "integertoler": 66, "deem": 66, "maximumsecond": 66, "maximumnod": 66, "maximumsolut": 66, "evalut": 66, "numberthread": 66, "allowablegap": 66, "allowablefractiongap": 66, "allowablepercentagegap": 66, "percentag": 66, "cplex_param": 66, "cpx_param_advind": 66, "assist": 66, "cpx_param_datacheck": 66, "datacheck": 66, "cplex_filenam": 66, "sav": 66, "mp": 66, "export": 66, "reoptim": 66, "Its": 66, "nag_param": 66, "lpipm": 66, "scip_param": 66, "ipm": 66, "solvers_pb2": 66, "primaldualhybridgradientparam": 66, "passag": 66, "save_ii": 66, "irreduc": 66, "iiss": 66, "write_mp": 66, "maxtim": 66, "250": 66, "metadata": 66, "resembl": [66, 73], "substanti": [66, 72, 73], "walk": [66, 67], "likewis": 66, "forbid": 66, "dsl": 66, "p_sqrt": 66, "quotient": 66, "p_tild": 66, "analogu": 66, "complaint": 66, "gamma_v": [66, 72], "new_problem_tim": 66, "new_problem": 66, "meaning": 66, "1g": 66, "imposs": 66, "introductori": 66, "prototyp": 66, "tailor": 66, "child": 66, "qp_solver": 66, "qpsolver": 66, "osqp_qpif": 66, "custom_osqp": 66, "mip_cap": 66, "oppos": 66, "mi_supported_constraint": 66, "supported_constraint": 66, "scipy_canon_backend": 66, "fast": 66, "arithmet": [67, 68, 71], "69": 67, "ban": 67, "opposit": [67, 72, 73], "conclus": 67, "_n": 67, "certifi": 67, "solvabl": [67, 68, 69], "prob3": [67, 72], "prob4": 67, "ggp": 68, "9999999938309496": 68, "9999999989682057": 68, "999999974180587": 68, "0000000108569758": 68, "is_log_log_const": 68, "expr_": 68, "incr": [68, 70], "min_": [68, 70], "decr": [68, 70], "x11": [68, 70], "x1q": [68, 70], "xp1": [68, 70], "xpq": [68, 70], "n_j": [68, 70], "ddot": [68, 70], "nn": [68, 70], "xk": [68, 70], "thorough": 69, "49999737143004713": 69, "648717724845007": 69, "mistakenli": 69, "is_quasiconvex": 69, "is_quasiconcav": 69, "is_quasilinear": 69, "e_1": 69, "e_2": 69, "e_n": 69, "e_i": 69, "fn": 69, "infix": [69, 70, 71], "dist_ratio": 69, "gen_lambda_max": 69, "bx": 69, "condition_numb": 69, "unlucki": 69, "histor": 70, "deprec": 70, "adopt": 70, "dom": 70, "semi": [70, 72], "nuclear": 70, "expr_list": 70, "expr3": 70, "expr_sum": 70, "col_sum": 70, "row_sum": 70, "cdf": [70, 73], "highest": 70, "conserv": 70, "1q": 70, "y_k": 70, "bmod": 70, "lfloor": 70, "rfloor": 70, "_tri": 70, "status": 71, "999999999761": 72, "00000000001": 72, "19961841702e": 72, "00000000006": 72, "unbounded_inaccur": 72, "infeasible_inaccur": 72, "alias": 72, "infeasible_or_unbound": 72, "rare": [72, 73], "14133859146": 72, "11480673e": 72, "30625742e": 72, "34643668e": 72, "24976681e": 72, "79039542e": 72, "repeatedli": [72, 73], "sq_penalti": 72, "l1_penalti": 72, "x_valu": 72, "211": 72, "212": 72, "pool": 72, "get_x": 72, "gamma_valu": 72, "revers": 73, "chronolog": 73, "pack": 73, "addedd": 73, "powerconend": 73, "clearer": 73, "stabil": 73, "plan": 73, "finiteset": 73, "relentrconequad": 73, "oprelentrconequad": 73, "piec": 73, "gsoc": 73, "benchmark": 73, "increment": 73, "minor": 73, "past": 73, "rewrot": 73, "openmp": 73, "multithread": 73, "operand": 73, "builtin": 73, "supersc": 73, "incompat": 73, "fall": 73, "runtimeerror": 73, "0xe": 73, "0xd": 73, "dive": 73, "modular": 73, "unifi": 73, "treatment": 73, "semidef": 73, "byond": 73, "gave": 73, "nd": 73, "renam": 73, "mul_elemwis": 73, "max_entri": 73, "sum_entri": 73, "max_elemwis": 73, "min_elemwis": 73}, "objects": {"": [[66, 0, 1, "", "Leaf"], [66, 0, 1, "", "solve"]], "cvxpy": [[7, 1, 1, "", "Maximize"], [7, 1, 1, "", "Minimize"], [7, 1, 1, "", "Problem"], [3, 1, 1, "", "abs"], [2, 0, 1, "", "bmat"], [2, 1, 1, "", "conj"], [2, 1, 1, "", "convolve"], [2, 1, 1, "", "cumsum"], [2, 0, 1, "", "diag"], [2, 0, 1, "", "diff"], [3, 1, 1, "", "entr"], [3, 1, 1, "", "exp"], [2, 0, 1, "", "hstack"], [3, 1, 1, "", "huber"], [2, 1, 1, "", "imag"], [3, 0, 1, "", "inv_pos"], [3, 1, 1, "", "kl_div"], [2, 1, 1, "", "kron"], [3, 1, 1, "", "log"], [3, 1, 1, "", "log1p"], [3, 1, 1, "", "log_normcdf"], [3, 1, 1, "", "loggamma"], [3, 1, 1, "", "logistic"], [2, 0, 1, "", "matmul"], [3, 1, 1, "", "maximum"], [3, 0, 1, "", "minimum"], [2, 1, 1, "", "multiply"], [3, 0, 1, "", "neg"], [2, 0, 1, "", "outer"], [2, 0, 1, "", "partial_trace"], [2, 0, 1, "", "partial_transpose"], [3, 0, 1, "", "pos"], [3, 1, 1, "", "power"], [2, 0, 1, "", "real"], [3, 1, 1, "", "rel_entr"], [2, 1, 1, "", "reshape"], [2, 0, 1, "", "scalar_product"], [3, 0, 1, "", "scalene"], [3, 0, 1, "", "sqrt"], [3, 0, 1, "", "square"], [2, 0, 1, "", "sum"], [2, 1, 1, "", "trace"], [2, 1, 1, "", "transpose"], [2, 1, 1, "", "upper_tri"], [2, 0, 1, "", "vec"], [4, 1, 1, "", "von_neumann_entr"], [2, 0, 1, "", "vstack"], [3, 1, 1, "", "xexp"]], "cvxpy.Maximize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Minimize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Problem": [[7, 2, 1, "", "atoms"], [7, 2, 1, "", "backward"], [7, 3, 1, "", "compilation_time"], [7, 2, 1, "", "constants"], [7, 3, 1, "", "constraints"], [7, 2, 1, "", "derivative"], [7, 2, 1, "", "get_problem_data"], [7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"], [7, 2, 1, "", "is_dpp"], [7, 2, 1, "", "is_dqcp"], [7, 2, 1, "", "is_qp"], [7, 3, 1, "", "objective"], [7, 2, 1, "", "parameters"], [7, 2, 1, "", "register_solve"], [7, 3, 1, "", "size_metrics"], [7, 2, 1, "", "solve"], [7, 3, 1, "", "solver_stats"], [7, 3, 1, "", "status"], [7, 2, 1, "", "unpack_results"], [7, 3, 1, "", "value"], [7, 2, 1, "", "variables"]], "cvxpy.atoms.affine.add_expr": [[2, 1, 1, "", "AddExpression"]], "cvxpy.atoms.affine.binary_operators": [[2, 1, 1, "", "DivExpression"], [2, 1, 1, "", "MulExpression"]], "cvxpy.atoms.affine.index": [[2, 1, 1, "", "index"]], "cvxpy.atoms.affine.promote": [[2, 0, 1, "", "promote"]], "cvxpy.atoms.affine.unary_operators": [[2, 1, 1, "", "NegExpression"]], "cvxpy.atoms.affine.upper_tri": [[2, 0, 1, "", "vec_to_upper_tri"]], "cvxpy.atoms.affine.wraps": [[2, 1, 1, "", "psd_wrap"]], "cvxpy.atoms.atom": [[1, 1, 1, "", "Atom"]], "cvxpy.atoms.atom.Atom": [[1, 3, 1, "", "domain"], [1, 3, 1, "", "grad"], [1, 2, 1, "", "is_atom_affine"], [1, 2, 1, "", "is_atom_concave"], [1, 2, 1, "", "is_atom_convex"], [1, 2, 1, "", "is_atom_log_log_affine"], [1, 2, 1, "", "is_atom_log_log_concave"], [1, 2, 1, "", "is_atom_log_log_convex"], [1, 2, 1, "", "is_decr"], [1, 2, 1, "", "is_incr"]], "cvxpy.atoms.cummax": [[4, 1, 1, "", "cummax"]], "cvxpy.atoms.dotsort": [[4, 1, 1, "", "dotsort"]], "cvxpy.atoms.eye_minus_inv": [[4, 1, 1, "", "eye_minus_inv"], [4, 0, 1, "", "resolvent"]], "cvxpy.atoms.geo_mean": [[4, 1, 1, "", "geo_mean"]], "cvxpy.atoms.geo_mean.geo_mean": [[4, 4, 1, "", "approx_error"], [4, 4, 1, "", "w"]], "cvxpy.atoms.gmatmul": [[4, 1, 1, "", "gmatmul"]], "cvxpy.atoms.harmonic_mean": [[4, 0, 1, "", "harmonic_mean"]], "cvxpy.atoms.inv_prod": [[4, 0, 1, "", "inv_prod"]], "cvxpy.atoms.lambda_max": [[4, 1, 1, "", "lambda_max"]], "cvxpy.atoms.lambda_min": [[4, 0, 1, "", "lambda_min"]], "cvxpy.atoms.lambda_sum_largest": [[4, 0, 1, "", "lambda_sum_largest"]], "cvxpy.atoms.lambda_sum_smallest": [[4, 0, 1, "", "lambda_sum_smallest"]], "cvxpy.atoms.log_det": [[4, 1, 1, "", "log_det"]], "cvxpy.atoms.log_sum_exp": [[4, 1, 1, "", "log_sum_exp"]], "cvxpy.atoms.matrix_frac": [[4, 0, 1, "", "matrix_frac"]], "cvxpy.atoms.max": [[4, 1, 1, "", "max"]], "cvxpy.atoms.min": [[4, 0, 1, "", "min"]], "cvxpy.atoms.mixed_norm": [[4, 0, 1, "", "mixed_norm"]], "cvxpy.atoms.norm": [[4, 0, 1, "", "norm"], [4, 0, 1, "", "norm2"]], "cvxpy.atoms.norm1": [[4, 1, 1, "", "norm1"]], "cvxpy.atoms": [[4, 1, 1, "", "norm_inf"], [4, 1, 1, "", "one_minus_pos"]], "cvxpy.atoms.norm_nuc": [[4, 1, 1, "", "normNuc"]], "cvxpy.atoms.one_minus_pos": [[4, 0, 1, "", "diff_pos"]], "cvxpy.atoms.perspective": [[4, 1, 1, "", "perspective"]], "cvxpy.atoms.pf_eigenvalue": [[4, 1, 1, "", "pf_eigenvalue"]], "cvxpy.atoms.pnorm": [[4, 1, 1, "", "Pnorm"], [4, 0, 1, "", "pnorm"]], "cvxpy.atoms.prod": [[4, 0, 1, "", "prod"]], "cvxpy.atoms.ptp": [[4, 0, 1, "", "ptp"]], "cvxpy.atoms.quad_form": [[4, 0, 1, "", "quad_form"]], "cvxpy.atoms.quad_over_lin": [[4, 1, 1, "", "quad_over_lin"]], "cvxpy.atoms.sigma_max": [[4, 1, 1, "", "sigma_max"]], "cvxpy.atoms.stats": [[2, 0, 1, "", "mean"], [4, 0, 1, "", "std"], [4, 0, 1, "", "var"]], "cvxpy.atoms.sum_largest": [[4, 1, 1, "", "sum_largest"]], "cvxpy.atoms.sum_smallest": [[4, 0, 1, "", "sum_smallest"]], "cvxpy.atoms.sum_squares": [[4, 0, 1, "", "sum_squares"]], "cvxpy.atoms.suppfunc": [[4, 1, 1, "", "SuppFuncAtom"]], "cvxpy.atoms.total_variation": [[4, 0, 1, "", "tv"]], "cvxpy.atoms.tr_inv": [[4, 0, 1, "", "tr_inv"]], "cvxpy.constraints.constraint": [[5, 1, 1, "", "Constraint"]], "cvxpy.constraints.constraint.Constraint": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential": [[5, 1, 1, "", "ExpCone"], [5, 1, 1, "", "OpRelEntrConeQuad"], [5, 1, 1, "", "RelEntrConeQuad"]], "cvxpy.constraints.exponential.ExpCone": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential.OpRelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.exponential.RelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.finite_set": [[5, 1, 1, "", "FiniteSet"]], "cvxpy.constraints.finite_set.FiniteSet": [[5, 3, 1, "", "ineq_form"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.nonpos": [[5, 1, 1, "", "NonPos"]], "cvxpy.constraints.nonpos.NonPos": [[5, 3, 1, "", "dual_value"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power": [[5, 1, 1, "", "PowCone3D"], [5, 1, 1, "", "PowConeND"]], "cvxpy.constraints.power.PowCone3D": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power.PowConeND": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.psd": [[5, 1, 1, "", "PSD"]], "cvxpy.constraints.psd.PSD": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.second_order": [[5, 1, 1, "", "SOC"]], "cvxpy.constraints.second_order.SOC": [[5, 4, 1, "", "X"], [5, 4, 1, "", "axis"], [5, 2, 1, "", "is_dcp"], [5, 4, 1, "", "t"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.zero": [[5, 1, 1, "", "Zero"]], "cvxpy.constraints.zero.Zero": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.cumsum": [[2, 4, 1, "", "axis"], [2, 4, 1, "", "expr"]], "cvxpy.expressions.constants": [[6, 1, 1, "", "Constant"]], "cvxpy.expressions.constants.Constant": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.constants.callback_param": [[6, 1, 1, "", "CallbackParam"]], "cvxpy.expressions.constants.callback_param.CallbackParam": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.constants.parameter": [[6, 1, 1, "", "Parameter"]], "cvxpy.expressions.constants.parameter.Parameter": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.expression": [[6, 1, 1, "", "Expression"]], "cvxpy.expressions.expression.Expression": [[6, 3, 1, "", "T"], [6, 2, 1, "", "__add__"], [6, 2, 1, "", "__div__"], [6, 2, 1, "", "__eq__"], [6, 2, 1, "", "__ge__"], [6, 2, 1, "", "__le__"], [6, 2, 1, "", "__lshift__"], [6, 2, 1, "", "__matmul__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__pow__"], [6, 2, 1, "", "__radd__"], [6, 2, 1, "", "__rdiv__"], [6, 2, 1, "", "__rlshift__"], [6, 2, 1, "", "__rmatmul__"], [6, 2, 1, "", "__rmul__"], [6, 2, 1, "", "__rrshift__"], [6, 2, 1, "", "__rshift__"], [6, 2, 1, "", "__rsub__"], [6, 2, 1, "", "__rtruediv__"], [6, 2, 1, "", "__sub__"], [6, 2, 1, "", "__truediv__"], [6, 3, 1, "", "curvature"], [6, 3, 1, "", "domain"], [6, 3, 1, "", "grad"], [6, 2, 1, "", "is_affine"], [6, 2, 1, "", "is_concave"], [6, 2, 1, "", "is_constant"], [6, 2, 1, "", "is_convex"], [6, 2, 1, "", "is_dcp"], [6, 2, 1, "", "is_dgp"], [6, 2, 1, "", "is_dpp"], [6, 2, 1, "", "is_dqcp"], [6, 2, 1, "", "is_log_log_affine"], [6, 2, 1, "", "is_log_log_concave"], [6, 2, 1, "", "is_log_log_convex"], [6, 2, 1, "", "is_nonneg"], [6, 2, 1, "", "is_nonpos"], [6, 2, 1, "", "is_zero"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "sign"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.leaf": [[6, 1, 1, "", "Leaf"]], "cvxpy.expressions.leaf.Leaf": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.variable": [[6, 1, 1, "", "Variable"]], "cvxpy.expressions.variable.Variable": [[6, 3, 1, "", "T"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.problems.problem": [[7, 1, 1, "", "SizeMetrics"], [7, 1, 1, "", "SolverStats"]], "cvxpy.problems.problem.SizeMetrics": [[7, 4, 1, "", "max_big_small_squared"], [7, 4, 1, "", "max_data_dimension"], [7, 4, 1, "", "num_scalar_data"], [7, 4, 1, "", "num_scalar_eq_constr"], [7, 4, 1, "", "num_scalar_leq_constr"], [7, 4, 1, "", "num_scalar_variables"]], "cvxpy.problems.problem.SolverStats": [[7, 4, 1, "id0", "extra_stats"], [7, 2, 1, "", "from_dict"], [7, 4, 1, "id1", "num_iters"], [7, 4, 1, "id2", "setup_time"], [7, 4, 1, "id3", "solve_time"], [7, 4, 1, "id4", "solver_name"]], "cvxpy.reductions.chain": [[8, 1, 1, "", "Chain"]], "cvxpy.reductions.chain.Chain": [[8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 4, 1, "", "reductions"]], "cvxpy.reductions.complex2real.complex2real": [[11, 1, 1, "", "Complex2Real"]], "cvxpy.reductions.complex2real.complex2real.Complex2Real": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct": [[9, 1, 1, "", "Dualize"], [9, 1, 1, "", "Slacks"]], "cvxpy.reductions.cone2cone.affine2direct.Dualize": [[9, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct.Slacks": [[9, 2, 1, "", "apply"]], "cvxpy.reductions.cvx_attr2constr": [[11, 1, 1, "", "CvxAttr2Constr"]], "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions": [[10, 5, 0, "-", "dcp2cone"], [12, 5, 0, "-", "qp2quad_form"]], "cvxpy.reductions.dcp2cone": [[10, 5, 0, "-", "cone_matrix_stuffing"], [10, 5, 0, "-", "dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, 1, 1, "", "ConeDims"], [10, 1, 1, "", "ConeMatrixStuffing"], [10, 1, 1, "", "ParamConeProg"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims": [[10, 4, 1, "", "EQ_DIM"], [10, 4, 1, "", "EXP_DIM"], [10, 4, 1, "", "LEQ_DIM"], [10, 4, 1, "", "P3D_DIM"], [10, 4, 1, "", "PSD_DIM"], [10, 4, 1, "", "SOC_DIM"], [10, 4, 1, "", "exp"], [10, 4, 1, "", "nonneg"], [10, 4, 1, "", "psd"], [10, 4, 1, "", "soc"], [10, 4, 1, "", "zero"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing": [[10, 4, 1, "", "CONSTRAINTS"], [10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "invert"], [10, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg": [[10, 2, 1, "", "apply_param_jac"], [10, 2, 1, "", "apply_parameters"], [10, 2, 1, "", "is_mixed_integer"], [10, 2, 1, "", "split_adjoint"], [10, 2, 1, "", "split_solution"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, 1, 1, "", "Dcp2Cone"]], "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone": [[10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "canonicalize_expr"], [10, 2, 1, "", "canonicalize_tree"]], "cvxpy.reductions.dgp2dcp.dgp2dcp": [[11, 1, 1, "", "Dgp2Dcp"]], "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "canonicalize_expr"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.eval_params": [[11, 1, 1, "", "EvalParams"]], "cvxpy.reductions.eval_params.EvalParams": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.flip_objective": [[11, 1, 1, "", "FlipObjective"]], "cvxpy.reductions.flip_objective.FlipObjective": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.qp2quad_form": [[12, 5, 0, "-", "qp2symbolic_qp"], [12, 5, 0, "-", "qp_matrix_stuffing"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, 1, 1, "", "Qp2SymbolicQp"], [12, 0, 1, "", "accepts"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, 1, 1, "", "ConeDims"], [12, 1, 1, "", "ParamQuadProg"], [12, 1, 1, "", "QpMatrixStuffing"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims": [[12, 4, 1, "", "exp"], [12, 4, 1, "", "nonpos"], [12, 4, 1, "", "psd"], [12, 4, 1, "", "soc"], [12, 4, 1, "", "zero"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg": [[12, 2, 1, "", "apply_param_jac"], [12, 2, 1, "", "apply_parameters"], [12, 2, 1, "", "is_mixed_integer"], [12, 2, 1, "", "split_adjoint"], [12, 2, 1, "", "split_solution"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "invert"], [12, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.reduction": [[8, 1, 1, "", "Reduction"]], "cvxpy.reductions.reduction.Reduction": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 2, 1, "", "reduce"], [8, 2, 1, "", "retrieve"]], "cvxpy.reductions.solution": [[8, 1, 1, "", "Solution"]], "cvxpy.reductions.solution.Solution": [[8, 4, 1, "", "attr"], [8, 4, 1, "", "dual_vars"], [8, 4, 1, "", "opt_val"], [8, 4, 1, "", "primal_vars"], [8, 4, 1, "", "status"]], "cvxpy.reductions.solvers.solving_chain": [[8, 1, 1, "", "SolvingChain"]], "cvxpy.reductions.solvers.solving_chain.SolvingChain": [[8, 2, 1, "", "prepend"], [8, 4, 1, "", "reductions"], [8, 2, 1, "", "solve"], [8, 2, 1, "", "solve_via_data"], [8, 4, 1, "", "solver"]], "cvxpy.transforms": [[13, 1, 1, "", "indicator"], [13, 2, 1, "", "linearize"]], "cvxpy.transforms.partial_optimize": [[13, 2, 1, "", "partial_optimize"]], "cvxpy.transforms.scalarize": [[13, 2, 1, "", "log_sum_exp"], [13, 2, 1, "", "max"], [13, 2, 1, "", "targets_and_priorities"], [13, 2, 1, "", "weighted_sum"]], "cvxpy.transforms.suppfunc": [[13, 1, 1, "", "SuppFunc"]], "cvxpy.transforms.suppfunc.SuppFunc": [[13, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:module"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "module", "Python module"]}, "titleterms": {"api": 0, "document": 0, "atom": [1, 2, 3, 4, 47, 68, 69, 70, 73], "represent": 1, "affin": 2, "addexpress": 2, "mulexpress": 2, "divexpress": 2, "bmat": 2, "conj": 2, "convolv": 2, "cumsum": 2, "diag": 2, "diff": 2, "hstack": 2, "imag": [2, 36], "index": [2, 70], "kron": 2, "matmul": 2, "mean": 2, "multipli": [2, 18], "outer": 2, "partial_trac": 2, "partial_transpos": 2, "promot": 2, "psd_wrap": 2, "real": 2, "reshap": 2, "scalar_product": 2, "sum": 2, "trace": 2, "transpos": [2, 68, 70], "negexpress": 2, "upper_tri": 2, "vec": 2, "vec_to_upper_tri": 2, "vstack": 2, "cvxpy": [3, 10, 12, 14, 15, 60, 61, 65, 72, 73], "elementwis": [3, 68, 70], "packag": [3, 10, 12, 22], "ab": 3, "entr": 3, "exp": 3, "huber": 3, "inv_po": 3, "kl_div": 3, "log": [3, 35, 47, 68], "log_normcdf": 3, "log1p": 3, "loggamma": 3, "logist": [3, 57], "maximum": 3, "minimum": [3, 54], "neg": 3, "po": 3, "power": [3, 29, 31, 50, 68, 70], "rel_entr": 3, "scalen": 3, "sqrt": 3, "squar": [3, 38, 54], "xexp": 3, "other": [4, 13, 72], "cummax": 4, "diff_po": 4, "dotsort": 4, "eye_minus_inv": 4, "geo_mean": 4, "gmatmul": 4, "harmonic_mean": 4, "inv_prod": 4, "lambda_max": 4, "lambda_min": 4, "lambda_sum_largest": 4, "lambda_sum_smallest": 4, "log_det": 4, "log_sum_exp": 4, "matrix_frac": 4, "max": [4, 26], "min": [4, 26], "mixed_norm": 4, "norm": [4, 35], "norm1": 4, "norm2": 4, "norm_inf": 4, "normnuc": 4, "one_minus_po": 4, "perspect": 4, "pf_eigenvalu": 4, "pnorm": 4, "ptp": 4, "prod": 4, "quad_form": 4, "quad_over_lin": 4, "resolv": 4, "sigma_max": 4, "std": 4, "sum_largest": 4, "sum_smallest": 4, "sum_squar": 4, "suppfuncatom": 4, "tr_inv": 4, "tv": 4, "var": 4, "von_neumann_entr": 4, "constraint": [5, 21, 60, 72, 73], "nonpo": [5, 73], "zero": 5, "psd": 5, "soc": 5, "expcon": 5, "relentrconequad": 5, "powcone3d": 5, "powconend": 5, "finiteset": 5, "oprelentrconequad": 5, "express": [6, 60, 66, 67], "leaf": 6, "variabl": [6, 15, 34, 60, 66], "paramet": [6, 72], "constant": 6, "callbackparam": 6, "problem": [7, 20, 22, 24, 25, 27, 28, 30, 32, 33, 34, 35, 47, 60, 66, 67, 68, 69, 72], "minim": [7, 20, 30], "maxim": [7, 28, 48], "sizemetr": 7, "solverstat": 7, "reduct": [8, 9, 10, 11, 12, 66, 73], "disclaim": 8, "type": 8, "core": 8, "class": 8, "solut": [8, 9, 24, 35, 44], "chain": 8, "solvingchain": 8, "back": 9, "end": [9, 11], "dcp2cone": [9, 10], "qp2symbolicqp": 9, "dualiz": 9, "usag": 9, "assumpt": 9, "addit": [9, 62], "note": [9, 16], "detail": 9, "requir": 9, "format": 9, "primal_var": 9, "slack": 9, "subpackag": [10, 12], "submodul": [10, 12], "cone_matrix_stuf": 10, "modul": [10, 12], "content": [10, 12], "middl": 11, "complex2r": 11, "cvxattr2constr": 11, "dgp2dcp": 11, "evalparam": 11, "flipobject": 11, "qp2quad_form": 12, "qp2symbolic_qp": 12, "qp_matrix_stuf": 12, "transform": [13, 26, 66, 73], "suppfunc": 13, "scalar": [13, 68, 70], "cite": [14, 60], "contribut": 15, "wishlist": 15, "gener": [15, 20, 21, 22, 28, 30, 34, 35, 46, 56, 58, 73], "principl": 15, "develop": [15, 16], "environ": 15, "checklist": 15, "licens": [15, 63], "code": 15, "style": 15, "write": [15, 56, 58], "unit": 15, "test": [15, 62], "run": [15, 62], "benchmark": 15, "solver": [15, 60, 62, 64, 66, 73], "interfac": [15, 73], "conic": 15, "": [15, 26, 60], "form": [15, 66], "an": [15, 20, 25, 70], "altern": [15, 30], "dual": [15, 66], "regist": 15, "autodoc": 16, "capac": 17, "commun": [17, 29, 37], "channel": [17, 31], "exampl": [17, 24, 26, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 55, 59, 67], "method": [18, 66], "object": [19, 26, 56, 58, 60], "orient": 19, "convex": [19, 60, 67], "optim": [19, 23, 31, 32, 52, 53, 60], "beamwidth": 20, "arrai": 20, "arbitrari": 20, "2": [20, 47, 60, 67, 73], "d": 20, "geometri": 20, "introduct": [20, 22, 25, 27, 28, 30, 34, 35], "specif": 20, "data": [20, 21, 22, 25, 28, 30, 33, 34, 35, 46, 56, 58], "antenna": 20, "select": [20, 56], "solv": [20, 22, 25, 26, 27, 28, 34, 47, 66, 69], "us": [20, 21, 60], "bisect": 20, "algorithm": 20, "result": [20, 22, 25, 27, 30, 34, 35], "plot": [20, 25, 27, 34, 35], "fit": [21, 46, 56, 58], "censor": 21, "setup": [21, 22], "regular": [21, 56, 57, 58, 59], "ol": 21, "uncensor": 21, "take": [21, 60], "account": 21, "conclus": 21, "size": 22, "clock": 22, "mesh": 22, "import": 22, "helper": [22, 26, 33], "function": [22, 26, 33, 47, 56, 58, 60, 68, 70], "displai": 22, "consensu": 23, "fault": 24, "detect": 24, "topic": [24, 26, 32], "refer": [24, 26, 32, 47], "statement": [24, 32, 33], "approach": 24, "recoveri": [24, 33], "evalu": [24, 56, 58, 60], "chebychev": 25, "design": [25, 45, 53], "fir": 25, "filter": [25, 27, 33], "given": 25, "desir": 25, "h": 25, "omega": 25, "initi": 25, "minimax": 25, "todo": 26, "alloc": [26, 31], "interdict": 26, "effort": 26, "catch": 26, "smuggler": 26, "mathemat": 26, "formul": [26, 27, 28, 32], "game": 26, "path": [26, 56, 58], "secur": 26, "guard": 26, "placement": 26, "multipl": [26, 60], "sourc": 26, "destin": 26, "build": 26, "ell_1": [27, 32, 35, 57, 59], "trend": 27, "entropi": 28, "assign": 29, "wireless": 29, "system": [29, 73], "nonneg": [30, 51], "matrix": [30, 49, 51, 60, 68, 70], "factor": [30, 51], "perform": 30, "output": [30, 66], "bandwidth": 31, "gaussian": [31, 34], "parad": 32, "rout": 32, "relax": 32, "iter": [32, 35], "weight": 32, "heurist": [32, 35], "robust": 33, "kalman": 33, "vehicl": 33, "track": 33, "1d": 33, "model": [33, 56, 58, 64], "simul": 33, "spars": [34, 35, 60], "covari": 34, "estim": 34, "sever": 34, "alpha": 34, "valu": [34, 60, 66], "comput": 35, "set": [35, 66], "linear": [35, 39], "inequ": 35, "total": 36, "variat": 36, "paint": 36, "grayscal": 36, "color": 36, "water": 37, "fill": 37, "least": [38, 54], "program": [39, 40, 41, 42, 43, 47, 55, 66, 67, 68, 69], "mix": [40, 66], "integ": [40, 66], "quadrat": [40, 41], "semidefinit": [42, 60, 66], "second": 43, "order": 43, "cone": 43, "deriv": [44, 55], "fundament": [44, 47], "map": 44, "sensit": [44, 66], "analysi": [44, 45, 66], "gradient": [44, 66], "queu": 45, "sensitv": 45, "perturb": 45, "structur": 46, "predict": 46, "monomi": 46, "each": 46, "compon": 46, "dgp": [47, 68], "1": [47, 61, 67, 73], "curvatur": [47, 67, 68, 69], "from": 47, "geometr": [47, 55, 66, 68], "ruleset": [47, 66], "3": [47, 73], "4": [47, 61, 73], "next": 47, "step": 47, "volum": 48, "box": 48, "perron": 49, "frobeniu": 49, "complet": 49, "control": 50, "rank": 51, "one": 51, "fraction": 52, "aerospac": 53, "via": 53, "quasiconvex": [53, 55, 69], "length": 54, "basic": 55, "disciplin": [55, 66, 67, 68, 69], "machin": [55, 56, 58, 59], "learn": [55, 56, 58, 60], "financ": 55, "advanc": [55, 66], "applic": 55, "lasso": 56, "regress": [56, 57, 58], "featur": [56, 66, 73], "ridg": 58, "support": [59, 60, 62], "vector": [59, 68, 70, 72], "classifi": 59, "faq": 60, "where": 60, "can": 60, "i": [60, 66, 72], "get": [60, 66], "help": 60, "more": 60, "about": 60, "how": 60, "do": 60, "know": 60, "which": 60, "version": 60, "m": 60, "what": [60, 66, 72], "dcperror": 60, "except": 60, "find": 60, "dcp": [60, 67], "error": 60, "solvererror": 60, "doe": 60, "ar": 60, "differ": 60, "between": 60, "cannot": 60, "truth": 60, "numpi": [60, 73], "scipi": 60, "matric": [60, 66, 72], "constrain": 60, "posit": 60, "creat": 60, "special": 60, "properti": 60, "boolean": 60, "symmetr": 60, "ha": 60, "than": 60, "dimens": 60, "copi": 60, "why": 60, "so": 60, "long": 60, "compil": 60, "my": 60, "work": 60, "welcom": 61, "instal": 62, "suit": 62, "relat": 64, "project": 64, "framework": 64, "short": 65, "cours": 65, "attribut": [66, 73], "complex": 66, "arithmet": 66, "option": 66, "choos": 66, "view": 66, "stat": 66, "warm": 66, "start": 66, "standard": 66, "parametr": 66, "dpp": 66, "The": 66, "repeatedli": 66, "custom": 66, "canonic": 66, "backend": 66, "sign": 67, "rule": [67, 68, 69], "infix": [67, 68], "oper": [67, 68, 70], "composit": 69, "dqcp": 69, "slice": 70, "clarif": 70, "along": 70, "axi": 70, "user": 71, "guid": 71, "chang": [72, 73], "infeas": 72, "unbound": 72, "status": 72, "new": 73, "eco": 73, "deprec": 73, "conv": 73, "improv": 73, "highlight": 73, "break": 73, "bugfix": 73, "known": 73, "issu": 73, "notabl": 73, "patch": 73, "sinc": 73, "0": 73, "overview": 73, "compat": 73}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Atoms": [[1, "atoms"], [47, "atoms"]], "Representation of atoms": [[1, "representation-of-atoms"]], "Atom": [[1, "atom"]], "Affine Atoms": [[2, "affine-atoms"]], "AddExpression": [[2, "addexpression"]], "MulExpression": [[2, "mulexpression"]], "DivExpression": [[2, "divexpression"]], "bmat": [[2, "bmat"]], "conj": [[2, "conj"]], "convolve": [[2, "convolve"]], "cumsum": [[2, "cumsum"]], "diag": [[2, "diag"]], "diff": [[2, "diff"]], "hstack": [[2, "hstack"]], "imag": [[2, "imag"]], "index": [[2, "index"]], "kron": [[2, "kron"]], "matmul": [[2, "matmul"]], "mean": [[2, "mean"]], "multiply": [[2, "multiply"]], "outer": [[2, "outer"]], "partial_trace": [[2, "partial-trace"]], "partial_transpose": [[2, "partial-transpose"]], "promote": [[2, "promote"]], "psd_wrap": [[2, "psd-wrap"]], "real": [[2, "real"]], "reshape": [[2, "reshape"]], "scalar_product": [[2, "scalar-product"]], "sum": [[2, "sum"]], "trace": [[2, "trace"]], "transpose": [[2, "transpose"]], "NegExpression": [[2, "negexpression"]], "upper_tri": [[2, "upper-tri"]], "vec": [[2, "vec"]], "vec_to_upper_tri": [[2, "vec-to-upper-tri"]], "vstack": [[2, "vstack"]], "cvxpy.atoms.elementwise package": [[3, "cvxpy-atoms-elementwise-package"]], "abs": [[3, "abs"]], "entr": [[3, "entr"]], "exp": [[3, "exp"]], "huber": [[3, "huber"]], "inv_pos": [[3, "inv-pos"]], "kl_div": [[3, "kl-div"]], "log": [[3, "log"]], "log_normcdf": [[3, "log-normcdf"]], "log1p": [[3, "log1p"]], "loggamma": [[3, "loggamma"]], "logistic": [[3, "logistic"]], "maximum": [[3, "maximum"]], "minimum": [[3, "minimum"]], "neg": [[3, "neg"]], "pos": [[3, "pos"]], "power": [[3, "power"]], "rel_entr": [[3, "rel-entr"]], "scalene": [[3, "scalene"]], "sqrt": [[3, "sqrt"]], "square": [[3, "square"]], "xexp": [[3, "xexp"]], "Other Atoms": [[4, "other-atoms"]], "cummax": [[4, "cummax"]], "diff_pos": [[4, "diff-pos"]], "dotsort": [[4, "dotsort"]], "eye_minus_inv": [[4, "eye-minus-inv"]], "geo_mean": [[4, "geo-mean"]], "gmatmul": [[4, "gmatmul"]], "harmonic_mean": [[4, "harmonic-mean"]], "inv_prod": [[4, "inv-prod"]], "lambda_max": [[4, "lambda-max"]], "lambda_min": [[4, "lambda-min"]], "lambda_sum_largest": [[4, "lambda-sum-largest"]], "lambda_sum_smallest": [[4, "lambda-sum-smallest"]], "log_det": [[4, "log-det"]], "log_sum_exp": [[4, "log-sum-exp"]], "matrix_frac": [[4, "matrix-frac"]], "max": [[4, "max"]], "min": [[4, "min"]], "mixed_norm": [[4, "mixed-norm"]], "norm": [[4, "norm"]], "norm1": [[4, "norm1"]], "norm2": [[4, "norm2"]], "norm_inf": [[4, "norm-inf"]], "normNuc": [[4, "normnuc"]], "one_minus_pos": [[4, "one-minus-pos"]], "perspective": [[4, "perspective"]], "pf_eigenvalue": [[4, "pf-eigenvalue"]], "pnorm": [[4, "pnorm"]], "Pnorm": [[4, "id26"]], "ptp": [[4, "ptp"]], "prod": [[4, "prod"]], "quad_form": [[4, "quad-form"]], "quad_over_lin": [[4, "quad-over-lin"]], "resolvent": [[4, "resolvent"]], "sigma_max": [[4, "sigma-max"]], "std": [[4, "std"]], "sum_largest": [[4, "sum-largest"]], "sum_smallest": [[4, "sum-smallest"]], "sum_squares": [[4, "sum-squares"]], "SuppFuncAtom": [[4, "suppfuncatom"]], "tr_inv": [[4, "tr-inv"]], "tv": [[4, "tv"]], "var": [[4, "var"]], "von_neumann_entr": [[4, "von-neumann-entr"]], "Constraints": [[5, "constraints"], [72, "constraints"]], "Constraint": [[5, "constraint"]], "NonPos": [[5, "nonpos"]], "Zero": [[5, "zero"]], "PSD": [[5, "psd"]], "SOC": [[5, "soc"]], "ExpCone": [[5, "expcone"]], "RelEntrConeQuad": [[5, "relentrconequad"]], "PowCone3D": [[5, "powcone3d"]], "PowConeND": [[5, "powconend"]], "FiniteSet": [[5, "finiteset"]], "OpRelEntrConeQuad": [[5, "oprelentrconequad"]], "Expressions": [[6, "expressions"], [67, "expressions"]], "Expression": [[6, "expression"]], "Leaf": [[6, "leaf"]], "Variable": [[6, "variable"]], "Parameter": [[6, "parameter"]], "Constant": [[6, "constant"]], "CallbackParam": [[6, "callbackparam"]], "Problems": [[7, "problems"]], "Minimize": [[7, "minimize"]], "Maximize": [[7, "maximize"]], "Problem": [[7, "problem"]], "SizeMetrics": [[7, "sizemetrics"]], "SolverStats": [[7, "solverstats"]], "Reductions": [[8, "reductions"], [66, "reductions"], [73, "reductions"]], "Disclaimer": [[8, "disclaimer"]], "Types of Reductions": [[8, "types-of-reductions"]], "Core classes": [[8, "core-classes"]], "Solution": [[8, "solution"]], "Reduction": [[8, "reduction"]], "Chain": [[8, "chain"]], "SolvingChain": [[8, "solvingchain"]], "Back-End Reductions": [[9, "back-end-reductions"]], "Dcp2Cone": [[9, "dcp2cone"]], "Qp2SymbolicQp": [[9, "qp2symbolicqp"]], "Dualize": [[9, "dualize"]], "Usage": [[9, "usage"]], "Assumptions": [[9, "assumptions"], [9, "id1"]], "Additional notes": [[9, "additional-notes"]], "Details on required formatting of solution.primal_vars": [[9, "details-on-required-formatting-of-solution-primal-vars"]], "Slacks": [[9, "slacks"]], "cvxpy.reductions.dcp2cone package": [[10, "cvxpy-reductions-dcp2cone-package"]], "Subpackages": [[10, "subpackages"], [12, "subpackages"]], "Submodules": [[10, "submodules"], [12, "submodules"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing module": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone module": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "Module contents": [[10, "module-cvxpy.reductions.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"]], "Middle-End Reductions": [[11, "middle-end-reductions"]], "Complex2Real": [[11, "complex2real"]], "CvxAttr2Constr": [[11, "cvxattr2constr"]], "Dgp2Dcp": [[11, "dgp2dcp"]], "EvalParams": [[11, "evalparams"]], "FlipObjective": [[11, "flipobjective"]], "cvxpy.reductions.qp2quad_form package": [[12, "cvxpy-reductions-qp2quad-form-package"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp module": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing module": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "Transforms": [[13, "transforms"], [66, "transforms"], [73, "transforms"]], "SuppFunc": [[13, "suppfunc"]], "Scalarize": [[13, "scalarize"]], "Other": [[13, "other"]], "Citing CVXPY": [[14, "citing-cvxpy"]], "Contributing": [[15, "contributing"]], "Wishlist": [[15, "wishlist"]], "General principles": [[15, "general-principles"]], "Development environment": [[15, "development-environment"]], "Contribution checklist": [[15, "contribution-checklist"]], "License": [[15, "license"], [63, "license"]], "Code style": [[15, "code-style"]], "Writing unit tests": [[15, "writing-unit-tests"]], "Running unit tests": [[15, "running-unit-tests"]], "Benchmarks": [[15, "benchmarks"]], "Solver interfaces": [[15, "solver-interfaces"], [73, "solver-interfaces"], [73, "id3"]], "Conic solvers": [[15, "conic-solvers"]], "CVXPY\u2019s conic form": [[15, "cvxpy-s-conic-form"]], "An alternative conic form": [[15, "an-alternative-conic-form"]], "Dual variables": [[15, "dual-variables"], [66, "dual-variables"]], "Registering a solver": [[15, "registering-a-solver"]], "Writing tests": [[15, "writing-tests"]], "Developer Notes": [[16, "developer-notes"]], "autodoc": [[16, "autodoc"]], "Capacity of a Communication Channel": [[17, "capacity-of-a-communication-channel"]], "Example": [[17, "example"], [24, "example"], [29, "example"], [31, "example"], [32, "example"], [37, "example"], [38, "example"], [39, "example"], [40, "example"], [41, "example"], [42, "example"], [43, "example"], [59, "example"]], "Method of multipliers": [[18, "method-of-multipliers"]], "Object Oriented Convex Optimization": [[19, "object-oriented-convex-optimization"]], "Minimize beamwidth of an array with arbitrary 2-D geometry": [[20, "minimize-beamwidth-of-an-array-with-arbitrary-2-d-geometry"]], "Introduction": [[20, "introduction"], [22, "introduction"], [25, "introduction"], [27, "introduction"], [28, "introduction"], [30, "introduction"], [34, "introduction"], [35, "introduction"]], "Problem specification and data": [[20, "problem-specification-and-data"]], "Antenna array selection": [[20, "antenna-array-selection"]], "Data generation": [[20, "data-generation"], [46, "data-generation"]], "Solve using bisection algorithm": [[20, "solve-using-bisection-algorithm"]], "Result plots": [[20, "result-plots"], [25, "result-plots"], [34, "result-plots"], [35, "result-plots"]], "Fitting censored data": [[21, "fitting-censored-data"]], "Setup": [[21, "setup"]], "Data Generation": [[21, "data-generation"]], "Regular OLS": [[21, "regular-ols"]], "OLS using uncensored data": [[21, "ols-using-uncensored-data"]], "Using constraints to take into account of censored data": [[21, "using-constraints-to-take-into-account-of-censored-data"]], "Conclusion": [[21, "conclusion"]], "Sizing of clock meshes": [[22, "sizing-of-clock-meshes"]], "Import and setup packages": [[22, "import-and-setup-packages"]], "Helper functions": [[22, "helper-functions"], [26, "helper-functions"]], "Generate problem data": [[22, "generate-problem-data"], [28, "generate-problem-data"], [30, "generate-problem-data"], [34, "generate-problem-data"], [35, "generate-problem-data"]], "Solve problem and display results": [[22, "solve-problem-and-display-results"]], "Consensus optimization": [[23, "consensus-optimization"]], "Fault detection": [[24, "fault-detection"]], "Topic references": [[24, "topic-references"], [26, "topic-references"], [32, "topic-references"]], "Problem statement": [[24, "problem-statement"], [32, "problem-statement"], [33, "problem-statement"]], "Solution approach": [[24, "solution-approach"]], "Recovery": [[24, "recovery"]], "Evaluation": [[24, "evaluation"]], "Chebychev design of an FIR filter given a desired H(\\omega)": [[25, "chebychev-design-of-an-fir-filter-given-a-desired-h-omega"]], "Initialize problem data": [[25, "initialize-problem-data"]], "Solve the minimax (Chebychev) design problem": [[25, "solve-the-minimax-chebychev-design-problem"]], "TODO": [[26, "todo"], [26, "id1"]], "Allocating interdiction effort to catch a smuggler": [[26, "allocating-interdiction-effort-to-catch-a-smuggler"]], "Transformations and mathematical formulation": [[26, "transformations-and-mathematical-formulation"]], "Min/max game": [[26, "min-max-game"]], "Smuggler\u2019s objective": [[26, "smuggler-s-objective"]], "Smuggler\u2019s path example": [[26, "smuggler-s-path-example"]], "Security\u2019s objective": [[26, "security-s-objective"]], "Security example": [[26, "security-example"]], "Guard placement example": [[26, "guard-placement-example"]], "Multiple sources and destinations": [[26, "multiple-sources-and-destinations"]], "Guards": [[26, "guards"]], "Buildings": [[26, "buildings"]], "Example to solve": [[26, "example-to-solve"]], "\\ell_1 trend filtering": [[27, "ell-1-trend-filtering"]], "Formulate and solve problem": [[27, "formulate-and-solve-problem"], [28, "formulate-and-solve-problem"]], "Results plot": [[27, "results-plot"]], "Entropy maximization": [[28, "entropy-maximization"]], "Power Assignment in a Wireless Communication System": [[29, "power-assignment-in-a-wireless-communication-system"]], "Nonnegative matrix factorization": [[30, "nonnegative-matrix-factorization"]], "Perform alternating minimization": [[30, "perform-alternating-minimization"]], "Output results": [[30, "output-results"]], "Optimal Power and Bandwidth Allocation in a Gaussian Channel": [[31, "optimal-power-and-bandwidth-allocation-in-a-gaussian-channel"]], "Optimal parade route": [[32, "optimal-parade-route"]], "Optimization formulation": [[32, "optimization-formulation"]], "Relaxation": [[32, "relaxation"]], "Iterated weighted \\ell_1 heuristic": [[32, "iterated-weighted-ell-1-heuristic"]], "Robust Kalman filtering for vehicle tracking": [[33, "robust-kalman-filtering-for-vehicle-tracking"]], "Kalman filtering": [[33, "kalman-filtering"]], "Robust Kalman filtering": [[33, "robust-kalman-filtering"]], "Vehicle tracking example": [[33, "vehicle-tracking-example"]], "1D Model": [[33, "d-model"]], "Helper Functions": [[33, "helper-functions"]], "Problem Data": [[33, "problem-data"]], "Simulation": [[33, "simulation"]], "Kalman filtering recovery": [[33, "kalman-filtering-recovery"]], "Robust Kalman filtering recovery": [[33, "robust-kalman-filtering-recovery"]], "Sparse covariance estimation for Gaussian variables": [[34, "sparse-covariance-estimation-for-gaussian-variables"]], "Solve for several \\alpha values": [[34, "solve-for-several-alpha-values"]], "Computing a sparse solution of a set of linear inequalities": [[35, "computing-a-sparse-solution-of-a-set-of-linear-inequalities"]], "\\ell_1-norm heuristic": [[35, "ell-1-norm-heuristic"]], "Iterative log heuristic": [[35, "iterative-log-heuristic"]], "Total variation in-painting": [[36, "total-variation-in-painting"]], "Grayscale Images": [[36, "grayscale-images"]], "Color Images": [[36, "color-images"]], "Water Filling in Communications": [[37, "water-filling-in-communications"]], "Least-squares": [[38, "least-squares"]], "Linear program": [[39, "linear-program"]], "Mixed-integer quadratic program": [[40, "mixed-integer-quadratic-program"]], "Quadratic program": [[41, "quadratic-program"]], "Semidefinite program": [[42, "semidefinite-program"]], "Second-order cone program": [[43, "second-order-cone-program"]], "Derivatives fundamentals": [[44, "derivatives-fundamentals"]], "Solution map": [[44, "solution-map"]], "Sensitivity analysis": [[44, "sensitivity-analysis"]], "Gradient": [[44, "gradient"]], "Queuing design": [[45, "queuing-design"]], "Sensitvities": [[45, "sensitvities"]], "Perturbation analysis": [[45, "perturbation-analysis"]], "Structured prediction": [[46, "structured-prediction"]], "Monomial fit to each component": [[46, "monomial-fit-to-each-component"]], "Fitting": [[46, "fitting"]], "DGP fundamentals": [[47, "dgp-fundamentals"]], "1. Log-log curvature": [[47, "log-log-curvature"]], "Functions from geometric programming": [[47, "functions-from-geometric-programming"]], "2. Log-log curvature ruleset": [[47, "log-log-curvature-ruleset"]], "3. DGP problems": [[47, "dgp-problems"]], "Solving DGP problems": [[47, "solving-dgp-problems"]], "4. Next steps": [[47, "next-steps"]], "References": [[47, "references"]], "Maximizing the volume of a box": [[48, "maximizing-the-volume-of-a-box"]], "Perron-Frobenius matrix completion": [[49, "perron-frobenius-matrix-completion"]], "Power control": [[50, "power-control"]], "Rank-one nonnegative matrix factorization": [[51, "rank-one-nonnegative-matrix-factorization"]], "Fractional optimization": [[52, "fractional-optimization"]], "Aerospace Design via Quasiconvex Optimization": [[53, "aerospace-design-via-quasiconvex-optimization"]], "Minimum-length least squares": [[54, "minimum-length-least-squares"]], "Examples": [[55, "examples"]], "Basic examples": [[55, "basic-examples"]], "Disciplined geometric programming": [[55, "disciplined-geometric-programming"]], "Disciplined quasiconvex programming": [[55, "disciplined-quasiconvex-programming"]], "Derivatives": [[55, "derivatives"]], "Machine learning": [[55, "machine-learning"]], "Finance": [[55, "finance"]], "Advanced": [[55, "advanced"]], "Advanced Applications": [[55, "advanced-applications"]], "Machine Learning: Lasso Regression": [[56, "machine-learning-lasso-regression"]], "Writing the objective function": [[56, "writing-the-objective-function"], [58, "writing-the-objective-function"]], "Generating data": [[56, "generating-data"], [58, "generating-data"]], "Fitting the model": [[56, "fitting-the-model"], [58, "fitting-the-model"]], "Evaluating the model": [[56, "evaluating-the-model"], [58, "evaluating-the-model"]], "Regularization path and feature selection": [[56, "regularization-path-and-feature-selection"]], "Logistic regression with \\ell_1 regularization": [[57, "logistic-regression-with-ell-1-regularization"]], "Machine Learning: Ridge Regression": [[58, "machine-learning-ridge-regression"]], "Regularization path": [[58, "regularization-path"]], "Support vector machine classifier with \\ell_1-regularization": [[59, "support-vector-machine-classifier-with-ell-1-regularization"]], "FAQ": [[60, "faq"]], "Where can I get help with CVXPY?": [[60, "where-can-i-get-help-with-cvxpy"]], "Where can I learn more about convex optimization?": [[60, "where-can-i-learn-more-about-convex-optimization"]], "How do I know which version of CVXPY I\u2019m using?": [[60, "how-do-i-know-which-version-of-cvxpy-i-m-using"]], "What do I do if I get a DCPError exception?": [[60, "what-do-i-do-if-i-get-a-dcperror-exception"]], "How do I find DCP errors?": [[60, "how-do-i-find-dcp-errors"]], "What do I do if I get a SolverError exception?": [[60, "what-do-i-do-if-i-get-a-solvererror-exception"]], "What solvers does CVXPY support?": [[60, "what-solvers-does-cvxpy-support"]], "What are the differences between CVXPY\u2019s solvers?": [[60, "what-are-the-differences-between-cvxpy-s-solvers"]], "What do I do if I get \u201cException: Cannot evaluate the truth value of a constraint\u201d?": [[60, "what-do-i-do-if-i-get-exception-cannot-evaluate-the-truth-value-of-a-constraint"]], "Can I use NumPy functions on CVXPY objects?": [[60, "can-i-use-numpy-functions-on-cvxpy-objects"]], "Can I use SciPy sparse matrices with CVXPY?": [[60, "can-i-use-scipy-sparse-matrices-with-cvxpy"]], "How do I constrain a CVXPY matrix expression to be positive semidefinite?": [[60, "how-do-i-constrain-a-cvxpy-matrix-expression-to-be-positive-semidefinite"]], "How do I create variables with special properties, such as boolean or symmetric variables?": [[60, "how-do-i-create-variables-with-special-properties-such-as-boolean-or-symmetric-variables"]], "How do I create a variable that has multiple special properties, such as boolean and symmetric?": [[60, "how-do-i-create-a-variable-that-has-multiple-special-properties-such-as-boolean-and-symmetric"]], "How do I create variables with more than 2 dimensions?": [[60, "how-do-i-create-variables-with-more-than-2-dimensions"]], "Can I copy CVXPY expressions?": [[60, "can-i-copy-cvxpy-expressions"]], "Why does it take so long to compile my Problem?": [[60, "why-does-it-take-so-long-to-compile-my-problem"]], "How does CVXPY work?": [[60, "how-does-cvxpy-work"]], "How do I cite CVXPY?": [[60, "how-do-i-cite-cvxpy"]], "Welcome to CVXPY 1.4": [[61, "welcome-to-cvxpy-1-4"]], "Install": [[62, "install"]], "Install with Additional Solver Support": [[62, "install-with-additional-solver-support"]], "Running the test suite": [[62, "running-the-test-suite"]], "Related Projects": [[64, "related-projects"]], "Modeling frameworks": [[64, "modeling-frameworks"]], "Solvers": [[64, "solvers"]], "CVXPY Short Course": [[65, "cvxpy-short-course"]], "Advanced Features": [[66, "advanced-features"]], "Attributes": [[66, "attributes"], [73, "attributes"]], "Semidefinite matrices": [[66, "semidefinite-matrices"]], "Mixed-integer programs": [[66, "mixed-integer-programs"]], "Complex valued expressions": [[66, "complex-valued-expressions"]], "Problem arithmetic": [[66, "problem-arithmetic"]], "Solve method options": [[66, "solve-method-options"]], "Choosing a solver": [[66, "choosing-a-solver"]], "Viewing solver output": [[66, "viewing-solver-output"]], "Solving disciplined geometric programs": [[66, "solving-disciplined-geometric-programs"]], "Solver stats": [[66, "solver-stats"]], "Warm start": [[66, "warm-start"]], "Setting solver options": [[66, "setting-solver-options"]], "Getting the standard form": [[66, "getting-the-standard-form"]], "Disciplined Parametrized Programming": [[66, "disciplined-parametrized-programming"]], "What is DPP?": [[66, "what-is-dpp"]], "The DPP ruleset": [[66, "the-dpp-ruleset"]], "Repeatedly solving a DPP problem": [[66, "repeatedly-solving-a-dpp-problem"]], "Sensitivity analysis and gradients": [[66, "sensitivity-analysis-and-gradients"]], "Custom Solvers": [[66, "custom-solvers"]], "Canonicalization backends": [[66, "canonicalization-backends"]], "Disciplined Convex Programming": [[67, "disciplined-convex-programming"]], "Sign": [[67, "sign"]], "Curvature": [[67, "curvature"], [69, "curvature"]], "Curvature rules": [[67, "curvature-rules"]], "Infix operators": [[67, "infix-operators"], [68, "infix-operators"]], "Example 1": [[67, "example-1"]], "Example 2": [[67, "example-2"]], "DCP problems": [[67, "dcp-problems"]], "Disciplined Geometric Programming": [[68, "disciplined-geometric-programming"]], "Log-log curvature": [[68, "log-log-curvature"]], "Log-log curvature rules": [[68, "log-log-curvature-rules"]], "DGP problems": [[68, "dgp-problems"]], "DGP atoms": [[68, "dgp-atoms"]], "Transpose": [[68, "transpose"], [70, "transpose"]], "Power": [[68, "power"], [70, "power"]], "Scalar functions": [[68, "scalar-functions"], [70, "scalar-functions"]], "Elementwise functions": [[68, "elementwise-functions"], [70, "elementwise-functions"]], "Vector/matrix functions": [[68, "vector-matrix-functions"], [70, "vector-matrix-functions"]], "Disciplined Quasiconvex Programming": [[69, "disciplined-quasiconvex-programming"]], "Composition rules": [[69, "composition-rules"]], "DQCP problems": [[69, "dqcp-problems"]], "DQCP atoms": [[69, "dqcp-atoms"]], "Solving DQCP problems": [[69, "solving-dqcp-problems"]], "Atomic Functions": [[70, "atomic-functions"]], "Operators": [[70, "operators"]], "Indexing and slicing": [[70, "indexing-and-slicing"]], "Clarifications for scalar functions": [[70, "clarifications-for-scalar-functions"]], "Functions along an axis": [[70, "functions-along-an-axis"]], "Clarifications on elementwise functions": [[70, "clarifications-on-elementwise-functions"]], "Clarifications on vector and matrix functions": [[70, "clarifications-on-vector-and-matrix-functions"]], "User Guide": [[71, "user-guide"]], "What is CVXPY?": [[72, "what-is-cvxpy"]], "Changing the problem": [[72, "changing-the-problem"]], "Infeasible and unbounded problems": [[72, "infeasible-and-unbounded-problems"]], "Other problem statuses": [[72, "other-problem-statuses"]], "Vectors and matrices": [[72, "vectors-and-matrices"]], "Parameters": [[72, "parameters"]], "Changes to CVXPY": [[73, "changes-to-cvxpy"]], "CVXPY 1.4": [[73, "cvxpy-1-4"]], "New features": [[73, "new-features"]], "ECOS deprecation": [[73, "ecos-deprecation"]], "conv deprecation": [[73, "conv-deprecation"]], "NonPos deprecation": [[73, "nonpos-deprecation"]], "CVXPY 1.3": [[73, "cvxpy-1-3"]], "Constraints and atoms": [[73, "constraints-and-atoms"], [73, "id2"]], "General system improvements": [[73, "general-system-improvements"], [73, "id4"]], "CVXPY 1.2": [[73, "cvxpy-1-2"]], "CVXPY 1.1": [[73, "cvxpy-1-1"]], "Highlights": [[73, "highlights"]], "New atoms and transforms": [[73, "new-atoms-and-transforms"]], "Breaking changes": [[73, "breaking-changes"]], "Bugfixes": [[73, "bugfixes"]], "Known issues": [[73, "known-issues"]], "Notable patches since CVXPY 1.1.0": [[73, "notable-patches-since-cvxpy-1-1-0"]], "CVXPY 1.0": [[73, "cvxpy-1-0"]], "Overview": [[73, "overview"]], "NumPy Compatibility": [[73, "numpy-compatibility"]]}, "indexentries": {"atom (class in cvxpy.atoms.atom)": [[1, "cvxpy.atoms.atom.Atom"]], "domain (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.domain"]], "grad (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.grad"]], "is_atom_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_affine"]], "is_atom_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_concave"]], "is_atom_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_convex"]], "is_atom_log_log_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_affine"]], "is_atom_log_log_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_concave"]], "is_atom_log_log_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_convex"]], "is_decr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_decr"]], "is_incr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_incr"]], "addexpression (class in cvxpy.atoms.affine.add_expr)": [[2, "cvxpy.atoms.affine.add_expr.AddExpression"]], "divexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.DivExpression"]], "mulexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.MulExpression"]], "negexpression (class in cvxpy.atoms.affine.unary_operators)": [[2, "cvxpy.atoms.affine.unary_operators.NegExpression"]], "axis (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.axis"]], "bmat() (in module cvxpy)": [[2, "cvxpy.bmat"]], "conj (class in cvxpy)": [[2, "cvxpy.conj"]], "convolve (class in cvxpy)": [[2, "cvxpy.convolve"]], "cumsum (class in cvxpy)": [[2, "cvxpy.cumsum"]], "diag() (in module cvxpy)": [[2, "cvxpy.diag"]], "diff() (in module cvxpy)": [[2, "cvxpy.diff"]], "expr (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.expr"]], "hstack() (in module cvxpy)": [[2, "cvxpy.hstack"]], "imag (class in cvxpy)": [[2, "cvxpy.imag"]], "index (class in cvxpy.atoms.affine.index)": [[2, "cvxpy.atoms.affine.index.index"]], "kron (class in cvxpy)": [[2, "cvxpy.kron"]], "matmul() (in module cvxpy)": [[2, "cvxpy.matmul"]], "mean() (in module cvxpy.atoms.stats)": [[2, "cvxpy.atoms.stats.mean"]], "multiply (class in cvxpy)": [[2, "cvxpy.multiply"]], "outer() (in module cvxpy)": [[2, "cvxpy.outer"]], "partial_trace() (in module cvxpy)": [[2, "cvxpy.partial_trace"]], "partial_transpose() (in module cvxpy)": [[2, "cvxpy.partial_transpose"]], "promote() (in module cvxpy.atoms.affine.promote)": [[2, "cvxpy.atoms.affine.promote.promote"]], "psd_wrap (class in cvxpy.atoms.affine.wraps)": [[2, "cvxpy.atoms.affine.wraps.psd_wrap"]], "real() (in module cvxpy)": [[2, "cvxpy.real"]], "reshape (class in cvxpy)": [[2, "cvxpy.reshape"]], "scalar_product() (in module cvxpy)": [[2, "cvxpy.scalar_product"]], "sum() (in module cvxpy)": [[2, "cvxpy.sum"]], "trace (class in cvxpy)": [[2, "cvxpy.trace"]], "transpose (class in cvxpy)": [[2, "cvxpy.transpose"]], "upper_tri (class in cvxpy)": [[2, "cvxpy.upper_tri"]], "vec() (in module cvxpy)": [[2, "cvxpy.vec"]], "vec_to_upper_tri() (in module cvxpy.atoms.affine.upper_tri)": [[2, "cvxpy.atoms.affine.upper_tri.vec_to_upper_tri"]], "vstack() (in module cvxpy)": [[2, "cvxpy.vstack"]], "abs (class in cvxpy)": [[3, "cvxpy.abs"]], "entr (class in cvxpy)": [[3, "cvxpy.entr"]], "exp (class in cvxpy)": [[3, "cvxpy.exp"]], "huber (class in cvxpy)": [[3, "cvxpy.huber"]], "inv_pos() (in module cvxpy)": [[3, "cvxpy.inv_pos"]], "kl_div (class in cvxpy)": [[3, "cvxpy.kl_div"]], "log (class in cvxpy)": [[3, "cvxpy.log"]], "log1p (class in cvxpy)": [[3, "cvxpy.log1p"]], "log_normcdf (class in cvxpy)": [[3, "cvxpy.log_normcdf"]], "loggamma (class in cvxpy)": [[3, "cvxpy.loggamma"]], "logistic (class in cvxpy)": [[3, "cvxpy.logistic"]], "maximum (class in cvxpy)": [[3, "cvxpy.maximum"]], "minimum() (in module cvxpy)": [[3, "cvxpy.minimum"]], "neg() (in module cvxpy)": [[3, "cvxpy.neg"]], "pos() (in module cvxpy)": [[3, "cvxpy.pos"]], "power (class in cvxpy)": [[3, "cvxpy.power"]], "rel_entr (class in cvxpy)": [[3, "cvxpy.rel_entr"]], "scalene() (in module cvxpy)": [[3, "cvxpy.scalene"]], "sqrt() (in module cvxpy)": [[3, "cvxpy.sqrt"]], "square() (in module cvxpy)": [[3, "cvxpy.square"]], "xexp (class in cvxpy)": [[3, "cvxpy.xexp"]], "pnorm (class in cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.Pnorm"]], "suppfuncatom (class in cvxpy.atoms.suppfunc)": [[4, "cvxpy.atoms.suppfunc.SuppFuncAtom"]], "approx_error (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.approx_error"]], "cummax (class in cvxpy.atoms.cummax)": [[4, "cvxpy.atoms.cummax.cummax"]], "diff_pos() (in module cvxpy.atoms.one_minus_pos)": [[4, "cvxpy.atoms.one_minus_pos.diff_pos"]], "dotsort (class in cvxpy.atoms.dotsort)": [[4, "cvxpy.atoms.dotsort.dotsort"]], "eye_minus_inv (class in cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.eye_minus_inv"]], "geo_mean (class in cvxpy.atoms.geo_mean)": [[4, "cvxpy.atoms.geo_mean.geo_mean"]], "gmatmul (class in cvxpy.atoms.gmatmul)": [[4, "cvxpy.atoms.gmatmul.gmatmul"]], "harmonic_mean() (in module cvxpy.atoms.harmonic_mean)": [[4, "cvxpy.atoms.harmonic_mean.harmonic_mean"]], "inv_prod() (in module cvxpy.atoms.inv_prod)": [[4, "cvxpy.atoms.inv_prod.inv_prod"]], "lambda_max (class in cvxpy.atoms.lambda_max)": [[4, "cvxpy.atoms.lambda_max.lambda_max"]], "lambda_min() (in module cvxpy.atoms.lambda_min)": [[4, "cvxpy.atoms.lambda_min.lambda_min"]], "lambda_sum_largest() (in module cvxpy.atoms.lambda_sum_largest)": [[4, "cvxpy.atoms.lambda_sum_largest.lambda_sum_largest"]], "lambda_sum_smallest() (in module cvxpy.atoms.lambda_sum_smallest)": [[4, "cvxpy.atoms.lambda_sum_smallest.lambda_sum_smallest"]], "log_det (class in cvxpy.atoms.log_det)": [[4, "cvxpy.atoms.log_det.log_det"]], "log_sum_exp (class in cvxpy.atoms.log_sum_exp)": [[4, "cvxpy.atoms.log_sum_exp.log_sum_exp"]], "matrix_frac() (in module cvxpy.atoms.matrix_frac)": [[4, "cvxpy.atoms.matrix_frac.matrix_frac"]], "max (class in cvxpy.atoms.max)": [[4, "cvxpy.atoms.max.max"]], "min() (in module cvxpy.atoms.min)": [[4, "cvxpy.atoms.min.min"]], "mixed_norm() (in module cvxpy.atoms.mixed_norm)": [[4, "cvxpy.atoms.mixed_norm.mixed_norm"]], "norm() (in module cvxpy.atoms.norm)": [[4, "cvxpy.atoms.norm.norm"]], "norm1 (class in cvxpy.atoms.norm1)": [[4, "cvxpy.atoms.norm1.norm1"]], "norm2() (in module cvxpy.atoms.norm)": [[4, "cvxpy.atoms.norm.norm2"]], "normnuc (class in cvxpy.atoms.norm_nuc)": [[4, "cvxpy.atoms.norm_nuc.normNuc"]], "norm_inf (class in cvxpy.atoms)": [[4, "cvxpy.atoms.norm_inf"]], "one_minus_pos (class in cvxpy.atoms)": [[4, "cvxpy.atoms.one_minus_pos"]], "perspective (class in cvxpy.atoms.perspective)": [[4, "cvxpy.atoms.perspective.perspective"]], "pf_eigenvalue (class in cvxpy.atoms.pf_eigenvalue)": [[4, "cvxpy.atoms.pf_eigenvalue.pf_eigenvalue"]], "pnorm() (in module cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.pnorm"]], "prod() (in module cvxpy.atoms.prod)": [[4, "cvxpy.atoms.prod.prod"]], "ptp() (in module cvxpy.atoms.ptp)": [[4, "cvxpy.atoms.ptp.ptp"]], "quad_form() (in module cvxpy.atoms.quad_form)": [[4, "cvxpy.atoms.quad_form.quad_form"]], "quad_over_lin (class in cvxpy.atoms.quad_over_lin)": [[4, "cvxpy.atoms.quad_over_lin.quad_over_lin"]], "resolvent() (in module cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.resolvent"]], "sigma_max (class in cvxpy.atoms.sigma_max)": [[4, "cvxpy.atoms.sigma_max.sigma_max"]], "std() (in module cvxpy.atoms.stats)": [[4, "cvxpy.atoms.stats.std"]], "sum_largest (class in cvxpy.atoms.sum_largest)": [[4, "cvxpy.atoms.sum_largest.sum_largest"]], "sum_smallest() (in module cvxpy.atoms.sum_smallest)": [[4, "cvxpy.atoms.sum_smallest.sum_smallest"]], "sum_squares() (in module cvxpy.atoms.sum_squares)": [[4, "cvxpy.atoms.sum_squares.sum_squares"]], "tr_inv() (in module cvxpy.atoms.tr_inv)": [[4, "cvxpy.atoms.tr_inv.tr_inv"]], "tv() (in module cvxpy.atoms.total_variation)": [[4, "cvxpy.atoms.total_variation.tv"]], "var() (in module cvxpy.atoms.stats)": [[4, "cvxpy.atoms.stats.var"]], "von_neumann_entr (class in cvxpy)": [[4, "cvxpy.von_neumann_entr"]], "w (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.w"]], "constraint (class in cvxpy.constraints.constraint)": [[5, "cvxpy.constraints.constraint.Constraint"]], "expcone (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.ExpCone"]], "finiteset (class in cvxpy.constraints.finite_set)": [[5, "cvxpy.constraints.finite_set.FiniteSet"]], "nonpos (class in cvxpy.constraints.nonpos)": [[5, "cvxpy.constraints.nonpos.NonPos"]], "oprelentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad"]], "psd (class in cvxpy.constraints.psd)": [[5, "cvxpy.constraints.psd.PSD"]], "powcone3d (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowCone3D"]], "powconend (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowConeND"]], "relentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad"]], "soc (class in cvxpy.constraints.second_order)": [[5, "cvxpy.constraints.second_order.SOC"]], "x (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.X"]], "zero (class in cvxpy.constraints.zero)": [[5, "cvxpy.constraints.zero.Zero"]], "axis (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.axis"]], "dual_value (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.dual_value"]], "ineq_form (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.ineq_form"]], "is_dcp() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.is_dcp"]], "is_dcp() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.is_dcp"]], "is_dcp() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.is_dcp"]], "is_dcp() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.is_dcp"]], "is_dcp() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.is_dcp"]], "shape (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.shape"]], "shape (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.shape"]], "size (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.size"]], "size (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.size"]], "t (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.t"]], "value() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.value"]], "value() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.value"]], "value() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.value"]], "value() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.value"]], "value() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.value"]], "value() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.value"]], "value() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.value"]], "value() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.value"]], "value() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.value"]], "value() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.value"]], "violation() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.violation"]], "violation() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.violation"]], "violation() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.violation"]], "violation() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.violation"]], "violation() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.violation"]], "violation() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.violation"]], "violation() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.violation"]], "violation() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.violation"]], "violation() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.violation"]], "callbackparam (class in cvxpy.expressions.constants.callback_param)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam"]], "constant (class in cvxpy.expressions.constants)": [[6, "cvxpy.expressions.constants.Constant"]], "expression (class in cvxpy.expressions.expression)": [[6, "cvxpy.expressions.expression.Expression"]], "leaf (class in cvxpy.expressions.leaf)": [[6, "cvxpy.expressions.leaf.Leaf"]], "parameter (class in cvxpy.expressions.constants.parameter)": [[6, "cvxpy.expressions.constants.parameter.Parameter"]], "t (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.T"]], "t (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.T"]], "t (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.T"]], "t (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.T"]], "t (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.T"]], "t (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.T"]], "variable (class in cvxpy.expressions.variable)": [[6, "cvxpy.expressions.variable.Variable"]], "__add__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__add__"]], "__div__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__div__"]], "__eq__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__eq__"]], "__ge__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__ge__"]], "__le__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__le__"]], "__lshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__lshift__"]], "__matmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__matmul__"]], "__mul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__mul__"]], "__pow__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__pow__"]], "__radd__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__radd__"]], "__rdiv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rdiv__"]], "__rlshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rlshift__"]], "__rmatmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmatmul__"]], "__rmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmul__"]], "__rrshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rrshift__"]], "__rshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rshift__"]], "__rsub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rsub__"]], "__rtruediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rtruediv__"]], "__sub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__sub__"]], "__truediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__truediv__"]], "curvature (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.curvature"]], "domain (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.domain"]], "grad (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.grad"]], "is_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_affine"]], "is_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_concave"]], "is_constant() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_constant"]], "is_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_convex"]], "is_dcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dcp"]], "is_dgp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dgp"]], "is_dpp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dpp"]], "is_dqcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dqcp"]], "is_log_log_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_affine"]], "is_log_log_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_concave"]], "is_log_log_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_convex"]], "is_nonneg() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonneg"]], "is_nonpos() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonpos"]], "is_zero() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_zero"]], "name() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.name"]], "name() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.name"]], "ndim (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.ndim"]], "ndim (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.ndim"]], "ndim (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.ndim"]], "ndim (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.ndim"]], "ndim (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.ndim"]], "ndim (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.ndim"]], "project() (cvxpy.expressions.constants.callback_param.callbackparam method)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.project"]], "project() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project"]], "project() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project"]], "project() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project"]], "project_and_assign() (cvxpy.expressions.constants.callback_param.callbackparam method)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.project_and_assign"]], "project_and_assign() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project_and_assign"]], "project_and_assign() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project_and_assign"]], "project_and_assign() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project_and_assign"]], "shape (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.shape"]], "shape (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.shape"]], "shape (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.shape"]], "shape (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.shape"]], "shape (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.shape"]], "shape (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.shape"]], "sign (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.sign"]], "size (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.size"]], "size (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.size"]], "size (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.size"]], "size (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.size"]], "size (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.size"]], "size (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.size"]], "value (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.value"]], "value (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.value"]], "value (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.value"]], "value (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.value"]], "value (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.value"]], "value (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.value"]], "maximize (class in cvxpy)": [[7, "cvxpy.Maximize"]], "minimize (class in cvxpy)": [[7, "cvxpy.Minimize"]], "problem (class in cvxpy)": [[7, "cvxpy.Problem"]], "sizemetrics (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SizeMetrics"]], "solverstats (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SolverStats"]], "atoms() (cvxpy.problem method)": [[7, "cvxpy.Problem.atoms"]], "backward() (cvxpy.problem method)": [[7, "cvxpy.Problem.backward"]], "compilation_time (cvxpy.problem property)": [[7, "cvxpy.Problem.compilation_time"]], "constants() (cvxpy.problem method)": [[7, "cvxpy.Problem.constants"]], "constraints (cvxpy.problem property)": [[7, "cvxpy.Problem.constraints"]], "derivative() (cvxpy.problem method)": [[7, "cvxpy.Problem.derivative"]], "extra_stats (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.extra_stats"], [7, "id0"]], "from_dict() (cvxpy.problems.problem.solverstats class method)": [[7, "cvxpy.problems.problem.SolverStats.from_dict"]], "get_problem_data() (cvxpy.problem method)": [[7, "cvxpy.Problem.get_problem_data"]], "is_dcp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dcp"]], "is_dcp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dcp"]], "is_dcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dcp"]], "is_dgp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dgp"]], "is_dgp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dgp"]], "is_dgp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dgp"]], "is_dpp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dpp"]], "is_dqcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dqcp"]], "is_qp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_qp"]], "max_big_small_squared (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_big_small_squared"]], "max_data_dimension (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_data_dimension"]], "num_iters (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.num_iters"], [7, "id1"]], "num_scalar_data (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_data"]], "num_scalar_eq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_eq_constr"]], "num_scalar_leq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_leq_constr"]], "num_scalar_variables (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_variables"]], "objective (cvxpy.problem property)": [[7, "cvxpy.Problem.objective"]], "parameters() (cvxpy.problem method)": [[7, "cvxpy.Problem.parameters"]], "register_solve() (cvxpy.problem class method)": [[7, "cvxpy.Problem.register_solve"]], "setup_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.setup_time"], [7, "id2"]], "size_metrics (cvxpy.problem property)": [[7, "cvxpy.Problem.size_metrics"]], "solve() (cvxpy.problem method)": [[7, "cvxpy.Problem.solve"]], "solve_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solve_time"], [7, "id3"]], "solver_name (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solver_name"], [7, "id4"]], "solver_stats (cvxpy.problem property)": [[7, "cvxpy.Problem.solver_stats"]], "status (cvxpy.problem property)": [[7, "cvxpy.Problem.status"]], "unpack_results() (cvxpy.problem method)": [[7, "cvxpy.Problem.unpack_results"]], "value (cvxpy.problem property)": [[7, "cvxpy.Problem.value"]], "variables() (cvxpy.problem method)": [[7, "cvxpy.Problem.variables"]], "chain (class in cvxpy.reductions.chain)": [[8, "cvxpy.reductions.chain.Chain"]], "reduction (class in cvxpy.reductions.reduction)": [[8, "cvxpy.reductions.reduction.Reduction"]], "solution (class in cvxpy.reductions.solution)": [[8, "cvxpy.reductions.solution.Solution"]], "solvingchain (class in cvxpy.reductions.solvers.solving_chain)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain"]], "__init__() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.__init__"]], "accepts() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.accepts"]], "accepts() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.accepts"]], "apply() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.apply"]], "apply() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.apply"]], "attr (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.attr"]], "dual_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.dual_vars"]], "invert() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.invert"]], "invert() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.invert"]], "opt_val (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.opt_val"]], "prepend() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.prepend"]], "primal_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.primal_vars"]], "reduce() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.reduce"]], "reductions (cvxpy.reductions.chain.chain attribute)": [[8, "cvxpy.reductions.chain.Chain.reductions"]], "reductions (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.reductions"]], "retrieve() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.retrieve"]], "solve() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve"]], "solve_via_data() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve_via_data"]], "solver (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solver"]], "status (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.status"]], "dcp2cone (class in cvxpy.reductions.dcp2cone.dcp2cone)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"]], "dualize (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize"]], "qp2symbolicqp (class in cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"]], "slacks (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks"]], "accepts() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"]], "accepts() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"]], "apply() (cvxpy.reductions.cone2cone.affine2direct.slacks static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks.apply"]], "apply() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"]], "apply() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"]], "canonicalize_expr() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"]], "canonicalize_tree() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"]], "invert() (cvxpy.reductions.cone2cone.affine2direct.dualize static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize.invert"]], "constraints (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.CONSTRAINTS"]], "conedims (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims"]], "conematrixstuffing (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing"]], "eq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EQ_DIM"]], "exp_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EXP_DIM"]], "leq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.LEQ_DIM"]], "p3d_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.P3D_DIM"]], "psd_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.PSD_DIM"]], "paramconeprog (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg"]], "soc_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.SOC_DIM"]], "accepts() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.accepts"]], "apply() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_parameters"]], "cvxpy.reductions.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "exp (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.is_mixed_integer"]], "module": [[10, "module-cvxpy.reductions.dcp2cone"], [10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"], [10, "module-cvxpy.reductions.dcp2cone.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"], [12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"], [12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "nonneg (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.nonneg"]], "psd (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_adjoint"]], "split_solution() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.zero"]], "complex2real (class in cvxpy.reductions.complex2real.complex2real)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real"]], "cvxattr2constr (class in cvxpy.reductions.cvx_attr2constr)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr"]], "dgp2dcp (class in cvxpy.reductions.dgp2dcp.dgp2dcp)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp"]], "evalparams (class in cvxpy.reductions.eval_params)": [[11, "cvxpy.reductions.eval_params.EvalParams"]], "flipobjective (class in cvxpy.reductions.flip_objective)": [[11, "cvxpy.reductions.flip_objective.FlipObjective"]], "accepts() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.accepts"]], "accepts() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.accepts"]], "accepts() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.accepts"]], "accepts() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.accepts"]], "accepts() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.accepts"]], "apply() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.apply"]], "apply() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.apply"]], "apply() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.apply"]], "apply() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.apply"]], "apply() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.apply"]], "canonicalize_expr() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.canonicalize_expr"]], "invert() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.invert"]], "invert() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.invert"]], "invert() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.invert"]], "invert() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.invert"]], "invert() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.invert"]], "conedims (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims"]], "paramquadprog (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg"]], "qpmatrixstuffing (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing"]], "accepts() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing static method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.accepts"]], "accepts() (in module cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.accepts"]], "apply() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_parameters"]], "cvxpy.reductions.qp2quad_form": [[12, "module-cvxpy.reductions.qp2quad_form"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "exp (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.is_mixed_integer"]], "nonpos (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.nonpos"]], "psd (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_adjoint"]], "split_solution() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.zero"]], "suppfunc (class in cvxpy.transforms.suppfunc)": [[13, "cvxpy.transforms.suppfunc.SuppFunc"]], "__call__() (cvxpy.transforms.suppfunc.suppfunc method)": [[13, "cvxpy.transforms.suppfunc.SuppFunc.__call__"]], "indicator (class in cvxpy.transforms)": [[13, "cvxpy.transforms.indicator"]], "linearize() (cvxpy.transforms method)": [[13, "cvxpy.transforms.linearize"]], "log_sum_exp() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.log_sum_exp"]], "max() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.max"]], "partial_optimize() (cvxpy.transforms.partial_optimize method)": [[13, "cvxpy.transforms.partial_optimize.partial_optimize"]], "targets_and_priorities() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.targets_and_priorities"]], "weighted_sum() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.weighted_sum"]], "leaf()": [[66, "Leaf"]], "built-in function": [[66, "Leaf"], [66, "solve"]], "solve()": [[66, "solve"]]}})