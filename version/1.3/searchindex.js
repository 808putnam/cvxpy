Search.setIndex({"docnames": ["api_reference/cvxpy", "api_reference/cvxpy.atoms", "api_reference/cvxpy.atoms.affine", "api_reference/cvxpy.atoms.elementwise", "api_reference/cvxpy.atoms.other_atoms", "api_reference/cvxpy.constraints", "api_reference/cvxpy.expressions", "api_reference/cvxpy.problems", "api_reference/cvxpy.reductions", "api_reference/cvxpy.reductions.back_end", "api_reference/cvxpy.reductions.dcp2cone", "api_reference/cvxpy.reductions.middle_end", "api_reference/cvxpy.reductions.qp2quad_form", "api_reference/cvxpy.transforms", "citing/index", "community/index", "contributing/index", "dev_notes", "examples/applications/Channel_capacity_BV4.57", "examples/applications/MM", "examples/applications/OOCO", "examples/applications/ant_array_min_beamwidth", "examples/applications/censored_data", "examples/applications/clock_mesh", "examples/applications/consensus_opt", "examples/applications/fault_detection", "examples/applications/fir_chebychev_design", "examples/applications/interdiction", "examples/applications/l1_trend_filter", "examples/applications/max_entropy", "examples/applications/maximise_minimum_SINR_BV4.20", "examples/applications/nba_ranking", "examples/applications/nonneg_matrix_fact", "examples/applications/optimal_power_gaussian_channel_BV4.62", "examples/applications/parade_route", "examples/applications/robust_kalman", "examples/applications/sparse_covariance_est", "examples/applications/sparse_solution", "examples/applications/tv_inpainting", "examples/applications/water_filling_BVex5.2", "examples/basic/least_squares", "examples/basic/linear_program", "examples/basic/mixed_integer_quadratic_program", "examples/basic/quadratic_program", "examples/basic/sdp", "examples/basic/socp", "examples/derivatives/fundamentals", "examples/derivatives/queuing_design", "examples/derivatives/structured_prediction", "examples/dgp/dgp_fundamentals", "examples/dgp/max_volume_box", "examples/dgp/pf_matrix_completion", "examples/dgp/power_control", "examples/dgp/rank_one_nmf", "examples/dqcp/concave_fractional_function", "examples/dqcp/hypersonic_shape_design", "examples/dqcp/minimum_length_least_squares", "examples/index", "examples/machine_learning/lasso_regression", "examples/machine_learning/logistic_regression", "examples/machine_learning/ridge_regression", "examples/machine_learning/svm", "faq/index", "index", "install/index", "license/index", "related_projects/index", "short_course/index", "tutorial/advanced/index", "tutorial/dcp/index", "tutorial/dgp/index", "tutorial/dqcp/index", "tutorial/functions/index", "tutorial/index", "tutorial/intro/index", "updates/index"], "filenames": ["api_reference/cvxpy.rst", "api_reference/cvxpy.atoms.rst", "api_reference/cvxpy.atoms.affine.rst", "api_reference/cvxpy.atoms.elementwise.rst", "api_reference/cvxpy.atoms.other_atoms.rst", "api_reference/cvxpy.constraints.rst", "api_reference/cvxpy.expressions.rst", "api_reference/cvxpy.problems.rst", "api_reference/cvxpy.reductions.rst", "api_reference/cvxpy.reductions.back_end.rst", "api_reference/cvxpy.reductions.dcp2cone.rst", "api_reference/cvxpy.reductions.middle_end.rst", "api_reference/cvxpy.reductions.qp2quad_form.rst", "api_reference/cvxpy.transforms.rst", "citing/index.rst", "community/index.rst", "contributing/index.rst", "dev_notes.rst", "examples/applications/Channel_capacity_BV4.57.rst", "examples/applications/MM.rst", "examples/applications/OOCO.rst", "examples/applications/ant_array_min_beamwidth.rst", "examples/applications/censored_data.rst", "examples/applications/clock_mesh.rst", "examples/applications/consensus_opt.rst", "examples/applications/fault_detection.rst", "examples/applications/fir_chebychev_design.rst", "examples/applications/interdiction.rst", "examples/applications/l1_trend_filter.rst", "examples/applications/max_entropy.rst", "examples/applications/maximise_minimum_SINR_BV4.20.rst", "examples/applications/nba_ranking.rst", "examples/applications/nonneg_matrix_fact.rst", "examples/applications/optimal_power_gaussian_channel_BV4.62.rst", "examples/applications/parade_route.rst", "examples/applications/robust_kalman.rst", "examples/applications/sparse_covariance_est.rst", "examples/applications/sparse_solution.rst", "examples/applications/tv_inpainting.rst", "examples/applications/water_filling_BVex5.2.rst", "examples/basic/least_squares.rst", "examples/basic/linear_program.rst", "examples/basic/mixed_integer_quadratic_program.rst", "examples/basic/quadratic_program.rst", "examples/basic/sdp.rst", "examples/basic/socp.rst", "examples/derivatives/fundamentals.rst", "examples/derivatives/queuing_design.rst", "examples/derivatives/structured_prediction.rst", "examples/dgp/dgp_fundamentals.rst", "examples/dgp/max_volume_box.rst", "examples/dgp/pf_matrix_completion.rst", "examples/dgp/power_control.rst", "examples/dgp/rank_one_nmf.rst", "examples/dqcp/concave_fractional_function.rst", "examples/dqcp/hypersonic_shape_design.rst", "examples/dqcp/minimum_length_least_squares.rst", "examples/index.rst", "examples/machine_learning/lasso_regression.rst", "examples/machine_learning/logistic_regression.rst", "examples/machine_learning/ridge_regression.rst", "examples/machine_learning/svm.rst", "faq/index.rst", "index.rst", "install/index.rst", "license/index.rst", "related_projects/index.rst", "short_course/index.rst", "tutorial/advanced/index.rst", "tutorial/dcp/index.rst", "tutorial/dgp/index.rst", "tutorial/dqcp/index.rst", "tutorial/functions/index.rst", "tutorial/index.rst", "tutorial/intro/index.rst", "updates/index.rst"], "titles": ["API Documentation", "Atoms", "Affine Atoms", "cvxpy.atoms.elementwise package", "Other Atoms", "Constraints", "Expressions", "Problems", "Reductions", "Back-End Reductions", "cvxpy.reductions.dcp2cone package", "Middle-End Reductions", "cvxpy.reductions.qp2quad_form package", "Transforms", "Citing CVXPY", "How to Help", "Contributing", "Developer Notes", "Capacity of a Communication Channel", "Method of multipliers", "Object Oriented Convex Optimization", "Minimize beamwidth of an array with arbitrary 2-D geometry", "Fitting censored data", "Sizing of clock meshes", "Consensus optimization", "Fault detection", "Chebychev design of an FIR filter given a desired <span class=\"math notranslate nohighlight\">\\(H(\\omega)\\)</span>", "TODO", "<span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> trend filtering", "Entropy maximization", "Power Assignment in a Wireless Communication System", "TODO", "Nonnegative matrix factorization", "Optimal Power and Bandwidth Allocation in a Gaussian Channel", "Optimal parade route", "Robust Kalman filtering for vehicle tracking", "Sparse covariance estimation for Gaussian variables", "Computing a sparse solution of a set of linear inequalities", "Total variation in-painting", "Water Filling in Communications", "Least-squares", "Linear program", "Mixed-integer quadratic program", "Quadratic program", "Semidefinite program", "Second-order cone program", "Derivatives fundamentals", "Queuing design", "Structured prediction", "DGP fundamentals", "Maximizing the volume of a box", "Perron-Frobenius matrix completion", "Power control", "Rank-one nonnegative matrix factorization", "Fractional optimization", "Aerospace Design via Quasiconvex Optimization", "Minimum-length least squares", "Examples", "Machine Learning: Lasso Regression", "Logistic regression with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> regularization", "Machine Learning: Ridge Regression", "Support vector machine classifier with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span>-regularization", "FAQ", "Welcome to CVXPY 1.3", "Install", "License", "Related Projects", "CVXPY Short Course", "Advanced Features", "Disciplined Convex Programming", "Disciplined Geometric Programming", "Disciplined Quasiconvex Programming", "Atomic Functions", "User Guide", "What is CVXPY?", "Changes to CVXPY"], "terms": {"cvxpy": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 68, 69, 70, 71, 72, 73], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75], "design": [0, 16, 21, 57, 65], "intuit": [0, 34], "enough": [0, 7, 16, 68], "so": [0, 1, 4, 6, 7, 9, 16, 18, 21, 23, 25, 26, 27, 30, 31, 33, 34, 36, 37, 38, 46, 51, 53, 55, 58, 60, 68, 69, 70, 75], "mai": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 26, 27, 30, 31, 64, 65, 68, 69, 70, 71, 74, 75], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75], "without": [0, 3, 4, 7, 8, 10, 12, 13, 16, 27, 35, 41, 48, 65, 68, 74, 75], "consult": [0, 7, 49, 62, 68, 75], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 25, 27, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75], "refer": [0, 3, 7, 9, 16, 21, 23, 26, 28, 36, 37, 46, 55, 62, 68, 70, 71, 72, 75], "tutori": [0, 7, 46, 49, 50, 52, 57, 62, 63, 68, 69, 70, 72, 74, 75], "suffic": [0, 64], "acquaint": 0, "you": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 38, 42, 46, 49, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75], "our": [0, 9, 10, 11, 12, 15, 16, 22, 30, 31, 34, 35, 38, 41, 47, 48, 49, 53, 54, 55, 59, 60, 61, 63, 68, 70, 71, 75], "softwar": [0, 8, 10, 12, 13, 16, 62, 63, 65, 66, 68], "nonetheless": [0, 5], "we": [0, 2, 3, 4, 5, 8, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75], "includ": [0, 4, 9, 10, 16, 26, 27, 31, 39, 49, 51, 53, 63, 64, 65, 68, 75], "here": [0, 2, 3, 4, 7, 8, 9, 11, 13, 16, 22, 27, 30, 34, 35, 36, 41, 43, 44, 46, 47, 48, 55, 63, 66, 68, 69, 70, 71, 74, 75], "those": [0, 2, 4, 7, 8, 16, 38, 60, 64, 65, 68, 74, 75], "who": [0, 8, 16, 20, 21, 63], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75], "comfort": 0, "read": [0, 16, 63, 68, 72, 74], "technic": [0, 75], "all": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 18, 20, 22, 23, 24, 26, 27, 30, 31, 35, 39, 45, 48, 49, 58, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 20, 27, 31, 59, 62, 65, 68, 75], "function": [0, 1, 2, 3, 4, 5, 7, 9, 13, 16, 18, 19, 21, 22, 24, 25, 26, 30, 33, 34, 36, 37, 39, 44, 46, 47, 48, 51, 53, 54, 55, 57, 59, 61, 68, 69, 71, 73, 74, 75], "import": [0, 1, 3, 4, 7, 11, 13, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75], "namespac": [0, 63, 75], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75], "mean": [0, 3, 4, 7, 8, 13, 16, 18, 25, 27, 33, 36, 48, 56, 57, 58, 60, 62, 65, 68, 69, 70, 71, 72, 74], "thei": [0, 1, 5, 8, 9, 11, 16, 24, 27, 31, 34, 47, 49, 54, 62, 68, 69, 70, 71, 74, 75], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 48, 49, 53, 54, 55, 56, 58, 60, 63, 64, 68, 69, 70, 71, 72, 74, 75], "simpli": [0, 5, 22, 39, 60, 64, 68], "write": [0, 5, 8, 10, 12, 13, 20, 21, 27, 39, 55, 62, 65, 68, 72, 74, 75], "symbol": [0, 9, 11, 12, 68, 74, 75], "where": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 65, 68, 70, 71, 74, 75], "name": [0, 3, 4, 6, 7, 16, 21, 22, 26, 28, 29, 31, 32, 36, 37, 47, 49, 50, 64, 65, 68, 75], "your": [0, 7, 9, 10, 11, 12, 16, 62, 63, 64, 65, 68, 70, 71, 74, 75], "choic": [0, 7, 9, 27, 31, 34, 58, 59, 61, 74], "long": [0, 7, 31, 68, 75], "packag": [0, 16, 22, 27, 40, 41, 43, 44, 45, 64, 66, 68], "python": [0, 6, 7, 16, 27, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 23, 42, 62, 63, 65, 66, 68, 75], "file": [0, 10, 12, 13, 16, 31, 65, 68, 70, 71, 75], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75], "group": [0, 8, 30], "five": 0, "section": [0, 16, 23, 27, 36, 37, 57, 62, 65, 68, 69, 70, 71, 72, 74], "atom": [0, 6, 7, 9, 10, 13, 16, 29, 51, 53, 54, 68, 73], "constraint": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 63, 64, 68, 69, 70, 71, 73], "express": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 16, 38, 49, 55, 63, 65, 70, 71, 72, 73, 74, 75], "problem": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 22, 24, 27, 30, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 73, 75], "reduct": [0, 7, 16, 73], "implement": [0, 1, 3, 4, 5, 9, 13, 16, 19, 21, 31, 35, 51, 64, 66, 68, 75], "mathemat": [0, 1, 4, 5, 6, 69], "like": [0, 2, 5, 7, 13, 16, 22, 27, 49, 53, 58, 62, 68, 69, 74, 75], "exp": [0, 1, 7, 9, 10, 12, 13, 16, 21, 26, 27, 48, 49, 54, 59, 68, 70, 71, 72], "log": [0, 1, 4, 5, 6, 7, 8, 13, 14, 18, 25, 27, 28, 29, 33, 34, 36, 39, 47, 48, 51, 57, 58, 59, 60, 61, 68, 72, 73, 74, 75], "sqrt": [0, 1, 22, 25, 26, 54, 55, 69, 70, 71, 72], "impos": [0, 5, 7, 9, 27, 58], "upon": [0, 5], "variabl": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75], "tree": [0, 1, 5, 6, 9, 10, 23, 62, 69], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 19, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 39, 46, 47, 48, 49, 58, 59, 60, 61, 62, 68, 69, 70, 73, 75], "other": [0, 1, 5, 6, 7, 8, 16, 27, 38, 60, 63, 64, 65, 68, 71, 73, 75], "relat": [0, 5, 7, 18, 21, 35, 58, 68], "principl": [0, 27, 39], "oper": [0, 1, 2, 3, 5, 6, 8, 13, 21, 24, 27, 35, 36, 44, 46, 47, 48, 49, 68, 71, 73, 75], "convert": [0, 8, 9, 10, 11, 12, 13, 16, 22, 24, 32, 66, 68, 75], "from": [0, 1, 2, 3, 4, 7, 8, 9, 10, 12, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 47, 48, 50, 52, 53, 58, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75], "particular": [0, 8, 11, 16, 22, 23, 24, 48, 49, 56, 65, 68, 75], "form": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 18, 19, 21, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 48, 49, 61, 63, 65, 69, 70, 71, 72, 73, 74, 75], "anoth": [0, 2, 5, 6, 8, 9, 16, 33, 64, 68], "equival": [0, 2, 3, 4, 5, 7, 8, 9, 11, 53, 68, 70, 72, 74, 75], "transform": [0, 4, 8, 16, 49, 65, 70, 73, 74], "addit": [0, 4, 7, 13, 16, 22, 27, 34, 41, 43, 45, 60, 63, 64, 65, 68, 70, 71, 75], "avail": [0, 7, 8, 13, 21, 36, 41, 62, 64, 65, 68, 75], "manipul": [0, 13, 31, 66, 68, 75], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 52, 53, 54, 55, 57, 63, 65, 66, 68, 69, 70, 71, 74, 75], "lower": [1, 13, 22, 23, 26, 27, 30, 37, 39, 55, 60, 68, 71, 74], "case": [1, 3, 4, 5, 16, 18, 22, 23, 27, 30, 33, 35, 38, 46, 55, 57, 62, 68, 72, 74, 75], "appli": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 16, 19, 20, 22, 35, 37, 49, 65, 69, 70, 71, 72], "return": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 23, 25, 27, 30, 31, 33, 34, 39, 43, 46, 48, 58, 59, 60, 62, 63, 68, 70, 71, 72, 74, 75], "composit": [1, 3, 4, 46, 47, 49, 69, 70, 73], "thereof": [1, 2, 5, 65], "precis": [1, 18, 30, 33, 39, 68, 70, 71, 74], "mechan": [1, 4, 65, 75], "allow": [1, 5, 6, 8, 9, 13, 16, 21, 27, 49, 50, 64, 68, 75], "build": [1, 8, 16, 21, 23, 34, 41, 63, 64, 75], "up": [1, 3, 4, 5, 7, 8, 9, 10, 16, 27, 30, 60, 68], "everi": [1, 7, 8, 10, 11, 16, 27, 34, 49, 62, 70, 71, 72, 74], "tag": [1, 49], "inform": [1, 7, 8, 13, 14, 16, 18, 20, 22, 39, 49, 60, 64, 65, 68, 70, 72, 75], "about": [1, 5, 7, 8, 9, 10, 11, 12, 15, 16, 22, 31, 63, 68], "its": [1, 2, 3, 4, 5, 6, 7, 9, 16, 19, 34, 37, 46, 49, 53, 54, 55, 58, 64, 65, 68, 69, 70, 71], "domain": [1, 3, 4, 5, 6, 30, 47, 49, 68, 70, 71, 72], "sign": [1, 3, 6, 61, 68, 71, 72, 73, 74, 75], "curvatur": [1, 3, 6, 55, 72, 73], "monoton": [1, 3, 13, 48, 61, 69, 70, 72], "let": [1, 2, 7, 16, 21, 22, 27, 30, 34, 35, 40, 46, 49, 51, 63, 68, 70, 71, 75], "instanc": [1, 6, 7, 8, 12, 16, 31, 34, 68, 69, 74], "reason": [1, 13, 16, 25, 59, 61, 65, 68, 75], "whether": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 30, 31, 39, 49, 62, 65, 68, 69, 70, 71, 74, 75], "dcp": [1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 18, 33, 39, 49, 68, 70, 71, 72, 73, 74], "dgp": [1, 3, 7, 11, 46, 51, 53, 57, 68, 73, 75], "see": [1, 3, 4, 6, 7, 9, 10, 11, 12, 13, 16, 20, 21, 22, 25, 27, 31, 38, 46, 58, 62, 63, 64, 65, 68, 70, 71, 72, 74, 75], "page": [1, 5, 13, 14, 16, 18, 30, 33, 39, 64, 65, 67, 68, 70, 75], "compact": 1, "access": [1, 7, 8, 9, 16, 49, 68], "summari": [1, 10, 12], "each": [1, 2, 3, 5, 6, 7, 8, 9, 13, 16, 19, 20, 21, 23, 24, 25, 27, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 49, 52, 59, 61, 62, 65, 68, 69, 70, 71, 72, 74], "": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 20, 21, 22, 23, 25, 26, 28, 30, 31, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 48, 49, 52, 55, 63, 64, 65, 68, 70, 71, 72, 74, 75], "attribut": [1, 4, 6, 7, 11, 13, 46, 49, 62, 65, 70, 71, 73, 74], "affin": [1, 3, 4, 5, 6, 9, 10, 12, 13, 16, 37, 41, 43, 47, 49, 68, 69, 70, 71, 72, 75], "addexpress": 1, "mulexpress": 1, "divexpress": 1, "bmat": [1, 70, 72], "conj": [1, 68, 72], "conv": [1, 72], "cumsum": [1, 72], "expr": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 68, 69, 70, 72, 74], "axi": [1, 2, 4, 5, 18, 21, 27, 30, 31, 35, 38, 39, 48, 55, 70, 73], "diag": [1, 6, 16, 23, 52, 68, 70, 72], "diff": [1, 72], "hstack": [1, 20, 21, 31, 34, 48, 52, 69, 70, 72, 75], "imag": [1, 6, 21, 26, 68, 72], "index": [1, 6, 7, 31, 35, 39, 49, 68, 71, 75], "kron": [1, 21, 26, 72, 75], "matmul": [1, 70], "multipli": [1, 4, 10, 12, 24, 26, 27, 33, 38, 48, 52, 53, 57, 59, 61, 63, 68, 70, 71, 72, 75], "partial_trac": [1, 72], "partial_transpos": [1, 72], "promot": [1, 5, 34, 70, 72], "psd_wrap": 1, "real": [1, 5, 11, 13, 21, 26, 48, 49, 60, 63, 68, 70, 72, 74, 75], "reshap": [1, 10, 12, 21, 22, 23, 26, 30, 55, 70, 72, 75], "scalar_product": 1, "sum": [1, 3, 4, 5, 6, 7, 13, 18, 20, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 47, 48, 49, 51, 52, 53, 58, 59, 60, 61, 68, 69, 70, 72, 75], "trace": [1, 4, 36, 44, 51, 53, 70, 72, 75], "transpos": [1, 6, 46, 68, 75], "negexpress": 1, "upper_tri": [1, 72], "vec": [1, 4, 5, 13, 70, 72], "vstack": [1, 21, 28, 46, 53, 55, 70, 72, 75], "elementwis": [1, 2, 4, 5, 13, 33, 37, 41, 43, 47, 48, 49, 51, 53, 73, 74], "ab": [1, 5, 20, 21, 26, 27, 34, 36, 37, 38, 48, 59, 68, 72], "entr": [1, 18, 29, 70, 72], "huber": [1, 35, 57, 72], "inv_po": [1, 55, 72], "kl_div": [1, 33, 72], "log_normcdf": [1, 72, 75], "log1p": [1, 72], "loggamma": [1, 72, 75], "logist": [1, 57, 72], "maximum": [1, 4, 7, 13, 18, 21, 22, 25, 26, 27, 30, 39, 41, 47, 50, 52, 53, 68, 69, 70, 71, 72, 75], "minimum": [1, 4, 21, 27, 30, 34, 52, 57, 68, 69, 70, 71, 72, 74, 75], "neg": [1, 5, 6, 10, 25, 32, 68, 69, 72, 74, 75], "po": [1, 6, 11, 27, 31, 36, 46, 47, 48, 49, 50, 51, 52, 53, 55, 61, 68, 70, 71, 72], "power": [1, 4, 5, 6, 16, 20, 23, 31, 39, 49, 55, 57, 65, 68, 75], "rel_entr": [1, 72, 75], "scalen": [1, 72], "squar": [1, 2, 4, 7, 21, 22, 26, 34, 35, 38, 42, 48, 55, 57, 58, 60, 63, 68, 69, 70, 72, 74], "xexp": [1, 70, 72, 75], "cummax": 1, "diff_po": [1, 47, 70], "dotsort": [1, 72, 75], "eye_minus_inv": [1, 70], "geo_mean": [1, 70, 72], "w": [1, 4, 5, 6, 9, 10, 11, 16, 21, 26, 27, 31, 33, 34, 35, 37, 47, 48, 50, 70, 71, 72, 75], "approx_error": [1, 4], "gmatmul": [1, 48, 70, 75], "harmonic_mean": [1, 70, 72], "inv_prod": [1, 72], "lambda_max": [1, 72], "lambda_min": [1, 47, 72], "lambda_sum_largest": [1, 72], "lambda_sum_smallest": [1, 72], "log_det": [1, 36, 72], "log_sum_exp": [1, 13, 72], "matrix_frac": [1, 68, 72], "max": [1, 9, 11, 13, 20, 21, 23, 26, 30, 31, 32, 47, 48, 52, 53, 62, 70, 71, 72, 75], "min": [1, 9, 11, 16, 47, 52, 62, 70, 71, 72, 75], "mixed_norm": [1, 72], "norm": [1, 19, 21, 22, 26, 27, 28, 31, 32, 34, 35, 38, 40, 45, 59, 61, 68, 69, 70, 72, 74], "norm1": [1, 58], "norm2": [1, 58], "norm_inf": 1, "normnuc": 1, "one_minus_po": [1, 47, 70], "perspect": [1, 9, 27, 72, 75], "pf_eigenvalu": [1, 51, 70], "pnorm": [1, 60, 70, 72], "prod": [1, 5, 47, 70], "quad_form": [1, 43, 68, 70, 72, 75], "quad_over_lin": [1, 7, 70, 72], "resolv": [1, 16, 35, 70, 75], "sigma_max": 1, "sum_largest": [1, 72], "sum_smallest": [1, 72], "sum_squar": [1, 7, 19, 22, 24, 25, 28, 35, 40, 42, 48, 56, 63, 68, 70, 72, 74], "suppfuncatom": [1, 13], "tr_inv": [1, 72, 75], "tv": [1, 38, 72], "von_neumann_entr": [1, 72, 75], "might": [1, 6, 7, 16, 22, 24, 40, 41, 47, 60, 68, 71, 75], "constructor": [1, 68, 70, 75], "some": [1, 5, 6, 7, 9, 13, 16, 21, 22, 27, 31, 33, 42, 48, 51, 53, 57, 68, 69, 70, 71], "For": [1, 2, 3, 4, 6, 7, 9, 13, 16, 22, 24, 27, 28, 30, 31, 32, 35, 38, 40, 41, 49, 55, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75], "exampl": [1, 2, 3, 4, 5, 6, 7, 11, 13, 16, 20, 21, 22, 24, 26, 28, 29, 32, 36, 37, 46, 47, 48, 50, 52, 55, 58, 59, 60, 63, 65, 68, 70, 71, 72, 73, 74, 75], "x": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75], "mapsto": [1, 13, 47], "lambda_": [1, 4, 47, 51, 70, 71, 72], "construct": [1, 2, 4, 5, 7, 8, 9, 10, 16, 20, 21, 23, 26, 37, 38, 41, 42, 49, 53, 56, 59, 61, 63, 68, 69, 70, 71, 72, 74, 75], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 22, 23, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 46, 47, 48, 49, 51, 52, 54, 55, 56, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75], "inherit": [1, 16], "directli": [1, 2, 5, 7, 9, 10, 11, 12, 30, 33, 68, 75], "indirectli": 1, "most": [1, 4, 5, 7, 8, 16, 55, 58, 59, 61, 64, 66, 68], "wai": [1, 5, 6, 7, 8, 9, 13, 16, 20, 22, 27, 57, 62, 63, 68, 69, 74, 75], "altern": [1, 4, 7, 24, 68, 70], "wrapper": [1, 2, 4, 7, 16, 68], "initi": [1, 14, 19, 30, 32, 34, 37, 38, 48, 55, 63, 68, 74], "run": [1, 24, 27, 30, 31, 35, 37, 42, 48, 62, 68, 70, 71], "cp": [1, 7, 11, 13, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 68, 69, 70, 71, 74, 75], "shape": [1, 2, 5, 6, 13, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 52, 57, 58, 60, 63, 68, 69, 70, 72, 74, 75], "2": [1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 73, 74], "symmetr": [1, 3, 5, 6, 9, 13, 23, 36, 42, 44, 68, 71, 72, 74, 75], "true": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 68, 69, 70, 71, 72, 74, 75], "print": [1, 4, 5, 7, 8, 11, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 62, 63, 65, 68, 69, 70, 71, 72, 74], "type": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 16, 32, 62, 65, 68, 71, 74, 75], "show": [1, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 39, 48, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 74], "unary_oper": [1, 2], "happen": [1, 9, 62, 71, 74], "becaus": [1, 3, 4, 7, 9, 11, 16, 27, 31, 35, 54, 59, 60, 68], "1": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68, 70, 71, 72, 73, 74], "negat": [1, 2], "base": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 22, 25, 31, 36, 37, 63, 64, 65, 66, 68, 69, 70, 71, 75], "3": [1, 2, 4, 5, 7, 9, 10, 11, 12, 16, 18, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 48, 50, 51, 53, 55, 58, 59, 60, 64, 68, 69, 70, 71, 72, 74], "last": [1, 7, 8, 9, 10, 12, 16, 20, 27, 30, 34, 39, 71, 74], "ani": [1, 2, 4, 6, 7, 10, 12, 13, 16, 21, 27, 34, 41, 65, 68, 69, 70, 72, 74, 75], "ha": [1, 3, 4, 5, 9, 10, 11, 13, 16, 18, 20, 21, 22, 25, 27, 30, 31, 33, 34, 35, 37, 38, 39, 42, 47, 49, 51, 53, 55, 57, 64, 65, 68, 69, 70, 71, 72, 75], "been": [1, 9, 11, 20, 39, 55, 64, 65, 68, 75], "arg": [1, 2, 3, 4, 5, 7, 9, 10, 11, 24, 68], "abstract": [1, 5, 6, 8, 16, 27, 75], "properti": [1, 5, 6, 7, 20, 21, 23, 26, 28, 32, 36, 37, 47, 68, 75], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 24, 27, 31, 34, 36, 49, 62, 63, 65, 66, 68, 69, 70, 71, 72, 75], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75], "describ": [1, 6, 7, 9, 16, 18, 21, 27, 34, 37, 46, 47, 48, 62, 65, 68, 70, 71, 72, 75], "closur": [1, 6], "region": [1, 5, 6, 27, 68], "finit": [1, 5, 6], "grad": [1, 6], "give": [1, 3, 4, 6, 9, 13, 22, 25, 27, 31, 33, 35, 39, 52, 65, 68, 72, 74, 75], "sub": [1, 6, 30, 69], "super": [1, 6, 68], "gradient": [1, 4, 6, 7, 19, 38, 47, 48, 57, 73], "r": [1, 4, 5, 6, 9, 10, 11, 16, 17, 18, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 56, 58, 59, 60, 61, 66, 68, 70, 71, 72, 74], "t": [1, 2, 4, 5, 6, 9, 10, 11, 12, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 53, 59, 61, 65, 68, 69, 70, 71, 72, 74, 75], "matrix": [1, 2, 4, 5, 6, 9, 16, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 44, 52, 57, 58, 60, 68, 69, 73, 74, 75], "vector": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 16, 20, 21, 22, 25, 26, 31, 33, 34, 35, 37, 38, 40, 42, 46, 47, 48, 53, 56, 59, 62, 68, 69, 71, 73], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 25, 27, 31, 35, 49, 68, 69, 70, 72], "indic": [1, 6, 7, 13, 16, 25, 27, 38, 41, 43, 45, 51, 60, 65, 68, 74, 75], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 69, 70, 71, 72, 73, 74, 75], "unknown": [1, 3, 35, 49, 55, 69, 70, 71, 72, 74, 75], "outsid": [1, 13, 21, 27, 33, 34, 35, 68], "map": [1, 6, 7, 8, 9, 10, 11, 12, 16, 31, 48, 68, 74, 75], "scipi": [1, 3, 6, 7, 16, 18, 23, 28, 36, 63, 68, 74, 75], "csc": [1, 6], "spars": [1, 6, 10, 12, 16, 25, 28, 34, 38, 57, 58, 59, 61, 63, 64, 68, 74], "is_atom_affin": 1, "bool": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 68, 75], "is_atom_concav": 1, "concav": [1, 3, 4, 6, 7, 13, 19, 37, 47, 49, 54, 57, 59, 69, 70, 71, 72], "is_atom_convex": 1, "convex": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 39, 42, 47, 48, 49, 51, 54, 55, 57, 59, 61, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75], "is_atom_log_log_affin": 1, "is_atom_log_log_concav": 1, "is_atom_log_log_convex": 1, "is_decr": 1, "idx": [1, 58, 59, 61], "non": [1, 5, 7, 8, 10, 12, 13, 16, 23, 27, 31, 35, 37, 41, 43, 45, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 75], "increas": [1, 3, 4, 5, 31, 32, 38, 47, 49, 50, 54, 58, 60, 61, 68, 69, 70, 71, 75], "argument": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 31, 46, 47, 49, 68, 69, 70, 71, 72, 75], "is_incr": 1, "decreas": [1, 3, 47, 49, 54, 61, 69, 70, 71, 75], "add_expr": 2, "arg_group": 2, "affatom": 2, "number": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 48, 49, 52, 53, 68, 69, 70, 71, 72, 75], "binary_oper": 2, "lh_exp": 2, "rh_exp": 2, "binaryoper": 2, "multipl": [2, 4, 5, 6, 8, 33, 48, 57, 68, 69, 70, 72, 74, 75], "semant": [2, 4, 6, 8, 63, 68, 69, 71, 72, 75], "exactli": [2, 4, 5, 6, 7, 27, 58, 68, 69, 70, 72], "numpi": [2, 4, 5, 6, 7, 8, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 68, 69, 72, 74], "except": [2, 4, 6, 7, 10, 12, 13, 16, 21, 23, 26, 28, 32, 35, 36, 37, 49, 65, 68, 69, 70, 71, 74, 75], "scalar": [2, 3, 4, 5, 7, 30, 46, 61, 68, 69, 71, 73, 74, 75], "permit": [2, 71], "creat": [2, 4, 5, 6, 7, 8, 16, 21, 27, 30, 32, 34, 36, 37, 44, 45, 55, 58, 60, 64, 68, 69, 74, 75], "left": [2, 4, 19, 21, 24, 27, 32, 35, 37, 38, 58, 59, 60, 61, 69, 70, 72], "hand": [2, 7, 9, 16, 21, 27, 68], "side": [2, 7, 9, 27, 46, 68], "right": [2, 4, 9, 19, 21, 22, 24, 26, 27, 32, 35, 37, 38, 39, 59, 61, 65, 68, 69, 70, 72], "lh_expr": 2, "rh_expr": 2, "divis": [2, 61], "block_list": 2, "block": [2, 7, 9, 16, 21, 24, 27, 34, 68, 70, 71, 72], "take": [2, 4, 5, 7, 8, 9, 10, 11, 13, 16, 18, 25, 27, 30, 31, 48, 66, 68, 69, 70, 72, 75], "intern": [2, 4, 20, 55, 75], "stack": [2, 48, 72], "horizont": [2, 23, 72], "vertic": [2, 23, 72], "repres": [2, 4, 5, 6, 9, 10, 12, 13, 20, 21, 27, 31, 34, 38, 39, 40, 52, 55, 64, 65, 68, 74, 75], "complex": [2, 6, 11, 16, 20, 21, 26, 31, 57, 69, 72, 73, 75], "conjug": [2, 68, 72], "1d": [2, 6, 21, 75], "discret": [2, 4, 9, 18, 21, 26, 27, 35, 38], "convolut": 2, "two": [2, 3, 5, 6, 8, 9, 16, 18, 20, 27, 30, 34, 35, 37, 49, 53, 68, 69, 70, 71, 74, 75], "c": [2, 5, 6, 7, 9, 10, 12, 13, 16, 18, 20, 22, 23, 25, 27, 35, 38, 41, 42, 44, 45, 46, 48, 49, 55, 64, 66, 68, 69, 70, 72, 74, 75], "b": [2, 5, 7, 8, 9, 10, 12, 16, 19, 21, 23, 27, 28, 29, 31, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 53, 55, 56, 62, 63, 68, 69, 71, 74, 75], "length": [2, 4, 5, 6, 9, 33, 55, 57, 68, 71, 72], "n": [2, 4, 5, 6, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 68, 70, 71, 72, 74, 75], "m": [2, 3, 4, 5, 16, 18, 19, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 58, 59, 60, 61, 63, 68, 70, 72, 74], "respect": [2, 5, 7, 9, 13, 18, 22, 27, 46, 47, 48, 55, 68, 69, 70, 72, 74], "c_k": 2, "sum_": [2, 4, 13, 16, 18, 22, 24, 25, 27, 29, 30, 31, 33, 35, 36, 38, 39, 40, 47, 48, 52, 53, 59, 70, 72], "j": [2, 4, 14, 18, 20, 23, 26, 27, 28, 30, 31, 36, 37, 38, 41, 44, 51, 52, 53, 70, 72], "k": [2, 4, 5, 9, 10, 12, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 52, 68, 70, 72], "a_ib_j": 2, "quad": [2, 16, 18, 21, 25, 26, 33, 35, 44, 45, 47, 48, 49, 53, 59], "0": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74], "ldot": [2, 3, 16, 22, 25, 27, 35, 38, 44, 45, 47, 48, 49, 52, 59, 61, 70, 71, 72], "constant": [2, 3, 4, 7, 10, 11, 12, 22, 23, 30, 32, 33, 46, 49, 55, 62, 68, 69, 70, 71, 72, 74, 75], "2d": [2, 4, 6, 21, 68, 75], "column": [2, 4, 5, 9, 10, 12, 18, 23, 25, 31, 34, 38, 68, 72, 74], "int": [2, 3, 4, 5, 6, 7, 9, 10, 12, 21, 23, 25, 27, 30, 31, 58, 61, 68, 75], "axisatom": [2, 4], "cumul": [2, 3, 4, 72], "being": [2, 16, 25, 75], "across": [2, 7, 9, 24, 52, 75], "diag_mat": 2, "diag_vec": 2, "extract": [2, 16], "diagon": [2, 6, 36, 68], "make": [2, 5, 7, 8, 9, 16, 17, 21, 22, 23, 25, 27, 29, 31, 35, 41, 58, 60, 62, 65, 68, 69, 70, 71, 74, 75], "numer": [2, 3, 4, 5, 6, 9, 12, 13, 16, 22, 35, 37, 54, 62, 68, 69, 70, 74], "kth": [2, 72], "order": [2, 5, 8, 9, 10, 11, 12, 16, 22, 23, 30, 31, 33, 39, 41, 47, 48, 57, 66, 68, 72, 75], "differ": [2, 4, 6, 8, 16, 18, 21, 24, 28, 31, 37, 38, 39, 40, 41, 43, 49, 57, 58, 63, 65, 66, 68, 69, 71, 72, 74, 75], "between": [2, 3, 4, 5, 8, 9, 13, 16, 18, 22, 27, 30, 31, 34, 38, 49, 52, 53, 68, 74], "adjac": 2, "element": [2, 4, 5, 18, 21, 23, 34, 36, 37, 70, 71, 72], "second": [2, 5, 7, 9, 10, 12, 16, 21, 23, 25, 27, 28, 30, 35, 47, 57, 61, 63, 66, 68, 72, 75], "unchang": 2, "arg_list": 2, "concaten": [2, 4, 8, 9, 22, 39, 68, 72], "arbitrari": [2, 30, 31, 75], "imaginari": [2, 21, 26, 68, 72], "part": [2, 5, 8, 16, 21, 26, 63, 65, 66, 68, 72, 75], "kei": [2, 8, 9, 16, 31, 68], "orig_kei": 2, "slice": [2, 5, 9], "support": [2, 3, 5, 7, 8, 9, 13, 16, 63, 65, 68, 75], "via": [2, 4, 6, 7, 20, 21, 27, 35, 49, 64, 68, 70, 71, 72, 75], "overload": [2, 5, 6, 68], "low": [2, 7, 8, 16, 22, 31, 68, 71], "level": [2, 7, 8, 16, 21, 30, 33, 39, 52, 64, 68], "should": [2, 5, 6, 7, 9, 11, 16, 27, 30, 31, 50, 55, 59, 62, 64, 65, 68, 70, 72, 74, 75], "instanti": [2, 4, 7, 8, 68, 75], "e": [2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 18, 20, 21, 22, 23, 25, 27, 28, 30, 33, 36, 38, 48, 49, 62, 64, 68, 69, 70, 72, 74, 75], "kroneck": 2, "product": [2, 4, 6, 16, 21, 27, 37, 41, 51, 53, 65, 68, 70, 71, 72, 75], "dim": [2, 7, 23, 68, 72], "tupl": [2, 4, 6, 9, 10, 27, 51, 68, 75], "assum": [2, 3, 4, 5, 9, 10, 12, 18, 23, 27, 33, 34, 35, 47, 55, 65, 68], "texttt": [2, 4, 13, 33, 72, 75], "x_1": [2, 4, 11, 23, 48, 70, 72], "otim": 2, "cdot": [2, 4, 23, 28, 48, 52, 53, 55, 70, 72], "x_n": [2, 4, 35, 48, 49, 70, 72], "compos": [2, 68], "len": [2, 16, 23, 25, 27, 31, 33, 35, 36, 55, 56, 58, 60], "implicit": [2, 3, 4, 13], "subsystem": [2, 68], "partial": [2, 22, 46, 53, 72, 75], "along": [2, 4, 8, 20, 21, 27, 34, 55, 65, 68, 70, 73], "text": [2, 3, 5, 13, 21, 23, 26, 28, 30, 32, 33, 36, 37, 50, 51, 52, 53, 65, 68, 69, 70, 72, 74], "th": [2, 8, 16, 24, 34, 39, 47, 52], "tr": [2, 4, 36, 44, 70, 72], "x_k": [2, 18], "x_": [2, 4, 35, 51, 53, 70, 72, 74], "integ": [2, 4, 5, 6, 7, 9, 10, 12, 16, 21, 27, 57, 63, 66, 71, 73, 75], "encod": [2, 6, 7, 8, 11, 25, 27], "dimens": [2, 4, 5, 6, 7, 10, 12, 30, 35, 36, 37, 68, 69, 70, 72, 74, 75], "out": [2, 3, 10, 12, 13, 15, 16, 20, 24, 25, 27, 30, 31, 38, 41, 49, 55, 58, 63, 65, 68, 69, 70, 71, 75], "tensor": [2, 48], "defin": [2, 4, 5, 8, 13, 16, 20, 21, 23, 25, 27, 30, 31, 35, 38, 40, 41, 43, 44, 45, 53, 55, 58, 60, 65, 66, 68, 71, 72], "rais": [2, 4, 5, 6, 7, 8, 11, 21, 23, 26, 28, 32, 36, 37, 49, 62, 68, 69, 70, 71, 74, 75], "valueerror": [2, 5, 7, 8, 68, 69, 75], "If": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 30, 36, 40, 49, 62, 64, 65, 68, 69, 70, 71, 72, 74, 75], "wrap": 2, "assert": [2, 11, 49, 50, 54, 65, 68, 70, 71], "psd": [2, 4, 6, 7, 9, 10, 12, 13, 16, 23, 36, 68, 75], "str": [2, 4, 6, 7, 8, 10, 12, 31, 68], "f": [2, 3, 4, 7, 9, 10, 11, 13, 16, 19, 20, 23, 24, 29, 31, 45, 46, 49, 58, 60, 61, 68, 69, 70, 71, 72, 75], "unvector": 2, "new": [2, 7, 8, 9, 11, 16, 21, 22, 27, 30, 32, 37, 63, 64, 68, 71, 72, 74], "entri": [2, 3, 4, 5, 6, 7, 14, 16, 25, 27, 32, 40, 41, 43, 44, 48, 51, 53, 58, 68, 69, 70, 72, 74, 75], "store": [2, 5, 10, 12, 20, 21, 36, 37, 38, 63, 68, 69, 70, 71, 72], "major": [2, 5, 8, 16, 22, 27, 68, 72, 75], "also": [2, 3, 7, 8, 9, 13, 16, 20, 27, 31, 33, 34, 35, 39, 40, 47, 49, 57, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75], "known": [2, 22, 33, 37, 38, 40, 45, 47, 49, 51, 53, 55, 68, 69, 70, 71, 72], "fortran": [2, 23, 68], "ortran": 2, "y": [2, 3, 4, 5, 9, 13, 16, 18, 19, 21, 22, 23, 25, 27, 28, 31, 32, 33, 34, 35, 36, 38, 39, 46, 47, 48, 49, 53, 54, 55, 58, 59, 60, 61, 68, 69, 70, 71, 72, 74, 75], "standard": [2, 3, 9, 16, 31, 32, 35, 37, 41, 43, 55, 63, 64, 69, 72, 73, 74, 75], "inner": [2, 4, 16, 72], "float": [2, 3, 4, 5, 6, 7, 8, 13, 27, 30, 31, 46, 59, 68, 69], "ndarrai": [2, 5, 6, 8, 16, 69, 72, 74, 75], "nest": [2, 68], "linear": [2, 5, 9, 10, 12, 13, 16, 21, 22, 23, 26, 27, 28, 29, 30, 34, 35, 40, 45, 48, 57, 59, 60, 61, 66, 68, 75], "alwai": [2, 13, 27, 64, 69, 72, 75], "have": [2, 4, 5, 6, 7, 8, 10, 11, 13, 15, 16, 19, 20, 22, 23, 24, 25, 27, 31, 33, 34, 35, 40, 41, 43, 47, 49, 52, 55, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75], "note": [2, 4, 5, 7, 13, 14, 18, 20, 21, 26, 27, 31, 34, 35, 36, 38, 62, 68, 69, 70, 71], "flatten": [2, 4, 5, 16, 21, 22, 23, 25, 27, 31, 34, 72], "independ": [2, 25, 27, 36, 62, 69], "one": [2, 4, 5, 6, 7, 8, 9, 13, 16, 22, 25, 26, 27, 30, 32, 33, 38, 41, 45, 49, 57, 62, 64, 65, 68, 69, 70, 71, 72, 75], "d": [2, 9, 10, 12, 16, 22, 23, 26, 27, 28, 34, 37, 45, 46, 47, 48, 49, 50, 55, 59, 61, 68, 70], "keepdim": [2, 4, 72], "fals": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 27, 31, 34, 58, 61, 62, 68, 69, 72], "drop": [2, 4, 72, 75], "after": [2, 4, 5, 6, 7, 10, 12, 16, 26, 27, 32, 38, 49, 64, 68, 70, 74, 75], "ax": [2, 16, 19, 25, 27, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 56, 68, 71, 74], "unaryoper": 2, "strictli": [2, 38, 48, 72], "upper": [2, 13, 23, 27, 30, 55, 58, 59, 60, 61, 68, 71, 72], "triagon": 2, "perform": [2, 5, 16, 21, 25, 31, 34, 35, 46, 62, 64, 65, 68, 75], "row": [2, 4, 5, 6, 9, 16, 21, 23, 28, 31, 35, 38, 40, 62, 72], "np": [2, 4, 5, 7, 13, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 54, 55, 56, 58, 59, 60, 61, 63, 68], "arrai": [2, 3, 4, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 69, 70, 75], "10": [2, 4, 5, 7, 13, 16, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 48, 49, 50, 54, 55, 56, 58, 59, 68, 70, 71, 74, 75], "11": [2, 21, 23, 25, 27, 28, 29, 32, 35, 37, 38, 47, 55, 68, 70, 72, 74, 75], "12": [2, 4, 23, 25, 27, 28, 32, 34, 35, 36, 37, 38, 47, 55, 68, 71, 75], "13": [2, 4, 14, 23, 25, 28, 29, 32, 35, 37, 42, 47, 55, 56, 68], "14": [2, 4, 21, 23, 25, 28, 31, 32, 35, 37, 39, 47, 48, 53, 68, 75], "15": [2, 4, 23, 25, 26, 27, 28, 32, 34, 35, 37, 40, 41, 43, 48, 55, 64, 68, 74], "16": [2, 21, 23, 25, 26, 27, 28, 32, 35, 36, 37, 58, 59, 60, 61, 68, 74], "17": [2, 4, 14, 23, 25, 27, 28, 32, 35, 68, 71, 75], "18": [2, 23, 25, 27, 28, 32, 35, 68, 75], "19": [2, 23, 25, 28, 32, 35, 64], "20": [2, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 40, 43, 48, 58, 60, 61, 63, 68, 69, 75], "21": [2, 23, 25, 28, 31, 32, 35, 74], "22": [2, 23, 25, 27, 28, 32, 35, 36, 47], "23": [2, 4, 22, 23, 32, 35], "24": [2, 23, 29, 32, 35, 36], "25": [2, 4, 18, 23, 26, 27, 32, 34, 35, 42, 48, 55], "ensur": [2, 27, 32, 48, 68, 69], "exponenti": [3, 5, 9, 10, 12, 16, 47, 49, 66, 68, 70, 75], "suppli": [3, 7, 8, 13, 16, 30, 49, 59, 68, 70, 71], "absolut": [3, 5, 16, 26, 37, 68], "operatornam": [3, 4, 72], "begin": [3, 4, 16, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 70, 72], "2m": [3, 72], "geq": [3, 4, 5, 16, 18, 22, 30, 31, 43, 46, 47, 52, 61, 68, 69, 70, 71, 72], "leq": [3, 5, 16, 21, 25, 27, 30, 34, 35, 41, 43, 45, 46, 47, 48, 49, 50, 52, 56, 68, 69, 70, 71, 72], "end": [3, 4, 8, 13, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 65, 68, 70, 71, 72], "default": [3, 4, 5, 7, 16, 68, 72, 74], "disambigu": 3, "http": [3, 4, 7, 10, 12, 13, 16, 27, 28, 49, 62, 65, 68], "github": [3, 15, 16, 62, 63, 64, 68, 70, 71, 72, 75], "com": [3, 16, 25, 35, 68], "issu": [3, 15, 16, 22, 37, 62, 63, 64, 65, 68, 70, 71, 72], "733": 3, "distribut": [3, 10, 12, 13, 16, 18, 21, 22, 27, 36, 47, 48, 65, 68, 75], "normal": [3, 4, 16, 22, 23, 26, 28, 32, 36, 38, 48, 53, 55, 58, 59, 60, 61, 65, 68, 72], "random": [3, 13, 18, 19, 21, 22, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 56, 58, 59, 60, 61, 63, 68, 74], "quadrat": [3, 7, 8, 9, 10, 11, 12, 16, 35, 57, 66, 68, 75], "approxim": [3, 4, 5, 13, 32, 37, 46, 47, 50, 53, 58, 68, 72, 75], "modest": 3, "accuraci": [3, 4, 16, 35, 59, 60, 62, 68, 72, 74], "over": [3, 5, 7, 13, 16, 23, 27, 31, 32, 34, 48, 55, 59, 61, 63, 68, 71, 72, 74, 75], "4": [3, 4, 7, 11, 16, 18, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 47, 48, 51, 55, 61, 64, 68, 69, 70, 72, 74, 75], "detail": [3, 5, 7, 16, 17, 34, 62, 67, 68, 72, 74, 75], "natur": [3, 20, 47, 63, 75], "pr": [3, 59, 72], "1224": [3, 72], "analog": [3, 68, 70], "call": [3, 6, 7, 8, 9, 16, 18, 20, 24, 46, 49, 62, 64, 68, 69, 70, 71, 72, 74, 75], "log_ndtr": 3, "opt": [3, 9, 27, 48], "would": [3, 7, 16, 20, 22, 27, 30, 31, 34, 41, 43, 45, 46, 47, 53, 62, 68, 70, 71, 72, 74, 75], "obviou": 3, "casual": 3, "user": [3, 5, 7, 8, 15, 16, 25, 35, 40, 55, 63, 66, 68, 72, 75], "gamma": [3, 13, 30, 31, 35, 47, 50, 68, 72, 74, 75], "full": [3, 16, 49, 68, 75], "rang": [3, 7, 13, 18, 19, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 45, 48, 49, 52, 53, 55, 58, 59, 60, 61, 68, 72, 74], "approach": [3, 13, 20, 34, 35, 60, 63], "perfect": [3, 7, 25, 31, 40], "goe": [3, 13, 16], "infin": [3, 4, 13], "228": [3, 72], "special": [3, 18, 46, 65, 68, 75], "evalu": [3, 7, 11, 13, 31, 48, 68, 70, 71], "rather": [3, 13, 16, 32, 63, 68, 75], "than": [3, 4, 5, 6, 7, 8, 9, 13, 16, 18, 20, 22, 25, 27, 32, 35, 38, 47, 59, 60, 61, 63, 68, 71, 74, 75], "regress": [3, 16, 22, 31, 40, 48, 57], "arg1": 3, "arg2": 3, "sequenc": [3, 4, 8, 9, 34, 35, 68, 71], "alia": [3, 4], "p": [3, 4, 7, 9, 10, 12, 14, 16, 18, 20, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 43, 44, 45, 48, 49, 52, 60, 62, 68, 70, 72, 75], "max_denom": [3, 4], "1024": [3, 4], "expon": [3, 68], "must": [3, 4, 5, 7, 8, 9, 10, 12, 16, 18, 21, 25, 26, 27, 30, 33, 46, 47, 48, 49, 55, 62, 63, 65, 68, 70, 71, 72, 74, 75], "specif": [3, 4, 7, 8, 9, 10, 11, 12, 13, 16, 23, 27, 36, 51, 53, 57, 65, 68, 75], "given": [3, 4, 5, 7, 8, 9, 11, 13, 16, 18, 21, 24, 25, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 46, 47, 48, 49, 51, 55, 59, 61, 68, 69, 71, 72, 75], "ccl": 3, "posit": [3, 4, 5, 6, 9, 10, 12, 16, 18, 21, 25, 27, 31, 33, 35, 36, 37, 41, 42, 43, 46, 48, 49, 51, 52, 53, 54, 59, 68, 69, 70, 71, 72, 74, 75], "same": [3, 4, 5, 6, 13, 16, 19, 21, 26, 27, 28, 29, 31, 32, 33, 36, 37, 62, 65, 68, 69, 70, 72, 74, 75], "8": [3, 7, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 47, 48, 49, 51, 53, 56, 68, 72, 75], "infti": [3, 4, 13, 27, 68, 75], "neq": [3, 4, 30, 52, 70, 72], "ration": [3, 4], "represent": [3, 4, 5, 6, 7, 11, 13, 16, 21, 26, 55, 68, 74], "small": [3, 7, 16, 27, 31, 37, 46, 47, 48, 56, 60, 68], "denomin": [3, 4, 7, 54, 71], "emploi": 3, "when": [3, 4, 5, 6, 7, 9, 13, 16, 17, 21, 25, 27, 30, 31, 32, 35, 43, 45, 46, 54, 59, 64, 68, 69, 70, 71, 72, 74, 75], "comput": [3, 4, 6, 7, 13, 21, 23, 25, 26, 27, 36, 46, 47, 48, 57, 59, 61, 65, 68, 71, 74], "better": [3, 4, 5, 22, 31, 35, 60, 64], "fraction": [3, 4, 26, 27, 30, 31, 33, 34, 48, 57, 68], "usual": [3, 4, 13, 16, 47, 58, 60, 68, 74], "exact": [3, 4, 7, 16, 36], "No": [3, 9, 13, 30, 62, 68], "cone": [3, 4, 5, 7, 9, 10, 12, 16, 36, 38, 57, 66, 68, 74, 75], "Such": [3, 13, 16], "could": [3, 7, 13, 20, 27, 68, 69, 74], "handl": [3, 4, 9, 13, 16, 35, 62, 68, 75], "reli": [3, 63, 68], "result": [3, 4, 5, 7, 9, 22, 25, 27, 29, 31, 35, 40, 41, 43, 44, 45, 58, 63, 65, 68, 69, 71, 72, 74, 75], "fewer": 3, "current": [3, 5, 9, 13, 16, 21, 27, 64, 68, 74, 75], "method": [3, 5, 6, 7, 8, 9, 13, 16, 20, 24, 28, 30, 37, 46, 48, 49, 57, 58, 60, 62, 70, 71, 73, 74], "even": [3, 7, 8, 9, 12, 16, 22, 23, 27, 32, 65, 68, 69, 70, 71, 74], "reformul": [3, 5], "re": [3, 5, 15, 16, 27, 35, 37, 38, 48, 68, 70, 71, 74, 75], "interest": [3, 8, 15, 16, 25, 27, 32, 51, 68, 71, 75], "help": [3, 8, 16, 64, 68, 71], "enhanc": [3, 16], "abil": [3, 16, 64, 68, 75], "pleas": [3, 8, 9, 10, 11, 12, 14, 16, 68, 70, 71], "get": [3, 7, 16, 25, 27, 31, 35, 63, 64, 69, 73, 74, 75], "touch": [3, 16], "u": [3, 8, 16, 24, 27, 30, 33, 35, 38, 49, 63, 68, 70, 74], "check": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 26, 27, 28, 30, 37, 39, 49, 62, 63, 68, 69, 70, 71, 75], "1222": [3, 16], "final": [3, 16, 21, 25, 26, 27, 30, 34, 48, 55, 68, 70], "determin": [3, 8, 13, 23, 27, 30, 31, 34, 37, 65, 68, 69, 70, 72, 74], "input": [3, 5, 8, 9, 10, 11, 13, 16, 18, 29, 30, 31, 33, 35, 47, 48, 55, 68, 72, 75], "g": [3, 4, 6, 9, 13, 16, 21, 23, 27, 29, 30, 34, 43, 45, 52, 62, 68, 70, 74, 75], "001": [3, 4, 13, 30], "1001": 3, "1000": [3, 27, 35, 36, 48, 61, 68], "math": [3, 14, 18, 21, 26, 27, 55, 63], "while": [3, 5, 8, 9, 13, 21, 22, 24, 27, 30, 40, 47, 59, 61, 62, 65, 68, 69, 70, 71, 72, 75], "0001": 3, "version": [3, 8, 10, 12, 13, 16, 21, 23, 63, 64, 65, 68, 70, 72, 75], "program": [3, 6, 7, 8, 9, 10, 11, 12, 14, 16, 26, 27, 37, 46, 47, 48, 50, 51, 52, 53, 54, 56, 62, 63, 66, 73, 74, 75], "consid": [3, 4, 8, 13, 16, 18, 20, 21, 23, 25, 27, 29, 30, 33, 37, 46, 47, 49, 55, 60, 63, 75], "onli": [3, 4, 5, 6, 7, 9, 13, 16, 21, 22, 23, 26, 27, 30, 31, 34, 35, 49, 62, 64, 65, 68, 69, 70, 71, 75], "relev": [3, 6, 7, 66, 68], "solv": [3, 4, 5, 7, 8, 9, 11, 13, 16, 18, 19, 22, 24, 25, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 73, 74, 75], "alpha": [3, 5, 16, 23, 27, 30, 31, 33, 34, 35, 38, 39, 46, 48, 50, 68, 72], "beta": [3, 23, 33, 50, 58, 59, 60, 61, 72], "root": [3, 9, 10, 16, 64], "neither": [4, 70], "nor": [4, 70], "langl": [4, 13, 55, 72], "sort": [4, 16, 31, 48, 72], "rangl": [4, 13, 55, 72], "both": [4, 6, 7, 9, 12, 16, 18, 20, 27, 31, 35, 38, 64, 68, 69, 70, 71, 72, 75], "less": [4, 5, 35, 60, 64, 68, 71], "conceptu": 4, "pad": 4, "zero": [4, 6, 7, 9, 10, 12, 16, 18, 19, 21, 23, 24, 27, 30, 31, 32, 34, 35, 36, 37, 38, 45, 47, 48, 58, 59, 60, 61, 68, 69], "larger": [4, 7, 27, 38, 59, 61, 66, 68, 69], "gener": [4, 5, 6, 7, 8, 9, 10, 11, 20, 25, 27, 34, 35, 40, 41, 42, 43, 44, 45, 47, 49, 53, 59, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72], "5": [4, 14, 16, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 64, 68, 69, 70, 72, 74], "boolean": [4, 6, 9, 25, 27, 34, 59, 61, 68, 75], "weight": [4, 13, 21, 23, 26, 27, 28, 30, 32, 37, 47], "largest": [4, 72], "assign": [4, 6, 9, 16, 27, 31, 39, 57, 58, 60, 68, 74], "etc": [4, 13, 16, 27, 68, 74], "uniti": 4, "enforc": [4, 6, 7, 16, 22, 24, 27, 36, 48, 71], "spectral": [4, 51, 70, 72], "radiu": [4, 27, 35, 45, 51, 70], "geometr": [4, 7, 11, 14, 16, 46, 50, 52, 53, 55, 63, 66, 73, 75], "option": [4, 6, 7, 8, 10, 12, 16, 27, 31, 35, 49, 62, 63, 64, 70, 71, 73, 74, 75], "p_1": [4, 52, 70, 72], "p_n": [4, 52, 70, 72], "frac": [4, 5, 21, 25, 30, 31, 35, 46, 47, 48, 52, 53, 54, 55, 56, 59, 70, 72], "mathbf": [4, 19, 22, 23, 25, 27, 29, 31, 32, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 53, 56, 70, 71, 72], "tp": 4, "nonneg": [4, 6, 7, 9, 10, 13, 16, 37, 39, 54, 57, 58, 59, 60, 61, 68, 69, 71, 74, 75], "nonzero": [4, 21, 23, 36, 37, 71], "specifi": [4, 6, 7, 8, 9, 16, 30, 54, 56, 63, 68, 69, 71, 74, 75], "ones": [4, 7, 22, 23, 27, 28, 37, 48, 52, 58, 69, 74], "unweight": 4, "x_i": [4, 18, 23, 24, 25, 29, 34, 37, 39, 59, 61, 72], "whenev": [4, 31, 62, 75], "p_i": [4, 30, 33, 52], "unconstrain": 4, "rule": [4, 7, 16, 26, 37, 46, 47, 49, 62, 68, 72, 73, 74], "occur": [4, 16, 25, 33], "sai": [4, 16, 27, 35, 49, 68, 70, 71], "cannot": [4, 6, 7, 13, 27, 30, 37, 65, 68, 69, 70, 74], "made": [4, 9, 16, 65, 68, 75], "immedi": [4, 16], "approx": [4, 26, 46, 58], "w_1": 4, "w_n": 4, "adjust": [4, 34, 37], "modifi": [4, 6, 7, 16, 23, 26, 27, 65, 68, 75], "error": [4, 6, 7, 16, 21, 22, 23, 24, 25, 26, 28, 30, 31, 35, 36, 37, 38, 48, 49, 56, 58, 59, 60, 61, 64, 68, 71, 74, 75], "found": [4, 5, 16, 21, 28, 29, 34, 37, 38, 55, 56, 62, 68, 74], "through": [4, 5, 6, 7, 9, 14, 16, 22, 27, 47, 48, 64, 65, 68, 69], "seen": [4, 35, 54], "string": [4, 6, 7, 8, 9, 17, 68, 74], "maxim": [4, 9, 11, 13, 18, 19, 20, 27, 34, 36, 39, 49, 54, 55, 57, 59, 68, 69, 70, 71, 74], "point": [4, 5, 7, 13, 16, 22, 23, 27, 31, 34, 35, 37, 39, 55, 60, 62, 64, 68], "few": [4, 16, 27, 31, 32, 59, 68], "decim": 4, "place": [4, 16, 27, 34, 65, 68], "sometim": [4, 22, 62, 68, 71], "34": [4, 23], "56": [4, 23], "78": [4, 23], "90": [4, 23], "45": [4, 21, 23, 34, 61], "30": [4, 21, 22, 23, 26, 31, 32, 38, 63], "In": [4, 7, 8, 9, 16, 18, 22, 25, 27, 31, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 74, 75], "123": [4, 23], "456": 4, "789": 4, "256": 4, "341": 4, "295": 4, "512": 4, "1e": [4, 5, 7, 13, 25, 27, 28, 29, 34, 35, 36, 37, 46, 47, 48, 56, 68], "contain": [4, 7, 9, 16, 21, 27, 30, 48, 55, 57, 65, 68], "combin": [4, 13, 27, 65, 68], "73": 4, "60": [4, 14, 21, 23, 27, 31, 35, 48, 68], "often": [4, 16, 22, 58, 68], "9": [4, 21, 23, 25, 27, 28, 29, 32, 34, 35, 37, 38, 45, 48, 49, 51, 53, 55, 56, 64, 65, 68], "153": 4, "term": [4, 9, 10, 13, 20, 23, 24, 31, 34, 35, 59, 61, 65, 68], "obj": [4, 18, 20, 21, 23, 25, 26, 28, 29, 30, 32, 35, 36, 37, 38, 39, 55, 68, 69, 74], "constr": [4, 27, 34, 35, 68], "val": [4, 6, 31, 48, 68, 74], "whose": [4, 5, 6, 9, 10, 11, 48, 68], "possibl": [4, 7, 13, 16, 18, 25, 27, 30, 34, 62, 65, 68, 75], "offer": [4, 8, 35, 65], "more": [4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 17, 20, 23, 25, 27, 35, 38, 57, 60, 63, 64, 65, 68, 69, 70, 72, 75], "accur": [4, 20, 35, 68], "cost": [4, 20, 27, 35, 37, 40, 60, 68], "requir": [4, 8, 10, 12, 13, 16, 39, 41, 48, 55, 63, 64, 65, 68, 69, 70, 71, 75], "inequ": [4, 5, 6, 7, 9, 12, 16, 29, 31, 41, 43, 44, 47, 48, 55, 57, 68, 71, 74], "_": [4, 5, 7, 9, 16, 19, 24, 27, 38, 42, 43, 44, 46, 47, 48, 49, 53, 58, 61, 68, 69, 70, 72], "mathbin": 4, "diamond": [4, 10, 12, 13, 14, 62, 63, 65], "time": [4, 5, 7, 9, 16, 18, 19, 20, 23, 25, 27, 28, 30, 31, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 63, 68, 70, 72, 74, 75], "ccc": 4, "prod_": [4, 27, 51, 70], "j1": 4, "a_": [4, 27, 41, 48, 50, 51, 53, 70], "1j": [4, 21, 26, 68, 70], "pj": 4, "vdot": [4, 70, 72], "mj": [4, 70], "harmon": 4, "reciproc": [4, 30, 47, 49, 70], "eigenvalu": [4, 51, 53, 68, 71, 72], "det": [4, 36, 72], "sum_i": [4, 37, 61], "max_": [4, 30, 70, 72], "q": [4, 7, 10, 12, 42, 43, 47, 68, 70, 72], "lp": [4, 27, 31, 64, 68, 75], "sum_k": [4, 72], "sum_l": [4, 72], "lvert": [4, 70, 72], "l": [4, 7, 10, 16, 21, 23, 30, 31, 48, 55, 68, 72], "rvert": [4, 70, 72], "l_": [4, 19], "outer": [4, 53], "mix": [4, 5, 9, 10, 12, 16, 57, 63, 66, 73, 75], "valid": [4, 8, 13, 27, 48, 69, 70, 71], "fro": [4, 32, 70, 72], "frobeniu": [4, 53, 57, 72], "nuc": [4, 72], "singular": [4, 72], "inf": [4, 7, 23, 68, 70, 72, 74], "norm_nuc": 4, "fact": [4, 7, 58, 61, 68, 69], "epigraph": 4, "mathbb": [4, 5, 16, 18, 30, 59], "fx": [4, 29, 45], "gt": 4, "sf": [4, 72], "se": 4, "web": [4, 7, 25, 35, 49], "stanford": [4, 27, 28, 34, 35, 38, 48, 49, 62, 68, 69], "edu": [4, 27, 28, 49, 62, 69], "boyd": [4, 14, 18, 21, 22, 23, 25, 26, 28, 30, 32, 33, 36, 37, 39, 49, 50, 52, 62, 63, 68], "paper": [4, 5, 14, 28, 37, 47, 48, 49, 62, 70, 71, 75], "pdf": [4, 25, 27, 35, 62], "sw_aff_ctrl": 4, "view": [4, 27, 34], "underli": [4, 28], "doe": [4, 5, 7, 9, 21, 22, 26, 30, 33, 38, 49, 58, 64, 65, 68, 69, 70, 71], "callabl": 4, "z": [4, 5, 7, 9, 13, 16, 24, 42, 46, 48, 49, 59, 68, 70, 71], "perpect": 4, "perron": [4, 53, 57], "magnitud": [4, 26, 46], "equal": [4, 5, 6, 7, 9, 12, 16, 23, 27, 34, 41, 43, 45, 53, 55, 62, 68, 71, 74], "guarante": [4, 13, 27, 69, 70, 71, 75], "factori": 4, "set": [4, 5, 6, 7, 9, 13, 16, 21, 22, 25, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 42, 44, 46, 48, 49, 51, 57, 59, 61, 62, 64, 66, 70, 71, 72, 73, 74], "treat": [4, 7, 32, 68, 69, 70, 72, 74], "accept": [4, 8, 9, 10, 11, 12, 13, 16, 65, 68, 75], "_p": [4, 70, 72], "n_": [4, 5, 34, 43, 70, 72], "actual": [4, 13, 21, 22, 25, 27, 31, 34, 35, 46, 47, 54], "otherwis": [4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 20, 30, 31, 32, 33, 59, 64, 65], "them": [4, 5, 9, 10, 22, 27, 58, 62, 64, 68, 74], "ignor": [4, 22, 27], "assume_psd": 4, "ij": [4, 18, 27, 30, 36, 38, 41, 44, 51, 52, 53, 70, 72], "2_": [4, 46], "si": [4, 70], "smallest": [4, 72], "suppfunc": 4, "parent": [4, 68], "mathrm": [4, 16, 27, 38, 47, 55, 56, 59, 61, 70, 72], "definit": [4, 5, 65, 68, 71, 72, 74], "total_vari": 4, "total": [4, 22, 23, 25, 30, 33, 34, 35, 39, 41, 47, 52, 57, 68, 69, 75], "variat": [4, 57], "matric": [4, 6, 7, 9, 10, 12, 13, 16, 20, 21, 23, 31, 35, 42, 44, 51, 53, 64, 69, 70, 72, 73, 75], "l1": [4, 28, 37, 57, 61], "l2": [4, 69], "extend": [4, 20, 35, 75], "third": [4, 16, 21, 65], "quad_approx": 4, "von": 4, "neumann": 4, "entropi": [4, 5, 18, 57], "logm": [4, 72], "logarithm": [4, 5, 27, 49, 70], "textstyl": 4, "lambda_i": [4, 45, 47], "expect": [4, 16, 25, 43, 60, 68, 75], "applic": [4, 8, 9, 10, 11, 12, 13, 16, 63, 65, 67, 68, 69], "quantum": [4, 75], "restrict": [5, 7, 27, 63, 68], "optim": [5, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 74, 75], "seven": 5, "semidefinit": [5, 6, 9, 10, 12, 16, 36, 42, 57, 66, 73, 74, 75], "dimension": [5, 10, 12, 16, 37, 42, 68, 72, 74, 75], "vast": [5, 68], "need": [5, 7, 8, 11, 13, 15, 16, 17, 27, 31, 35, 39, 42, 58, 60, 64, 68, 75], "first": [5, 7, 8, 9, 16, 19, 21, 23, 27, 30, 31, 32, 34, 47, 48, 61, 68, 75], "three": [5, 8, 16, 23, 38, 49, 69, 70, 72], "addition": [5, 47, 49, 64, 68, 71], "know": [5, 7, 8, 22, 27, 33, 68], "anyth": [5, 7, 8], "how": [5, 7, 9, 16, 22, 31, 34, 36, 41, 46, 54, 56, 57, 58, 60, 65, 67, 68, 69, 70, 71, 74, 75], "api": [5, 8, 9, 10, 11, 12, 13, 63, 68, 70, 75], "do": [5, 8, 9, 13, 16, 21, 22, 26, 27, 30, 31, 35, 37, 58, 60, 61, 63, 65, 68, 75], "provid": [5, 8, 9, 13, 64, 65, 68, 71, 74, 75], "advanc": [5, 7, 14, 27, 62, 73, 75], "find": [5, 7, 8, 9, 16, 18, 22, 27, 30, 31, 37, 40, 43, 48, 55, 56, 58, 60, 61, 68, 71, 72, 74], "inspect": [5, 7, 54], "dual": [5, 7, 8, 9, 13, 19, 27, 38, 41, 43, 45, 49, 62, 64, 73, 75], "residu": [5, 32, 40, 68], "constr_id": 5, "canon": [5, 6], "uniqu": [5, 27, 31], "id": [5, 6, 8, 10, 12, 31, 62], "is_dcp": [5, 6, 7, 48, 50, 62, 68, 69], "dpp": [5, 6, 7, 16, 46, 48, 74, 75], "toler": [5, 13, 30, 32, 68], "08": [5, 23, 25, 28, 33, 35, 68], "violat": [5, 31, 68, 69, 75], "constrain": [5, 6, 23, 25, 27, 29, 34, 35, 36, 52, 68, 75], "associ": [5, 13, 19, 34, 36, 59, 61, 65], "distanc": [5, 22, 27, 34, 71], "project": [5, 6, 14, 16, 38, 48, 55, 63, 68, 75], "onto": [5, 6, 68], "pi": [5, 21, 23, 26], "v": [5, 13, 16, 22, 23, 25, 35, 49, 55, 58, 60, 61, 62, 70, 74], "_2": [5, 16, 22, 25, 28, 31, 35, 38, 40, 42, 45, 48, 56, 58, 60, 68, 69, 71, 72], "prefer": [5, 42, 65, 68], "To": [5, 14, 16, 19, 20, 25, 27, 31, 34, 35, 39, 48, 62, 63, 64, 65, 68, 70, 71, 74, 75], "former": [5, 58], "latter": [5, 58], "strict": [5, 31, 36, 74], "sens": [5, 25, 58, 60, 69, 74], "dual_valu": [5, 41, 43, 45, 49, 50, 63, 68], "size": [5, 6, 7, 9, 13, 16, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 57, 58, 59, 60, 61, 69, 72, 75], "succcurlyeq_": 5, "s_n": 5, "second_ord": 5, "origin": [5, 7, 8, 9, 10, 11, 12, 13, 19, 22, 23, 27, 28, 32, 35, 38, 46, 62, 65, 68, 74], "mid": [5, 47, 59, 68], "ye": [5, 62], "cup": [5, 68], "rel": [5, 22, 27, 38, 53, 68], "k_": [5, 16], "cl": [5, 16], "sinc": [5, 16, 18, 21, 24, 30, 33, 35, 37, 39, 47, 63, 68, 69], "abov": [5, 7, 16, 21, 22, 32, 39, 46, 48, 49, 55, 58, 60, 64, 65, 68, 69, 71, 74], "veri": [5, 16, 39, 68, 75], "similar": [5, 22, 38, 47, 60, 68, 70, 71, 72], "convers": [5, 55, 63, 65, 71], "theorem": [5, 69, 71], "node": [5, 6, 9, 10, 20, 23, 27, 33, 62, 68], "quadratur": 5, "algorithm": [5, 7, 19, 27, 34, 37, 68], "control": [5, 14, 25, 27, 57, 63, 65, 68], "collect": [5, 6, 31, 47], "3d": [5, 16, 68], "match": [5, 23, 30, 38], "common": [5, 16, 30, 41, 43, 49, 57, 65, 74], "compon": [5, 9, 21, 41, 42, 47], "open": [5, 15, 16, 28, 31, 42, 62, 63, 64, 66, 68], "interv": [5, 21, 27, 30, 35, 48, 55], "follow": [5, 7, 8, 13, 14, 16, 19, 21, 24, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 75], "code": [5, 7, 8, 9, 10, 11, 12, 15, 21, 23, 24, 27, 31, 35, 37, 40, 41, 42, 43, 44, 45, 46, 53, 54, 59, 61, 62, 63, 64, 65, 68, 70, 71, 72, 74, 75], "snippet": [5, 16, 62, 68], "incorrect": 5, "satisfi": [5, 7, 13, 27, 37, 47, 49, 62, 68, 69, 70, 71, 74], "ndim": [5, 6, 13, 16, 69, 75], "unlik": [5, 27], "attempt": [5, 9, 36, 68], "appropri": [5, 8, 16, 65, 75], "finite_set": 5, "ineq_form": 5, "separ": [5, 21, 63, 65, 68], "union": [5, 65], "canonic": [5, 7, 9, 10, 11, 12, 16, 63, 73, 75], "formul": [5, 18, 21, 26, 33, 47, 48, 49, 51, 52, 59, 61, 70, 75], "binari": 5, "speed": [5, 7, 8, 16, 35, 62, 68], "solver": [5, 7, 8, 9, 11, 21, 23, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 42, 48, 63, 71, 73, 74], "simpl": [5, 7, 9, 16, 22, 30, 31, 37, 39, 43, 46, 54, 67, 68, 69, 70, 71, 74], "branch": [5, 16], "bound": [5, 13, 22, 23, 25, 27, 30, 50, 52, 55, 68, 71, 74], "choos": [5, 6, 7, 9, 21, 25, 27, 30, 31, 39, 41, 47, 51, 55, 59, 61, 62, 65, 74], "methodologi": [5, 37], "work": [5, 14, 16, 21, 22, 26, 27, 28, 29, 32, 36, 37, 64, 65, 68, 69, 75], "h": [5, 9, 13, 16, 21, 27, 34, 43, 48, 50, 68], "d_": [5, 47], "op": 5, "succeq": [5, 18, 23, 29, 32, 33, 36, 39, 44], "local": [5, 16, 20, 24, 37, 55], "significantli": [5, 63, 68], "expand": [5, 11, 16], "effect": [5, 7, 9, 27, 31, 34, 46, 68], "scale": [5, 16, 27, 31, 35, 37, 38, 48, 66, 68], "param": [5, 10, 12, 47], "conic": [5, 8, 9, 10, 11, 38, 66, 68, 75], "link": [6, 65], "togeth": [6, 72, 74], "mani": [6, 14, 16, 22, 31, 38, 41, 57, 58, 60, 63, 66, 68, 71, 74, 75], "conveni": [6, 68], "creation": [6, 7], "compound": [6, 68], "__add__": 6, "__div__": 6, "One": [6, 16, 22, 33, 47, 68], "divid": [6, 9, 23, 33, 59, 61], "__eq__": 6, "self": [6, 8, 16, 20, 68], "__ge__": 6, "nonpo": [6, 12, 68, 69, 74, 75], "__le__": 6, "__lshift__": 6, "__matmul__": 6, "__mul__": 6, "__pow__": 6, "__radd__": 6, "__rdiv__": 6, "__rlshift__": 6, "__rmatmul__": 6, "__rmul__": 6, "__rrshift__": 6, "__rshift__": 6, "__rsub__": 6, "__rtruediv__": 6, "__sub__": 6, "__truediv__": 6, "miss": [6, 38, 44, 51], "dict": [6, 7, 8, 9, 10, 11, 12, 16, 23, 27, 62, 68], "is_affin": [6, 71], "is_concav": [6, 71], "is_const": [6, 71], "is_convex": [6, 49, 71], "disciplin": [6, 7, 14, 28, 46, 49, 54, 56, 62, 73, 74, 75], "parametr": [6, 7, 16, 22, 73, 74, 75], "ruleset": [6, 7, 70, 71, 75], "involv": [6, 7, 13, 16, 27, 63, 68, 71, 74], "is_dgp": [6, 7, 46, 48, 49, 50, 52, 68, 70], "is_dpp": [6, 7], "context": [6, 7, 27, 49, 70], "parameter": [6, 10, 12, 16, 36], "is_dqcp": [6, 7, 54, 56, 71], "dqcp": [6, 7, 54, 55, 56, 73, 75], "is_log_log_affin": [6, 49, 70], "is_log_log_concav": [6, 49, 70], "is_log_log_convex": [6, 70], "is_nonneg": 6, "is_nonpo": 6, "is_zero": 6, "iter": [6, 7, 13, 21, 23, 24, 27, 28, 32, 35, 38, 48, 55, 68], "nsd": [6, 68], "hermitian": [6, 68], "sparsiti": [6, 36, 58, 61, 68], "carri": [6, 12, 24, 65], "permiss": [6, 10, 12, 13, 16, 65, 68], "contradict": 6, "either": [6, 7, 8, 10, 11, 12, 13, 16, 21, 27, 34, 64, 65, 68, 69, 71, 74, 75], "nonposit": [6, 68, 69, 71], "entir": [6, 20, 68, 74], "tuplewith": [6, 68], "fix": [6, 13, 16, 22, 27, 32, 36, 37, 48, 64, 68, 75], "pattern": [6, 9, 21, 36, 68], "sensibl": [6, 68], "idiom": [6, 7, 68], "round": [6, 25, 59], "project_and_assign": [6, 68], "var_id": 6, "kwarg": [6, 7, 16, 68], "declar": [6, 39, 70], "hyper": [6, 31, 60], "machin": [6, 14, 16, 62, 63, 64], "learn": [6, 14, 63], "model": [6, 13, 14, 16, 20, 22, 23, 24, 27, 48, 57, 59, 62, 63, 64, 68, 74, 75], "trade": [6, 57, 59, 60, 61, 65, 74], "off": [6, 21, 23, 27, 35, 38, 48, 59, 60, 61, 74, 75], "curv": [6, 13, 23, 59, 61, 74], "raw": [6, 8, 17], "primit": 6, "implicitli": [6, 27, 71], "cast": [6, 27, 53, 72], "col": [6, 35, 38], "encapsul": 7, "report": [7, 16, 27, 63, 75], "wa": [7, 8, 9, 13, 26, 31, 38, 47, 55, 58, 63, 64, 65, 68, 74, 75], "infeas": [7, 9, 21, 30, 55, 68, 73, 75], "unbound": [7, 9, 68, 73, 75], "statu": [7, 8, 9, 18, 21, 23, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 48, 55, 68, 74, 75], "immut": [7, 74], "yourself": 7, "want": [7, 15, 16, 30, 31, 34, 36, 40, 46, 64, 68, 74, 75], "add": [7, 16, 20, 21, 27, 31, 34, 35, 64, 65, 71, 72, 75], "exist": [7, 8, 16, 64, 71, 75], "instead": [7, 9, 16, 22, 23, 25, 28, 30, 62, 68, 70, 75], "new_constraint": 7, "queri": [7, 55], "statist": [7, 18, 68, 75], "recent": [7, 64, 68, 70, 71], "invoc": [7, 8, 11], "captur": [7, 20, 74, 75], "size_metr": 7, "solver_stat": [7, 68], "save": [7, 68], "modif": [7, 23, 37, 65], "accessor": 7, "backward": [7, 8, 46, 47, 48, 68, 75], "solut": [7, 10, 11, 12, 16, 21, 22, 23, 27, 28, 29, 30, 32, 34, 35, 39, 41, 42, 43, 44, 45, 47, 48, 55, 56, 57, 68, 71, 74, 75], "differenti": [7, 14, 46, 47, 48, 66, 68, 75], "obtain": [7, 10, 12, 13, 16, 27, 32, 35, 41, 43, 45, 55, 58, 60, 65, 68, 70, 71, 72], "word": [7, 60, 68], "calcul": [7, 21, 33, 36, 68], "sensit": [7, 21, 47, 57, 73, 75], "perturb": [7, 27, 46, 68], "integr": [7, 16, 35, 55, 68], "automat": [7, 16, 64, 68, 71, 74, 75], "toolkit": 7, "popul": [7, 9, 46, 68], "It": [7, 9, 13, 16, 25, 27, 35, 42, 49, 55, 56, 58, 60, 62, 63, 68, 69, 70, 72, 74, 75], "requires_grad": [7, 46, 47, 68], "below": [7, 9, 13, 14, 16, 21, 22, 23, 25, 26, 27, 30, 31, 34, 35, 37, 38, 47, 51, 53, 54, 55, 56, 65, 68, 69, 70, 71, 74, 75], "ep": [7, 10, 27, 38, 47, 68], "dx": [7, 28, 68], "dp": [7, 68], "test": [7, 30, 31, 58, 59, 60, 61, 62, 74], "assert_allclos": 7, "easili": [7, 16, 18, 20, 22, 38, 68, 74], "almost": [7, 38], "analyt": [7, 22, 68], "compliant": [7, 9, 12, 54, 68], "chain": [7, 46, 62, 68, 74], "Then": [7, 16, 18, 22, 30, 43, 68], "dz": 7, "chosen": [7, 30, 36, 59, 68], "correspond": [7, 9, 16, 26, 27, 31, 36, 38, 40, 43, 45, 46, 52, 53, 58, 60, 64, 68, 70, 72], "custom": [7, 66, 73], "interpret": [7, 9, 24, 27, 39, 58, 74], "solvererror": [7, 23, 74, 75], "deriv": [7, 21, 26, 28, 29, 32, 35, 36, 37, 47, 65, 68, 75], "tell": [7, 16, 68, 74], "chang": [7, 8, 16, 18, 21, 27, 41, 43, 45, 46, 47, 65, 68, 73], "delta": [7, 21, 30, 35, 37, 46, 47, 50, 55, 68], "unspecifi": [7, 11, 68], "compat": [7, 8, 16, 36, 68], "2e": [7, 25, 28, 29, 35, 47, 68], "get_problem_data": [7, 68], "gp": [7, 30, 46, 47, 48, 49, 50, 51, 52, 53, 66, 68, 70], "enforce_dpp": [7, 68], "ignore_dpp": [7, 68], "verbos": [7, 8, 25, 27, 28, 29, 31, 34, 35, 38, 48, 55, 68, 71, 75], "canon_backend": [7, 10, 12, 68], "solver_opt": [7, 8], "data": [7, 8, 9, 10, 11, 16, 19, 24, 28, 33, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 68, 74], "enclos": [7, 65], "solvingchain": [7, 68], "compil": [7, 8, 65, 68, 75], "target": [7, 8, 11, 13, 16, 20, 21, 24, 68, 75], "dictionari": [7, 10, 12, 27, 68], "were": [7, 14, 34, 58, 68, 75], "howev": [7, 16, 20, 22, 25, 27, 30, 35, 37, 49, 64, 65, 68, 72, 75], "intermedi": 7, "further": [7, 67, 68, 75], "interfac": [7, 9, 64, 65, 66, 68], "invok": [7, 8, 16, 68], "solve_via_data": [7, 8, 16, 68], "thin": [7, 68], "around": [7, 16, 22, 27, 68], "extern": [7, 68], "process": [7, 14, 16, 24, 30, 47, 68, 74], "unpack_result": [7, 68], "recov": [7, 9, 16, 25, 27, 34, 35, 38, 58, 64, 68, 75], "inverse_data": [7, 8, 10, 11, 12, 68], "sc": [7, 16, 21, 23, 28, 32, 38, 47, 48, 63, 64, 66, 68, 71, 75], "soln": [7, 68], "unpack": [7, 11, 68, 74], "bypass": [7, 68], "probdata": [7, 68], "cone_dim": [7, 16, 68], "soc": [7, 9, 10, 12, 16, 38, 45, 55, 57, 68], "structur": [7, 8, 9, 16, 20, 57, 68], "depend": [7, 16, 31, 35, 48, 64, 68, 69, 71, 72], "pars": [7, 68], "dpperror": [7, 68], "thrown": [7, 68], "try": [7, 16, 22, 23, 27, 34, 35, 49, 62, 68, 69, 71, 74], "just": [7, 9, 13, 16, 27, 31, 37, 46, 49, 58, 68, 70, 71, 74], "warn": [7, 38, 68, 75], "cpp": [7, 68], "backend": [7, 63, 64, 73, 75], "affect": [7, 10, 12, 68, 71], "select": [7, 9, 27, 31, 37, 38, 60, 61, 68, 72], "output": [7, 8, 9, 12, 16, 18, 25, 39, 47, 48, 70, 71, 72], "pass": [7, 9, 16, 23, 68, 70, 71], "overrid": [7, 16, 68], "lowest": 7, "invers": [7, 8, 11, 36, 51, 53], "invalid": [7, 69], "mild": [7, 68], "subsequ": [7, 8, 46, 65, 68], "much": [7, 9, 16, 22, 23, 31, 68], "faster": [7, 68, 74], "document": [7, 8, 9, 16, 64, 65, 68, 75], "www": [7, 10, 12, 13, 16, 25, 28, 35, 49, 65, 68], "org": [7, 10, 12, 13, 16, 49, 65], "html": [7, 28, 49, 68], "complianc": [7, 10, 12, 13, 16, 65], "is_qp": 7, "classmethod": 7, "register_solv": 7, "func": [7, 72], "keyword": [7, 16, 46, 68, 70, 71], "execut": [7, 9, 32, 65], "eco": [7, 16, 25, 28, 31, 35, 37, 38, 63, 64, 66, 68, 75], "osqp": [7, 27, 35, 48, 63, 64, 66, 68], "hide": [7, 68], "qcp": [7, 54, 55, 56, 68, 71], "quasiconvex": [7, 14, 21, 30, 54, 56, 63, 68, 73, 75], "wide": 7, "stop": [7, 68], "criteria": 7, "strategi": 7, "improv": [7, 8, 16, 22, 31, 35, 36, 58, 60, 65], "qualiti": 7, "There": [7, 30, 34, 49, 57, 59], "satisfactori": 7, "done": [7, 15, 26, 48, 68, 75], "prob": [7, 9, 13, 16, 18, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 55, 61, 63, 68, 69, 74, 75], "abstol": [7, 25, 35, 68], "6": [7, 16, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 47, 48, 53, 55, 56, 64, 68, 74, 75], "max_it": [7, 19, 24, 27, 32, 35, 38, 47, 48, 68], "10000": [7, 32, 47, 48], "mydict": 7, "msk_dpar_intpnt_co_tol_near_rel": 7, "mosek": [7, 16, 66, 68, 75], "mosek_param": [7, 68], "why": [7, 13, 27, 68, 75], "dcperror": [7, 49], "dgperror": 7, "suitabl": [7, 16], "among": 7, "instal": [7, 16, 42, 54, 56, 62, 63, 68, 75], "unanticip": 7, "encount": [7, 16, 62, 68, 75], "updat": [7, 19, 24, 25, 27, 31, 35, 37, 39, 48, 74, 75], "state": [7, 8, 9, 10, 11, 12, 16, 35, 65, 70], "primal": [7, 9, 16, 38, 68], "fail": [7, 16, 18, 21, 23, 28, 33, 62, 68, 71, 74], "shallow": [7, 62], "copi": [7, 10, 12, 13, 16, 23, 27, 35, 39, 65], "reassign": 7, "append": [7, 20, 21, 27, 31, 34, 35, 37, 38, 44, 45, 48, 52, 55, 58, 59, 60, 61, 68, 74], "undefin": [7, 21], "behavior": [7, 68, 75], "suffix": 7, "inaccur": [7, 16, 68], "variou": [7, 22, 47], "metric": [7, 38, 68], "regard": [7, 8, 21, 65], "num_scalar_vari": 7, "num_scalar_data": 7, "appar": 7, "num_scalar_eq_constr": 7, "num_scalar_leq_constr": 7, "max_data_dimens": 7, "longest": 7, "max_big_small_squar": 7, "big": [7, 75], "smaller": [7, 22, 27, 68], "results_dict": 7, "solver_nam": 7, "miscellan": 7, "solve_tim": [7, 55, 68], "took": [7, 68], "doubl": [7, 16, 17], "setup_tim": [7, 55], "setup": [7, 24, 37, 38, 68], "num_it": [7, 55], "had": [7, 27, 61, 64], "go": [7, 16, 27, 34], "extra_stat": 7, "extra": [7, 16, 62, 64], "typic": [7, 34, 38], "moder": [8, 75], "amount": [8, 16, 20, 39, 41, 47, 68, 75], "effort": [8, 16, 57, 75], "rewrit": [8, 14, 27, 30, 33, 68, 75], "system": [8, 14, 23, 25, 27, 33, 35, 37, 47, 48, 52, 57, 62, 64, 65, 68, 69], "inde": 8, "sure": [8, 16, 17, 68, 74], "flexibl": [8, 9, 20], "capabl": [8, 68], "preserv": [8, 72], "public": [8, 63, 75], "As": [8, 13, 21, 27, 30, 34, 39, 46, 58, 60, 68, 69, 72, 74, 75], "aspect": [8, 27, 34, 50], "notic": [8, 16, 46, 49, 59, 60, 61, 65, 68, 74], "futur": [8, 21, 75], "releas": [8, 63, 64, 75], "contributor": [8, 15, 16, 65], "curiou": 8, "okai": 8, "contact": [8, 16], "direct": [8, 16, 21, 24, 27, 55, 65, 68], "care": [8, 48, 62], "forward": [8, 35, 68], "categori": [8, 75], "terminologi": 8, "classifi": [8, 31, 57, 59, 68], "middl": [8, 23], "back": [8, 16, 24, 75], "simplifi": [8, 27], "wherea": [8, 35, 58], "mode": [8, 47], "breakdown": 8, "complex2r": 8, "invert": [8, 9, 10, 11, 12, 16, 68], "cvxattr2constr": 8, "dgp2dcp": 8, "canonicalize_expr": [8, 9, 10, 11], "evalparam": 8, "flipobject": 8, "dcp2cone": [8, 11], "canonicalize_tre": [8, 9, 10], "qp2symbolicqp": [8, 12], "dualiz": [8, 16, 68, 75], "slack": [8, 16, 68], "exchang": 8, "main": [8, 16, 64, 68], "opt_val": [8, 55], "primal_var": [8, 55], "dual_var": [8, 55], "attr": [8, 55], "miscellen": 8, "propag": [8, 62], "actor": 8, "By": [8, 25, 27, 46, 47, 58, 68, 72], "reduc": [8, 9, 10, 11, 12, 19, 21, 22, 24, 31, 60, 63, 68], "proce": 8, "retriev": [8, 10, 11, 12, 68], "own": [8, 65, 71, 75], "proven": 8, "possibli": [8, 9], "__init__": [8, 16, 20], "inversedata": [8, 10, 11], "emit": 8, "previous": [8, 27, 75], "logic": 8, "singl": [8, 9, 13, 16, 27, 31, 35, 58, 60, 70, 72], "1th": 8, "whehter": 8, "yield": [8, 50, 60], "start": [8, 13, 16, 21, 24, 27, 30, 35, 48, 72, 73, 75], "solving_chain": 8, "prepend": 8, "warm_start": [8, 68], "warm": [8, 27, 35, 48, 73, 75], "enabl": [8, 20, 68, 75], "solver_chain": 8, "necessarili": [8, 61, 65, 68], "best": [9, 30, 37, 68], "piecewis": [9, 12, 28], "closer": [9, 16], "what": [9, 15, 16, 22, 27, 31, 63, 70, 71, 73, 75], "befor": [9, 10, 11, 12, 16, 22, 27, 28, 68, 75], "readi": 9, "disclaim": [9, 10, 11, 12, 65], "quad_obj": [9, 10], "minim": [9, 10, 11, 12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 68, 69, 70, 71, 74], "affine_abov": [9, 10], "path": [9, 10, 16, 30, 34, 52, 59, 61, 64], "recurs": [9, 10], "qp2quad_form": 9, "qp2symbolic_qp": 9, "consist": [9, 12, 13, 16, 22, 24, 31, 34, 35, 63, 65, 68], "qp": [9, 12, 16, 27, 35, 48, 68], "cone2con": 9, "affine2direct": 9, "easier": [9, 31, 65, 75], "purpos": [9, 13, 16, 27, 31, 65, 74], "pretend": 9, "paramconeprog": [9, 10], "apply_paramet": [9, 10, 12, 16], "alreadi": [9, 22, 64, 68], "format_constraint": [9, 16], "respons": [9, 23, 26, 65], "thing": [9, 27, 74], "k_dir": 9, "sever": [9, 16, 31, 51, 53, 68, 70, 75], "accord": [9, 21, 64, 68], "elementari": [9, 16], "appear": [9, 14, 16, 31, 62, 64, 65, 68], "necessari": [9, 16, 46, 64], "strong": 9, "dualiti": [9, 13, 27], "hold": [9, 13, 31, 37, 41, 43, 45, 49, 65, 68, 69, 70, 75], "feasibl": [9, 16, 21, 30, 31, 37, 45, 55, 68], "written": [9, 18, 26, 27, 64, 65, 68, 69, 72], "agnost": 9, "correct": [9, 31, 68, 69], "consider": [9, 16, 46, 47], "static": [9, 12], "inv_data": 9, "trivial": [9, 16, 35, 41, 43, 68], "enum": 9, "free": [9, 38, 55, 62, 65, 68], "fr": 9, "dual_exp": 9, "de": [9, 26], "subject": [9, 10, 12, 18, 19, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 65, 68], "belong": [9, 16], "under": [9, 10, 12, 13, 16, 23, 30, 46, 47, 65, 68, 69, 70, 71], "lift": [9, 11, 55], "constitu": 9, "impli": [9, 10, 12, 13, 16, 59, 65, 68], "py": [9, 16, 27, 68], "expcon": [9, 16], "aff": 9, "dir": [9, 16], "k_aff": 9, "built": [9, 62, 63, 66, 68, 72], "forth": [9, 16], "ad": [9, 16, 23, 31, 39, 40, 60, 62, 63, 68, 69, 75], "yet": [9, 75], "intend": [9, 68], "lead": [9, 60], "bool_idx": 9, "int_idx": 9, "orthant": 9, "remov": [9, 27, 34, 75], "copyright": [10, 12, 13, 16, 65], "2013": [10, 12, 13, 31], "steven": [10, 12, 13, 14, 62, 63, 65], "licens": [10, 12, 13, 68], "apach": [10, 12, 13, 16, 65, 68], "unless": [10, 12, 13, 16, 65, 74], "law": [10, 12, 13, 16, 55, 65], "agre": [10, 12, 13, 16, 65], "AS": [10, 12, 13, 16, 65], "basi": [10, 12, 13, 16, 37, 65, 68, 75], "warranti": [10, 12, 13, 16, 65], "OR": [10, 12, 13, 16, 64, 65, 75], "condit": [10, 12, 13, 16, 22, 30, 49, 60, 65, 68, 69, 70, 71], "OF": [10, 12, 13, 16, 65], "kind": [10, 12, 13, 16, 65], "languag": [10, 12, 13, 14, 16, 62, 63, 65, 66, 74], "govern": [10, 12, 13, 16, 65], "limit": [10, 12, 13, 16, 20, 21, 27, 28, 34, 47, 50, 65, 68, 71, 75], "conedim": [10, 12, 16], "constr_map": [10, 12, 16], "present": [10, 12, 16, 26, 70, 71, 75], "format": [10, 12, 16, 18, 19, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 65, 68, 75], "eq_dim": 10, "exp_dim": 10, "leq_dim": 10, "p3d_dim": 10, "p3": 10, "psd_dim": 10, "soc_dim": 10, "conematrixstuf": 10, "matrixstuf": [10, 12], "ordered_constraint": 10, "stuf": [10, 31], "stuff": [10, 31], "stuffed_object": [10, 12], "extractor": [10, 12], "var_id_to_col": [10, 12], "param_id_to_col": [10, 12], "paramprob": [10, 12], "px": [10, 12, 18], "cone_constr1": 10, "a_1": [10, 12, 44, 49, 70], "b_1": [10, 12, 44], "cone_constrk": 10, "a_i": [10, 12, 16, 21, 25, 26, 34, 40, 41, 45, 49, 62, 70], "b_i": [10, 12, 16, 27, 40, 41, 44, 45, 62], "offset": [10, 12, 16, 48, 61], "apply_param_jac": [10, 12], "delc": 10, "dela": [10, 12], "delb": [10, 12], "active_param": [10, 12], "jacobian": [10, 12, 68], "dparam": [10, 12], "id_to_param_valu": [10, 12], "zero_offset": [10, 12], "keep_zero": [10, 12], "explicit": [10, 12, 16, 68], "is_mixed_integ": [10, 12], "split_adjoint": [10, 12], "del_var": [10, 12], "adjoint": [10, 12, 46, 68], "split_solut": [10, 12], "sltn": [10, 12], "active_var": [10, 12], "split": [10, 12, 24, 26, 27, 30, 31, 35, 38, 48, 68], "individu": [10, 12, 65], "2017": [10, 12, 38, 65], "akshai": [10, 14, 63], "agraw": [10, 14, 63], "robin": [10, 12, 14, 63], "verschueren": [10, 12, 14, 63], "regardless": [11, 68, 70], "wish": [11, 68], "cvx_attr2constr": 11, "x1": [11, 70, 72], "x2": 11, "x3": 11, "monomi": [11, 49, 68, 70], "x_2": [11, 23, 48, 49, 70], "x_3": 11, "posynomi": [11, 47, 49, 70], "dgp_problem": 11, "gp2dcp": 11, "dcp_problem": 11, "eval_param": 11, "replac": [11, 27, 31, 35, 49, 58, 61, 65, 70, 74, 75], "parametererror": 11, "flip_object": 11, "flip": 11, "vice": [11, 22], "versa": [11, 22], "2016": [12, 14, 62], "jaehyun": [12, 63], "park": [12, 63], "paramquadprog": 12, "tx": [12, 22, 34, 40, 41, 43, 45], "equality_constr1": 12, "equality_constrk": 12, "delp": 12, "delq": 12, "qpmatrixstuf": 12, "fill": [12, 57], "quadform": 12, "exclus": [12, 65], "docstr": [12, 17], "beyond": [13, 32, 68, 75], "conform": 13, "fundament": [13, 57, 62], "analysi": [13, 57, 69, 70, 71, 73, 75], "extrem": 13, "fenchel": 13, "auxiliari": [13, 48], "standard_norm": 13, "rand": [13, 22, 25, 27, 29, 32, 35, 36, 42], "formal": [13, 72, 75], "supremum": 13, "sup": [13, 18], "wikipedia": 13, "__call__": 13, "pareto": [13, 62], "moreov": 13, "boundari": [13, 21, 22], "attain": 13, "weighted_sum": 13, "interpol": 13, "targets_and_prior": 13, "prioriti": [13, 16], "off_target": 13, "05": [13, 21, 25, 26, 27, 28, 29, 32, 34, 35, 36, 38, 48, 52, 55, 68], "penalti": [13, 35, 58, 60], "within": [13, 16, 25, 27, 30, 35, 45, 55, 65, 68], "trang": 13, "hard": [13, 25, 27, 31, 34], "err_tol": 13, "tight": [13, 25, 27, 35], "heurist": [13, 27, 36, 68], "partial_optim": 13, "publish": [14, 62], "encourag": [14, 16, 58, 60, 61, 62], "accompani": [14, 70, 71, 75], "jmlr": 14, "mloss": 14, "jcd": 14, "bibtex": [14, 62], "articl": [14, 62], "diamond2016cvxpi": 14, "author": [14, 16, 18, 30, 33, 39, 62, 65], "stephen": [14, 25, 32, 62, 63], "titl": [14, 21, 23, 25, 26, 36, 39, 58, 60, 62, 65, 74], "ython": [14, 62], "embed": [14, 20, 62, 63, 66, 74], "journal": [14, 62], "research": [14, 62, 63], "year": [14, 62, 63], "volum": [14, 57], "83": [14, 50], "agrawal2018rewrit": 14, "decis": [14, 16, 25, 27, 34, 66], "2018": [14, 27, 35], "42": [14, 23], "featur": [14, 16, 21, 31, 40, 59, 60, 61, 62, 63, 73, 75], "develop": [14, 15, 63, 67, 68, 75], "These": [14, 18, 27, 30, 47, 57, 70, 72, 74, 75], "agrawal2019dgp": 14, "letter": 14, "springer": 14, "berlin": 14, "heidelberg": 14, "2019": [14, 48], "961": 14, "976": 14, "agrawal2020dqcp": 14, "2020": 14, "inproceed": 14, "agrawal2019differenti": 14, "layer": [14, 48, 66, 68], "amo": 14, "brandon": 14, "barratt": [14, 48], "shane": [14, 48], "kolter": 14, "zico": 14, "booktitl": 14, "neural": 14, "9558": 14, "9570": 14, "agrawal2020differenti": 14, "arxiv": 14, "archiveprefix": 14, "eprint": 14, "2004": [14, 65], "12553": 14, "primaryclass": 14, "oc": 14, "welcom": [15, 16, 64], "don": [15, 16, 38, 65, 68, 74], "expert": [15, 16, 57], "mail": [15, 62, 65], "join": [15, 63], "question": [15, 16, 51, 62], "track": [15, 16, 57, 65], "progress": [15, 68], "contribut": [15, 20, 63, 64, 65], "discord": [15, 16, 63], "talk": 15, "discuss": [15, 16, 27, 62, 63, 65, 68, 74], "rough": 15, "answer": 16, "stackoverflow": [16, 62], "address": 16, "todo": [16, 21, 36], "typo": 16, "websit": [16, 49, 62, 64], "brows": [16, 63], "tracker": [16, 62, 63], "unassign": 16, "bug": [16, 62, 63, 75], "request": [16, 62, 63, 70, 71], "polish": [16, 27, 35, 48], "librari": [16, 49, 51, 52, 53, 63, 64, 66, 69, 70, 74], "align": [16, 35, 55], "ve": [16, 31, 62, 75], "identifi": [16, 25, 31, 65], "opportun": 16, "next": [16, 27, 32, 34, 46, 47, 48, 56, 59, 61, 68], "conduct": [16, 23], "overal": 16, "guid": [16, 63], "rest": [16, 59, 61], "exhaust": [16, 63], "promin": [16, 65], "roughli": 16, "categor": 16, "medium": [16, 65], "larg": [16, 28, 35, 38, 49, 66, 68], "scope": 16, "focu": 16, "maintain": [16, 22, 35, 62, 63, 75], "quasi": 16, "858": 16, "808": [16, 27], "cosmo": 16, "jl": [16, 66], "1161": 16, "interior": [16, 27, 64, 68], "sdp": [16, 23, 44, 68], "1093": 16, "1419": 16, "post": [16, 31, 39, 62], "citat": [16, 62], "1223": 16, "serial": 16, "532": 16, "1333": 16, "1438": 16, "pretti": 16, "summar": [16, 70], "10x": 16, "memori": 16, "usag": [16, 68], "cvxcore": [16, 68, 75], "especi": [16, 47, 68], "broadcast": [16, 24, 57, 69, 75], "break": [16, 27, 30, 34, 69], "fork": [16, 64], "repositori": [16, 64], "configur": [16, 21, 64, 65], "git": [16, 64], "offici": [16, 64, 68, 75], "repo": [16, 64], "remot": [16, 24], "upstream": 16, "fetch": 16, "master": [16, 24], "official_mast": 16, "command": [16, 17, 64, 68], "pull": [16, 22, 70, 71], "sync": 16, "huge": 16, "merg": 16, "conflict": 16, "never": [16, 68, 71], "switch": [16, 68], "checkout": 16, "resum": 16, "send": [16, 24], "adher": 16, "unittest": 16, "doesn": [16, 31, 68, 69, 75], "introduc": [16, 46, 49, 63, 68, 71, 75], "onc": [16, 21, 55, 68], "member": 16, "team": [16, 27], "themselv": 16, "review": [16, 75], "complet": [16, 36, 44, 55, 57, 68, 74, 75], "trigger": 16, "continu": [16, 27, 31, 58, 64, 68, 75], "platform": [16, 64], "commit": 16, "flake8": 16, "isort": 16, "navig": [16, 64], "abid": 16, "convent": 16, "pre": [16, 25, 28, 29, 35, 68], "pip": [16, 42, 54, 56, 68], "presenc": [16, 27, 35], "insuffici": 16, "live": [16, 22], "directori": [16, 20, 31, 64], "framework": [16, 75], "organ": 16, "basetest": 16, "base_test": 16, "test_": 16, "pytest": [16, 64], "cd": 16, "test_dgp": 16, "testdgp": 16, "test_product": 16, "caus": [16, 22, 27, 65], "suppress": 16, "stdout": 16, "flag": [16, 69, 70, 71], "test_benchmark": 16, "parti": [16, 65], "lifeblood": 16, "grate": 16, "anyon": 16, "willing": 16, "volunt": 16, "warrant": 16, "coordin": [16, 35], "princip": 16, "outlin": 16, "forthcom": 16, "far": 16, "tri": 16, "cover": [16, 27, 34, 67, 68, 75], "essenti": 16, "spectacular": 16, "feedback": [16, 70, 71], "keep": [16, 27, 38, 62], "date": [16, 28, 65], "prompt": [16, 62], "codepath": 16, "conic_solv": [16, 68], "conicsolv": [16, 68], "awesom": 16, "awesomepi": 16, "awesome_conif": 16, "folder": [16, 31], "manag": [16, 64, 65, 75], "interact": [16, 69, 70, 71], "six": 16, "import_solv": [16, 68], "easi": [16, 27, 75], "remain": [16, 22, 27, 59, 61, 64, 65, 75], "stage": [16, 27, 34], "goal": [16, 27, 31, 34, 35, 41, 47, 49, 51, 52, 54, 59, 60, 61], "close": [16, 22, 27, 34, 37, 40, 46, 48, 62, 68, 75], "kept": 16, "short": [16, 63], "ll": [16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 69, 75], "situat": [16, 75], "glpk": [16, 66, 68], "orient": [16, 27, 57], "look": [16, 20, 21, 22, 27, 38, 69], "someth": 16, "gurobi": [16, 66, 68, 75], "nag": [16, 68], "nontrivi": 16, "properli": [16, 31, 60], "moment": 16, "concret": [16, 75], "doteq": 16, "subset": [16, 27, 37, 38, 44], "k_e": 16, "pow": [16, 48, 68], "later": [16, 23, 27, 31, 36], "now": [16, 21, 22, 27, 30, 33, 55, 68, 72, 75], "powcone3d": [16, 68, 75], "exp_cone_ord": 16, "dure": 16, "recoveri": 16, "step": [16, 19, 21, 23, 25, 30, 31, 34, 35, 38, 39, 48, 64, 68, 75], "understand": [16, 68], "correctli": [16, 31, 62, 75], "cone_matrix_stuf": 16, "eq": 16, "equat": [16, 25, 31, 33, 35, 46, 48, 49, 51, 53, 55, 68], "ineq": 16, "suppos": [16, 19, 20, 22, 24, 36, 43, 46], "good": [16, 22, 25, 31, 36, 59, 61, 68], "idea": [16, 27, 48], "deliber": [16, 65], "psd_format_mat": 16, "noth": [16, 65], "behav": [16, 69], "borrow": 16, "ident": [16, 27, 30, 38], "consecut": 16, "p3d": 16, "tripl": 16, "nonlinear": [16, 42, 68], "permut": 16, "earlier": [16, 21, 75], "nativ": [16, 21, 36, 75], "previou": [16, 27, 31, 68, 75], "statement": [16, 65, 71], "avoid": [16, 75], "introduct": [16, 63, 69], "unnecessari": 16, "therefor": [16, 55, 56, 68], "mention": 16, "lagrangian": [16, 19], "broken": 16, "m_1": 16, "m_6": 16, "mathcal": [16, 27, 38, 40, 41, 42, 43, 44, 45, 46, 48, 68], "mu_1": 16, "mu_6": 16, "mu_i": [16, 47], "mu_2": 16, "m_2": 16, "k_i": [16, 24], "m_i": [16, 70, 72], "denot": [16, 18, 27, 30, 31, 40, 44, 47, 48, 49, 51, 68, 70, 71, 72], "remark": [16, 68], "particularli": [16, 68], "comment": [16, 21, 64, 65], "thread": [16, 47, 68], "helper": 16, "util": [16, 33, 68], "isn": 16, "edit": [16, 64, 68], "content": [16, 65], "clear": [16, 27], "test_conic_solv": 16, "overwhelm": 16, "line": [16, 20, 21, 25, 26, 27, 31, 34, 48, 55, 64, 68], "solver_test_help": 16, "standardtestsdp": 16, "staticmethod": 16, "def": [16, 18, 20, 22, 23, 24, 25, 27, 30, 31, 33, 34, 35, 36, 39, 46, 48, 58, 59, 60, 68, 74], "test_sdp_1min": 16, "sth": 16, "sdp_1": 16, "verify_object": 16, "digit": 16, "record": [16, 61, 68], "check_primal_feas": 16, "check_complementar": 16, "check_dual_domain": 16, "standardtestsocp": 16, "test_socp_0": 16, "socp_0": 16, "verify_primal_valu": 16, "test_mi_socp_1": 16, "mi_socp_1": 16, "predefin": 16, "partli": [16, 64], "solvertesthelp": 16, "test_mosek_lp_1": 16, "standardtestlp": 16, "test_lp_1": 16, "basic": [16, 63, 67, 68, 74], "bf": [16, 38, 59, 61, 68, 72], "latex": 17, "With": [17, 18, 22], "backslash": 17, "robert": [18, 30, 33, 39], "gower": [18, 30, 33, 39], "roger": [18, 30, 33, 39], "hill": [18, 30, 33, 39], "sami": [18, 30, 33, 39], "al": [18, 30, 33, 39], "izzi": [18, 30, 33, 39], "timothi": [18, 30, 33, 39], "pollington": [18, 30, 33, 39], "keith": [18, 30, 33, 39], "brigg": [18, 30, 33, 39], "vandenbergh": [18, 23, 30, 33, 36, 37, 39, 50, 52, 62, 63, 68], "exercis": [18, 27, 30, 33, 65], "57": 18, "207": 18, "memoryless": 18, "transit": 18, "probabl": [18, 25, 27, 59, 62], "p_": [18, 33, 52], "x_j": [18, 27, 41, 70], "shannon": 18, "mutual": 18, "sup_x": 18, "y_i": [18, 36, 48, 59, 61, 72], "log_2y_i": 18, "log_2p_": 18, "minimis": [18, 30, 33, 39], "due": [18, 25, 34, 46, 68, 74, 75], "quit": [18, 60], "usr": [18, 30, 33, 39], "bin": [18, 30, 33, 39], "env": [18, 27, 30, 33, 39, 68], "python3": [18, 27, 30, 33, 39], "xlogi": 18, "channel_capac": 18, "sum_x": [18, 39], "\u2119": 18, "\u211d": 18, "log_2": [18, 33], "becom": [18, 20, 21, 34, 36, 37, 49, 75], "c_j": [18, 27, 41], "greater": [18, 47, 64, 68, 71], "nan": [18, 30, 33, 39, 68], "signal": [18, 25, 28, 30, 33, 52], "maximis": [18, 30, 33, 39], "els": [18, 21, 23, 27, 30, 31, 32, 39, 47], "pmatrix": 18, "75": [18, 27, 34], "set_printopt": [18, 30, 33, 39], "stat": [18, 39, 73], "4g": [18, 30, 33, 39], "1887": 18, "mbox": [19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56], "augment": 19, "rho": [19, 24, 27, 35, 47, 48, 68, 74], "2_2": [19, 24, 25, 35], "g_": [19, 30, 52], "inf_x": 19, "ascent": 19, "lll": [19, 24, 48], "mathop": [19, 24, 38, 72], "rm": [19, 24, 61], "argmin": [19, 21, 24, 48, 59], "script": [19, 63, 70, 71, 75], "seed": [19, 21, 22, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 56, 58, 59, 60, 61, 63, 68, 74], "randn": [19, 22, 25, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 56, 58, 59, 60, 61, 63, 68, 74], "resid": 19, "aug_lagr": 19, "5905035557463005": 19, "572761551213633": 19, "simpler": 20, "tradit": [20, 75], "flow": [20, 55], "edg": [20, 27, 34], "explicitli": [20, 65, 68, 75], "incid": 20, "enter": [20, 27, 46, 68], "leav": [20, 68], "sink": [20, 27], "capac": [20, 39, 57], "frame": 20, "undirect": 20, "connect": [20, 27, 34], "in_nod": 20, "out_nod": 20, "edge_flow": 20, "expos": [20, 68], "graph": [20, 27, 54, 66], "node1": 20, "node2": 20, "accumul": [20, 75], "refram": 20, "electr": 20, "grid": [20, 21, 22, 23, 27, 34], "consum": 20, "station": 20, "energi": 20, "storag": 20, "facil": 20, "loss": [20, 24, 31, 41, 48, 58, 60, 61, 65], "transmiss": 20, "seri": [20, 28, 37, 75], "judson": [21, 23, 26, 28, 29, 32, 36, 37, 63], "wilson": [21, 23, 26, 28, 29, 32, 36, 37, 63], "2014": [21, 23, 26, 28, 29, 32, 36, 37, 68], "adapt": [21, 22, 23, 26, 27, 28, 29, 32, 35, 36, 37, 48, 50, 52], "signific": [21, 36], "cvx": [21, 22, 23, 26, 28, 29, 31, 32, 36, 37, 52, 66], "almir": [21, 26, 37, 52], "mutapc": [21, 26, 37, 52], "2006": [21, 23, 26, 37], "topic": [21, 23, 26, 28, 36, 37], "lectur": [21, 26, 27, 34], "ee364": [21, 26], "synthesi": 21, "lebret": 21, "unit": [21, 34, 36, 41, 55], "obei": 21, "sidelob": 21, "beam": 21, "theta_": 21, "tar": 21, "bw": 21, "occupi": [21, 27, 62], "angular": 21, "theta_b": 21, "theta": [21, 48, 69, 70], "t_": [21, 23], "sb": 21, "foral": [21, 34, 69, 70], "notin": [21, 44], "gain": [21, 30, 52], "sideband": 21, "threshold": [21, 25, 36, 37, 48, 52], "shade": 21, "coeffici": [21, 22, 26, 55, 58, 59, 61], "spec": [21, 26], "refin": [21, 68], "quantiti": [21, 26, 27, 40, 68], "counterpart": 21, "uniform": [21, 27], "array_geometri": 21, "2d_random": 21, "1d_uniform_lin": 21, "2d_uniform_lattic": 21, "lambda_wl": 21, "wavelength": 21, "theta_tar": 21, "min_sidelob": 21, "db": [21, 26, 46], "max_half_beam": 21, "50": [21, 22, 23, 28, 31, 35, 37, 38, 48, 58, 59, 60, 65, 68], "half": 21, "randomli": [21, 31, 32, 34, 38, 59, 61], "locat": [21, 27, 34, 35, 55], "repeat": [21, 29, 30, 32, 34, 36, 37, 39, 68], "experi": [21, 36, 37], "uniformli": 21, "36": [21, 23, 37], "loc": [21, 22, 26, 37, 39, 58, 59, 60, 61], "inter": 21, "space": [21, 37, 50, 68], "elif": 21, "ie": [21, 49], "360": 21, "co": [21, 22], "180": 21, "sin": 21, "ind_closest": 21, "atar": 21, "halfbeam_bot": 21, "halfbeam_top": 21, "width": [21, 23, 27, 50, 55], "sampl": [21, 23, 26, 36, 48], "angl": [21, 26], "degre": 21, "resolut": 21, "until": [21, 30, 34, 60], "uncertainti": [21, 25], "halfbeam_cur": 21, "ceil": [21, 71], "stopband": 21, "ind": [21, 23, 35], "squeez": [21, 48], "logical_or": 21, "bj": 21, "atar_r": 21, "atar_i": 21, "neg_atar_i": 21, "atar_ri": 21, "as_r": 21, "as_i": 21, "neg_as_i": 21, "as_ri": 21, "as_ri_top": 21, "as_ri_bot": 21, "realones_ri": 21, "w_ri": 21, "as_ri_row": 21, "cvxopt": [21, 23, 28, 29, 36, 37, 38, 62, 66, 68, 75], "degress": 21, "halfbeam": 21, "optimum": [21, 27], "nois": [21, 25, 30, 33, 34, 35, 48, 52, 60], "hens": 21, "26": [21, 23, 32, 35, 36], "6616084212553195": 21, "matplotlib": [21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 48, 54, 55, 58, 59, 60, 61, 68, 74], "pyplot": [21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 48, 54, 55, 58, 59, 60, 61, 68, 74], "plt": [21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 48, 54, 55, 58, 59, 60, 61, 68, 74], "inlin": [21, 22, 23, 26, 28, 32, 36, 37, 38, 39, 48, 55, 58, 59, 60, 61], "ipython": [21, 22, 23, 26, 28, 32, 36, 37, 62], "rc": [21, 23, 26, 28, 30, 32, 36, 37, 68, 74], "usetex": [21, 23, 26, 28, 32, 36, 37, 68, 74], "font": [21, 23, 25, 26, 27, 28, 31, 32, 35, 36, 37, 39, 68, 74], "famili": [21, 23, 26, 28, 32, 36, 37, 66, 68, 74], "serif": [21, 23, 26, 28, 32, 36, 37, 68, 74], "figur": [21, 22, 23, 26, 27, 28, 34, 36, 37, 48, 68, 69, 74], "figsiz": [21, 22, 23, 25, 26, 27, 28, 34, 35, 36, 37, 38, 68, 74], "scatter": [21, 24, 31], "facecolor": 21, "edgecolor": [21, 27], "fontsiz": [21, 23, 36, 37, 58, 59, 60, 61, 68, 74], "tight_layout": [21, 37, 74], "w_im": 21, "a_r": [21, 26], "neg_a_i": 21, "a_ri": 21, "dot": [21, 22, 23, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 58, 60, 61, 72], "ymin": [21, 27, 34], "ymax": [21, 27, 34], "40": [21, 23, 31, 37, 42], "arang": [21, 22, 26, 28, 33, 39], "log10": [21, 26], "xlabel": [21, 22, 23, 26, 28, 32, 37, 39, 48, 58, 59, 60, 61, 68, 74], "ylabel": [21, 22, 23, 26, 28, 32, 37, 39, 48, 59, 68, 74], "mag": 21, "ylim": [21, 23, 26, 37, 39], "polar": 21, "zerodb": 21, "dby": 21, "xlim": [21, 23, 26, 37, 39], "1f": [21, 68], "lobe": 21, "center": [21, 22, 27], "theta_1": 21, "theta_2": 21, "55": [21, 27, 34, 35], "experiment": [22, 75], "measur": [22, 25, 35, 40, 48], "lifespan": 22, "mice": 22, "portion": 22, "durat": 22, "studi": [22, 46, 47], "deal": 22, "likelihood": [22, 25, 59], "estim": [22, 25, 27, 28, 35, 43, 48, 57, 58, 60], "mle": 22, "difficult": [22, 31], "well": [22, 23, 27, 34, 35, 37, 60, 68, 75], "overcom": 22, "challeng": [22, 68], "homework": 22, "101": [22, 23, 47], "cours": [22, 75], "notat": 22, "epsilon": [22, 30, 56], "sigma": [22, 25, 27, 30, 35, 43, 44, 48, 52, 58, 60, 61], "underset": 22, "observ": [22, 35, 58, 60, 68], "fulli": [22, 62], "practic": [22, 60, 75], "200": [22, 25, 27, 38], "c_true": [22, 48], "argsort": 22, "y_order": 22, "x_order": 22, "y_censor": 22, "plot": [22, 23, 25, 27, 31, 32, 34, 35, 39, 48, 54, 55, 58, 59, 60, 61, 68, 74], "plot_fit": 22, "fit_label": 22, "bo": 22, "label": [22, 23, 26, 27, 35, 37, 39, 48, 52, 58, 59, 60, 61, 68], "ro": [22, 34, 35], "legend": [22, 25, 26, 31, 37, 39, 48, 58, 59, 60, 61, 68], "linalg": [22, 23, 27, 34, 36, 45, 68], "lstsq": 22, "c_ol": 22, "rcond": 22, "fit_ol": 22, "systemat": 22, "overestim": 22, "red": [22, 27, 34, 38], "cyan": 22, "blue": [22, 34, 38, 69], "exert": 22, "lot": [22, 27], "leverag": 22, "down": [22, 69, 75], "trendlin": 22, "tractabl": [22, 25], "throw": [22, 62, 74], "awai": [22, 68], "dataset": [22, 40, 48, 60], "accomplish": [22, 68], "c_ols_uncensor": 22, "fit_ols_uncensor": 22, "bad_predict": 22, "color": [22, 27, 48], "orang": [22, 48], "marker": 22, "o": [22, 27, 31, 34, 38, 64, 68, 72], "lw": [22, 39], "vastli": 22, "unbias": 22, "glare": 22, "arrang": 22, "predict": [22, 27, 40, 46, 47, 57, 60, 68], "though": [22, 38, 68], "awar": [22, 64, 68], "x_uncensor": 22, "c_cvx": 22, "fit_cvx": 22, "qualit": [22, 58], "longer": [22, 59, 61, 63, 75], "inconsist": 22, "But": [22, 27, 69], "job": [22, 27, 38, 55], "euclidean": [22, 68, 72], "c_": [22, 23], "compar": [22, 27, 35, 46, 47, 60, 68], "2f": [22, 27], "49": [22, 23], "advent": 22, "robust": [22, 23, 45, 57, 68], "entireti": 22, "lieven": 23, "vanderbergh": 23, "argyri": [23, 32], "zymni": [23, 32], "2005": [23, 25], "michael": 23, "grant": [23, 65], "cosmet": 23, "el": 23, "gamal": 23, "wire": 23, "transistor": 23, "circuit": 23, "topologi": [23, 27], "dissip": 23, "domin": 23, "per": 23, "thu": [23, 27, 31, 33, 35, 37, 39], "segment": [23, 34, 74], "le": [23, 26, 36], "w_": [23, 33, 35, 47], "capacit": 23, "beta_i": [23, 33, 59, 61], "alpha_i": [23, 33, 39], "c_0": 23, "c_1": 23, "x_m": [23, 53], "c_m": 23, "simple_step": 23, "dt": 23, "expm": 23, "bd": 23, "ey": [23, 36, 48, 51, 53], "dimxdim": 23, "rowwis": 23, "columnwis": 23, "twice": 23, "xi": [23, 24, 74], "g0": 23, "c0": 23, "7": [23, 25, 27, 28, 29, 32, 34, 35, 36, 37, 38, 40, 47, 48, 50, 55, 64, 68, 74], "wmax": 23, "cc": 23, "gg": 23, "matlab": [23, 66], "zo13": 23, "zo24": 23, "pn13": 23, "pn24": 23, "driver": 23, "eas": 23, "tradeoff": 23, "npt": 23, "delai": [23, 26, 47], "linspac": [23, 26, 27, 31, 34, 35, 54, 55], "150": 23, "xdelai": 23, "100": [23, 27, 37, 38, 47, 48, 50, 58, 59, 60, 61, 68], "xnpt": 23, "area": [23, 50, 55], "xarea": 23, "revisit": 23, "gather": [23, 24], "tmax": 23, "xt": 23, "produc": [23, 28, 31, 48, 68], "slower": [23, 60, 68], "kkt": [23, 68, 75], "kktsolver": [23, 62, 68], "optimal_inaccur": [23, 32, 74], "chop": 23, "inv": [23, 36], "500": [23, 28, 38], "2000": [23, 25, 68], "indmax": 23, "indmin": 23, "amin": 23, "jmax": 23, "jmin": 23, "tthre": 23, "ginvc": 23, "tdom": 23, "eig": 23, "elmor": 23, "amax": 23, "asarrai": 23, "92": 23, "88": 23, "96": 23, "600": [23, 27, 38], "fastest": 23, "slowest": [23, 58], "isfinit": 23, "52": 23, "04081632653061": 23, "54": 23, "08163265306123": 23, "12244897959184": 23, "58": [23, 38], "16326530612245": 23, "20408163265306": 23, "62": [23, 33], "244897959183675": 23, "64": 23, "28571428571429": 23, "66": [23, 38, 50, 69], "3265306122449": 23, "68": 23, "36734693877551": 23, "70": [23, 31], "40816326530611": 23, "72": 23, "44897959183673": 23, "74": 23, "48979591836735": 23, "76": 23, "53061224489795": 23, "57142857142857": 23, "80": [23, 58, 68], "61224489795919": 23, "82": 23, "65306122448979": 23, "84": 23, "6938775510204": 23, "86": [23, 43], "73469387755102": 23, "77551020408163": 23, "81632653061224": 23, "85714285714286": 23, "94": 23, "89795918367346": 23, "93877551020408": 23, "98": 23, "9795918367347": 23, "0204081632653": 23, "27": [23, 26, 32, 35], "103": 23, "06122448979592": 23, "28": [23, 28, 32, 35, 37], "105": [23, 47], "10204081632654": 23, "29": [23, 32, 35], "107": [23, 47], "14285714285714": 23, "109": 23, "18367346938776": 23, "31": 23, "111": [23, 27, 34], "22448979591837": 23, "32": 23, "113": [23, 47], "26530612244898": 23, "33": [23, 37], "115": 23, "3061224489796": 23, "117": 23, "34693877551021": 23, "35": [23, 27, 34, 55], "119": 23, "38775510204081": 23, "121": 23, "42857142857143": 23, "37": [23, 35], "46938775510205": 23, "38": 23, "125": 23, "51020408163265": 23, "39": [23, 43], "127": 23, "55102040816327": 23, "129": 23, "59183673469389": 23, "41": [23, 35], "131": 23, "6326530612245": 23, "133": [23, 39], "67346938775512": 23, "43": 23, "135": 23, "71428571428572": 23, "44": [23, 35], "137": 23, "75510204081633": 23, "139": 23, "79591836734693": 23, "46": 23, "141": 23, "83673469387756": 23, "47": 23, "143": 23, "87755102040816": 23, "48": [23, 31, 37], "145": [23, 39], "9183673469388": 23, "147": 23, "9591836734694": 23, "65284441": 23, "4391586": 23, "52378143": 23, "47092764": 23, "2363529": 23, "99999993": 23, "85353862": 23, "99999992": 23, "93601078": 23, "56994586": 23, "92325575": 23, "29557654": 23, "80041338": 23, "99999998": 23, "99999997": 23, "41300012": 23, "13553757": 23, "26699524": 23, "67049218": 23, "88916807": 23, "96487539e": 23, "01": [23, 25, 27, 28, 29, 32, 33, 35, 38, 47, 48, 56, 68, 74], "40591789e": 23, "70591442e": 23, "79376843e": 23, "27429285e": 23, "07446433e": 23, "02": [23, 25, 27, 28, 29, 32, 34, 35, 38, 48, 68], "38430105e": 23, "02136471e": 23, "07": [23, 25, 28, 29, 32, 35, 38, 48, 55, 68], "59913722e": 23, "28906472e": 23, "05807467e": 23, "09": [23, 25, 27, 28, 29, 33, 35, 49, 55, 68], "16285450e": 23, "91561390e": 23, "48052913e": 23, "58096913e": 23, "82528741e": 23, "85708568e": 23, "75578696e": 23, "39862772e": 23, "38639181e": 23, "2687881": 23, "04368684": 23, "17122095": 23, "133796": 23, "07360396": 23, "41346231": 23, "08016135": 23, "30642705": 23, "2224136": 23, "1484946": 23, "25755998": 23, "08016077": 23, "11200259": 23, "38352317": 23, "28159768": 23, "13439419": 23, "04368697": 23, "02445701": 23, "24083502": 23, "24534599": 23, "53896782e": 23, "18600578e": 23, "75218556e": 23, "19196383e": 23, "57176577e": 23, "30752726e": 23, "56673760e": 23, "35065528e": 23, "96797753e": 23, "03852376e": 23, "35404466e": 23, "12219313e": 23, "22938358e": 23, "91865186e": 23, "51304362e": 23, "31975762e": 23, "50790152e": 23, "39421076e": 23, "33247519e": 23, "27680128e": 23, "f_i": [24, 49], "fit": [24, 31, 40, 57, 59, 61, 65], "train": [24, 31, 48, 58, 59, 60, 61], "contrast": 24, "global": 24, "admm": 24, "xbar": 24, "prox": 24, "proxim": [24, 68], "_i": 24, "overlin": 24, "subproblem": [24, 71], "worker": 24, "parallel": [24, 55, 58, 74], "averag": [24, 31, 47, 53, 61], "u_i": [24, 33, 45], "multiprocess": [24, 68, 74], "pipe": 24, "f_list": 24, "run_work": 24, "loop": [24, 30], "recv": 24, "proc": 24, "run_process": 24, "termin": [24, 65, 68], "sensor": [25, 35], "samar": 25, "sikandar": 25, "dimitri": 25, "gorinevski": [25, 28], "european": 25, "confer": 25, "cdc": 25, "ecc": 25, "44th": 25, "ieee": 25, "lbrace": [25, 27, 31, 34, 35], "rbrace": [25, 27, 31, 34, 35], "occurr": 25, "signatur": 25, "v_j": 25, "gaussian": [25, 26, 35, 57, 60, 75], "varianc": [25, 43, 60], "guess": [25, 32, 38, 68], "compress": 25, "ell": [25, 47, 59], "nonconvex": [25, 34, 66], "relax": [25, 27, 37, 68], "ml": 25, "nearest": 25, "ratio": [25, 30, 33, 47, 48, 50, 52, 54, 55, 71], "That": [25, 27, 31, 58, 64], "snr": 25, "x_true": [25, 35], "astyp": 25, "line2d": [25, 27, 34, 48, 55], "0x11ae42518": 25, "0x11aee9630": 25, "tau": [25, 34, 35, 38, 68], "const": 25, "x_rml": 25, "x_rnd": 25, "embotech": [25, 35], "gmbh": [25, 35], "zurich": [25, 35, 68], "switzerland": [25, 35], "2012": [25, 35, 38, 68], "pcost": [25, 28, 29, 35, 68], "dcost": [25, 28, 29, 35, 68], "gap": [25, 28, 29, 35, 38, 68], "dre": [25, 28, 29, 35, 68], "mu": [25, 27, 35, 47, 68], "ir": [25, 35, 68], "bt": [25, 35], "343e": 25, "03": [25, 27, 28, 29, 31, 32, 35, 38, 48, 68], "862e": 25, "5e": [25, 28, 29, 35, 48, 68], "04": [25, 27, 28, 29, 32, 35, 38, 48, 68], "00": [25, 27, 28, 29, 32, 33, 35, 38, 48, 56, 68], "814e": 25, "580e": 25, "8e": [25, 28, 29, 35, 68], "6e": [25, 28, 29, 35, 47], "8500": 25, "079e": 25, "428e": 25, "4e": [25, 28, 29, 35, 68], "7544": 25, "7e": [25, 28, 35, 47, 68], "321e": 25, "030e": 25, "3e": [25, 28, 29, 35, 47, 68], "3122": 25, "074e": 25, "9e": [25, 28, 35, 68], "7839": 25, "121e": 25, "072e": 25, "3859": 25, "898e": 25, "060e": 25, "06": [25, 27, 28, 32, 35, 38, 48, 55, 68], "5780": 25, "778e": 25, "711e": 25, "9890": [25, 35], "307e": 25, "143e": 25, "5528": 25, "607e": 25, "286e": 25, "8303": 25, "741e": 25, "557e": 25, "6242": 25, "834e": 25, "749e": 25, "8043": 25, "888e": 25, "861e": 25, "9175": 25, "909e": 25, "902e": 25, "8198": 25, "914e": 25, "912e": 25, "8581": 25, "916e": 25, "9004": 25, "8174": 25, "8917": 25, "8588": 25, "9309": 25, "8768": 25, "9089": 25, "8362": 25, "feastol": [25, 35, 68], "reltol": [25, 35, 68], "runtim": [25, 35, 68], "538894": 25, "191": 25, "6347201927456": 25, "cpu": [25, 35], "51": 25, "sy": [25, 35, 36, 38, 68], "291": 25, "wall": [25, 27, 35, 50], "false_po": 25, "logical_and": 25, "false_neg": 25, "plotx": 25, "filenam": [25, 35, 68], "rcparam": [25, 27, 31, 35, 39], "fig": [25, 27, 31, 34, 35, 38, 48], "subplot": [25, 31, 34, 35, 36, 38, 74], "sharex": [25, 31, 35], "sharei": [25, 35], "enumer": [25, 27, 31, 34, 35], "set_titl": [25, 35, 38], "set_ylim": 25, "savefig": [25, 35], "bbox_inch": [25, 35], "frequenc": 26, "h_": 26, "judg": [26, 35], "socp": [26, 45, 68], "impuls": 26, "zeroth": 26, "thumb": 26, "chenei": 26, "theori": [26, 27, 39, 65], "book": [26, 27, 62, 63], "hde": 26, "phase": [26, 68], "uncom": 26, "var": [26, 38, 47, 68, 74], "hdes_r": 26, "hdes_i": 26, "chebyshev": 26, "equivel": 26, "successfulli": [26, 74], "4999999999999996": 26, "repons": 26, "stem": [26, 64, 68], "freq": 26, "vari": [27, 35], "tabl": [27, 68, 70, 71], "combinator": 27, "shortest": 27, "dijkstra": 27, "s_algorithm": 27, "ell_1": [27, 58], "ee364b": [27, 34], "l1_ext_slid": 27, "__": 27, "explor": 27, "move": [27, 35, 75], "him": 27, "cycl": 27, "evas": 27, "p_j": [27, 30], "undetect": 27, "detect": [27, 57, 75], "event": [27, 65, 68], "he": 27, "resourc": 27, "Their": 27, "chanc": [27, 75], "amen": 27, "realli": 27, "hopefulli": 27, "won": [27, 31, 68], "confus": [27, 62, 72], "hi": [27, 34], "face": 27, "pick": [27, 34], "star": [27, 34, 40, 41, 42, 43, 45], "remaind": 27, "analyz": [27, 68], "cell": [27, 31, 32, 56], "notebook": [27, 31, 34, 46, 49, 51, 53, 54, 56, 58, 60, 62, 68, 70, 71], "config": [27, 58, 59, 60, 61], "inlinebackend": [27, 58, 59, 60, 61], "figure_format": [27, 58, 59, 60, 61], "svg": [27, 58, 59, 60, 61], "retina": 27, "networkx": 27, "nx": 27, "formgraph": 27, "eta": [27, 46], "dummynod": 27, "perterb": 27, "insid": [27, 33, 34], "pos2": 27, "dummi": 27, "exit": 27, "random_geometric_graph": 27, "cross": [27, 65], "intersect": [27, 34], "remove_edg": 27, "digraph": 27, "add_edg": 27, "showpath": 27, "edgeprob": 27, "visiblenod": 27, "gnode": 27, "rnode": 27, "edgeprobd": 27, "hidden": 27, "green": [27, 34, 38], "black": [27, 38], "add_subplot": [27, 34], "number_of_nod": 27, "draw": 27, "regular": [27, 28], "draw_networkx_nod": 27, "nodelist": 27, "node_color": 27, "node_s": 27, "zip": [27, 31, 51], "color2": 27, "mess": 27, "edge2ind": 27, "ind2edg": 27, "displai": [27, 37, 38, 65, 68], "visibleedg": 27, "edgelist": 27, "isinst": 27, "number_of_edg": 27, "transpar": 27, "draw_networkx_edg": 27, "edge_color": 27, "edge_cmap": 27, "cm": [27, 38], "rdylgn": 27, "arrow": 27, "edge_vmin": 27, "edge_vmax": 27, "visibl": [27, 38], "visiblepath": 27, "path_pair": 27, "path_color": 27, "colorbar": 27, "optpath": 27, "bring": [27, 75], "pair": [27, 31, 48, 52, 68], "shortest_path": 27, "astar_path": 27, "foo": 27, "zeros_lik": 27, "p1": [27, 34, 72], "p2": [27, 34], "xmin": [27, 34], "xmax": [27, 34], "rectangl": [27, 34, 55], "xy": [27, 34, 46, 53, 70, 71], "sight": [27, 34], "getguardeffect": 27, "guardidx": 27, "evadeprob": 27, "edgecent": 27, "numguard": 27, "edgev": 27, "gid": 27, "get_a": 27, "e2": 27, "thwart": 27, "certain": [27, 30, 55, 68, 75], "firstli": 27, "similarli": [27, 47, 68, 71, 72], "turn": [27, 55], "still": [27, 31, 49, 68], "network": [27, 47], "irregular": 27, "a_j": 27, "corner": 27, "anaconda3": 27, "lib": [27, 64], "site": 27, "nx_pylab": 27, "611": 27, "matplotlibdeprecationwarn": 27, "cb": 27, "is_numlik": 27, "incidence_matrix": 27, "toarrai": 27, "count": [27, 68], "v0": [27, 35, 48], "bartolomeo": [27, 35, 48, 63], "stellato": [27, 35, 48, 63], "goran": [27, 35, 48], "banjac": [27, 35, 48], "univers": [27, 35, 38, 48, 68], "oxford": [27, 35, 48], "354": 27, "nnz": [27, 35, 37, 38, 48, 68], "1416": 27, "qdldl": [27, 35, 48], "eps_ab": [27, 35, 48, 68], "0e": [27, 35, 48, 68], "eps_rel": [27, 35, 48, 68], "eps_prim_inf": [27, 35, 48], "eps_dual_inf": [27, 35, 48], "00e": [27, 35, 38, 48, 68], "4000": [27, 35], "check_termin": [27, 35, 48], "scaled_termin": [27, 35, 48], "pri": [27, 35, 38, 48, 68], "dua": [27, 35, 38, 48, 68], "9458e": 27, "97e": [27, 38, 47], "10e": [27, 38], "0606e": 27, "47e": [27, 38], "64e": [27, 47, 48, 68], "35e": [27, 38, 47], "unsuccess": 27, "0606": 27, "15e": [27, 38], "09e": [27, 38, 47], "flatnonzero": 27, "3f": 27, "341943e": 27, "634": 27, "theoret": 27, "343747e": 27, "budget": [27, 41], "personnel": 27, "problemat": 27, "chapter": 27, "lambda": [27, 28, 41, 43, 47, 48, 58, 59, 60, 61, 71], "r_j": 27, "yearli": 27, "naiv": 27, "against": [27, 30, 65, 75], "spend": [27, 40], "br": 27, "nu": 27, "454": 27, "1240": 27, "2478": 27, "3084e": 27, "54e": [27, 38], "59e": [27, 38, 47], "2269e": 27, "28e": [27, 35], "58e": [27, 38, 47], "06e": [27, 48], "2692": 27, "05e": 27, "131035e": 27, "29759913": 27, "87": 27, "576x432": 27, "_subplot": 27, "axessubplot": 27, "0xd19325278": 27, "8977e": 27, "71e": [27, 38, 47], "14e": [27, 35, 38], "0447e": 27, "16e": [27, 38, 47], "89e": 27, "66e": [27, 47], "325": 27, "0607e": 27, "79e": [27, 38], "46e": [27, 38], "95e": [27, 38], "6072": 27, "08e": [27, 38, 47], "37e": [27, 38, 47, 48], "123036e": 27, "again": 27, "553365e": 27, "whom": [27, 65], "put": [27, 31, 39], "bit": [27, 33], "harder": 27, "forc": [27, 35, 36, 37], "evenli": 27, "nearbi": 27, "demonstr": [27, 31, 34, 68], "highlight": 27, "light": 27, "profil": 27, "anywher": [27, 68], "visual": [27, 64, 69], "shown": [27, 69, 74], "65": [27, 34, 55], "rect": [27, 34], "fc": [27, 34], "add_patch": [27, 34], "reweight": 27, "set_size_inch": [27, 31], "448": 27, "1305": 27, "27688": 27, "5225e": 27, "24e": [27, 35, 38, 47, 68], "50e": [27, 38], "8653e": 27, "33e": 27, "96e": [27, 38], "98e": 27, "8653": 27, "13e": 27, "7726e": 27, "23e": [27, 38], "8639e": 27, "36e": [27, 47], "400": [27, 38], "9265e": 27, "92e": [27, 38, 68], "8962e": 27, "74e": [27, 38, 47], "61e": 27, "800": 27, "8931e": 27, "31e": 27, "8566e": 27, "39e": [27, 38, 47], "56e": [27, 47, 48], "1200": 27, "8689e": 27, "1225": 27, "8471e": 27, "94e": [27, 38], "93e": 27, "30e": [27, 38, 48], "4712": 27, "86e": [27, 68], "0xd1b50d438": 27, "path_ind": 27, "213215e": 27, "kwangmoo": 28, "koh": 28, "2007": 28, "kim": [28, 50, 52], "l_1": [28, 30], "l1_trend_filt": 28, "aris": [28, 39, 43, 65, 66], "varieti": [28, 67, 75], "_1": [28, 37, 58, 59, 61, 69, 72, 74], "bmatrix": [28, 35, 46, 51, 53], "l1_tf": 28, "load": [28, 31, 38, 47], "price": 28, "loadtxt": 28, "snp500": 28, "txt": 28, "rb": 28, "delimit": 28, "skiprow": 28, "spdiag": 28, "vlambda": 28, "converg": [28, 30, 32, 37, 68], "did": [28, 32, 37, 68, 75], "0000e": [28, 29, 35, 48], "2350e": 28, "5374e": 28, "9086e": 28, "3346e": 28, "9403e": 28, "4110e": 28, "5979e": 28, "1278e": 28, "4154e": 28, "4522e": 28, "0480e": 28, "0710e": 28, "9603e": 28, "9825e": 28, "0529e": 28, "0542e": 28, "1994e": 28, "2004e": 28, "2689e": 28, "2693e": 28, "3728e": 28, "3729e": 28, "3802e": 28, "3803e": 28, "3965e": 28, "3998e": 28, "3999e": 28, "4011e": 28, "4013e": 28, "4014e": 28, "4017e": 28, "4015e": 28, "4014300716775199": 28, "linewidth": 28, "jo\u00ebll": 29, "skaf": [29, 32, 36], "2008": [29, 36], "tmp": 29, "nthe": [29, 40, 41, 43], "8736e": 29, "0720e": 29, "9687e": 29, "4688e": 29, "5883e": 29, "4595e": 29, "4889e": 29, "4763e": 29, "4816e": 29, "4804e": 29, "4809e": 29, "480901486350394": 29, "43483319": 29, "66111715": 29, "49201039": 29, "36030618": 29, "38416629": 29, "30283658": 29, "41730232": 29, "79107794": 29, "76667302": 29, "38292365": 29, "2479328": 29, "50416987": 29, "68053832": 29, "67163958": 29, "13877259": 29, "5248668": 29, "08418897": 29, "56927148": 29, "50000248": 29, "78291311": 29, "196": 30, "intefer": 30, "plu": [30, 31, 59], "sinr": [30, 52], "transmitt": [30, 39, 52], "transmit": [30, 33], "receiv": [30, 33, 52, 65], "s_i": [30, 52], "ii": [30, 52, 65, 68], "interef": 30, "i_i": 30, "ik": [30, 52], "p_k": [30, 52], "sigma_i": [30, 52], "gamma_i": 30, "partit": [30, 31, 46], "nonoverlap": 30, "k_1": 30, "k_m": 30, "share": [30, 63, 65], "p_l": 30, "k_l": 30, "iii": [30, 65], "rewritten": [30, 33, 45, 68, 75], "bisect": [30, 55, 71], "l_0": 30, "u_0": 30, "alpha_0": 30, "u_1": 30, "alpha_1": 30, "u_n": 30, "l_n": 30, "desir": [30, 36, 62, 74], "maxmin_sinr": 30, "p_max": [30, 52], "p_receiv": 30, "group_max": 30, "\u03c3": 30, "interfer": [30, 52], "num_group": 30, "normalis": 30, "group_norm": 30, "optimis": [30, 33, 39], "1e4": 30, "generalis": 30, "\u03b1": [30, 33, 39], "li": 30, "algortithm": 30, "maxloop": 30, "1e7": 30, "finish": 30, "midpoint": 30, "atleast_1d": 30, "reach": [30, 34, 68], "\u03b5": 30, "sublevel": [30, 71], "satur": 30, "148": 30, "winner": 31, "plai": 31, "json": 31, "datetim": 31, "defaultdict": 31, "playerappear": 31, "__slots__": 31, "teamappear": 31, "score": [31, 59], "gameid": 31, "loser": 31, "season": 31, "get_game_data": 31, "gamestat": 31, "fn": [31, 71], "listdir": 31, "endswith": 31, "hometeamid": 31, "resultset": 31, "rowset": 31, "jteam": 31, "jplayer": 31, "index_map": 31, "relationship": [31, 58, 62], "team2idx": 31, "pid2idx": 31, "split_gam": 31, "disjoint": 31, "games_holdout": 31, "games_t": 31, "games_h": 31, "data_mat": 31, "w_ij": 31, "wh": 31, "lh": 31, "wp": 31, "ah": 31, "ap": 31, "percent_correct": 31, "percentag": [31, 68], "reg_path": 31, "holdout": 31, "playertim": 31, "proport": 31, "percent": [31, 47, 58, 65], "v_t": [31, 35], "v_h": 31, "npartit": 31, "set_ylabel": [31, 35], "set_xlabel": [31, 35], "avg": [31, 38, 68], "tot": [31, 33], "pred": [31, 48], "2010": 31, "lose": [31, 41], "w_i": [31, 33, 34, 37, 47], "l_i": 31, "f_w": 31, "beat": 31, "classif": 31, "homogen": 31, "invari": 31, "tild": [31, 44, 49], "f_": 31, "motiv": 31, "prevent": [31, 68], "1230": 31, "000000": [31, 55], "582656": 31, "786295": 31, "682927": 31, "rank": [31, 57], "littl": 31, "suggest": [31, 41, 43, 45, 59, 61], "joell": [32, 36], "yx": 32, "_f": 32, "y_init": 32, "iter_num": 32, "At": [32, 34, 68, 70, 71, 75], "NOT": 32, "odd": 32, "eg": 32, "766300564135502": 32, "5840356930600721": 32, "3356679970549085": 32, "18670276027770083": 32, "12819921698143966": 32, "09295501592922492": 32, "06766021043574907": 32, "04958204907945361": 32, "03897402158866238": 32, "02979328283505179": 32, "022938564327729952": 32, "021943924920767337": 32, "01810297853945281": 32, "014551161988556204": 32, "014039687334395924": 32, "009354606824469416": 32, "008643141637584189": 32, "007278100007476402": 32, "008486679700021057": 32, "008827511916396866": 32, "008396764193205366": 32, "005265185332845983": 32, "006931929503816392": 32, "007356156596477946": 32, "0039053948996930054": 32, "003989885269615319": 32, "002920361405226024": 32, "007779246694466739": 32, "007339011292898449": 32, "005008539285258121": 32, "323426": 32, "11061189": 32, "69137835": 32, "20020115": 32, "13216889": 32, "5980743": 32, "64965406": 32, "340611": 32, "69871738": 32, "78278448": 32, "73721109": 32, "40464204": 32, "90898877": 32, "60774132": 32, "53717253": 32, "62647405": 32, "76242265": 32, "41151492": 32, "8048194": 32, "20313124": 32, "4071438": 32, "10269406": 32, "75323063": 32, "18928983": 32, "23428169": 32, "60364688": 32, "63792853": 32, "40855006": 32, "57257432": 32, "17227344": 32, "3905141": 32, "33367163": 32, "07723947": 32, "67735654": 32, "33039096": 32, "42003169": 32, "22641711": 32, "21470465": 32, "47350799": 32, "84931787": 32, "42153652": 32, "13598552": 32, "00816457": 32, "11463462": 32, "17914429": 32, "69942578": 32, "90353699": 32, "45664487": 32, "81023916": 32, "09668578": 32, "60813803": 32, "23214532": 32, "73741086": 32, "3148874": 32, "27589039": 32, "40755835": 32, "31904948": 32, "3469129": 32, "34256526": 32, "76924618": 32, "90607895": 32, "6632877": 32, "25412229": 32, "81696721": 32, "87218892": 32, "50032884": 32, "245879": 32, "25079329": 32, "25017792": 32, "72155621": 32, "5691922": 32, "47359672": 32, "76518996": 32, "66268312": 32, "43746574": 32, "72486628": 32, "97409333": 32, "39239642": 32, "09234807": 32, "16325748": 32, "18723548": 32, "00282008": 32, "41532595": 32, "03836298": 32, "90382914": 32, "38460446": 32, "213473": 32, "23641422": 32, "32784402": 32, "27179726": 32, "75789915": 32, "75119989": 32, "99502166": 32, "65444815": 32, "56073096": 32, "341146": 32, "02555143": 32, "24273668": 32, "01035919": 32, "49427978": 32, "56475742e": 32, "42102372e": 32, "40426641e": 32, "02845111e": 32, "38002833e": 32, "36189366e": 32, "27831861e": 32, "28165827e": 32, "60609403e": 32, "34595403e": 32, "54834858e": 32, "37954560e": 32, "01726231e": 32, "96879041e": 32, "74736667e": 32, "72955779e": 32, "53749151e": 32, "14934798e": 32, "81276972e": 32, "26647247e": 32, "93952558e": 32, "50946872e": 32, "18853643e": 32, "85961318e": 32, "96701863e": 32, "26183347e": 32, "41639937e": 32, "71711699e": 32, "33393633e": 32, "55176129e": 32, "89263105e": 32, "20725095e": 32, "56036398e": 32, "24033457e": 32, "38302416e": 32, "09810836e": 32, "55780427e": 32, "03636918e": 32, "08549910e": 32, "91844947e": 32, "31578328e": 32, "75528332e": 32, "93543168e": 32, "10037225e": 32, "65884776e": 32, "26650967e": 32, "53761974e": 32, "52855369e": 32, "43132832e": 32, "47569255e": 32, "07015116e": 32, "25961964e": 32, "59511553e": 32, "26808607e": 32, "98124301e": 32, "62801718e": 32, "53757673e": 32, "88661317e": 32, "64559055e": 32, "43675625e": 32, "72908811e": 32, "03553498e": 32, "45229205e": 32, "10121868e": 32, "93621271e": 32, "12383803e": 32, "45085312e": 32, "25155585e": 32, "84272390e": 32, "94988511e": 32, "41086863e": 32, "70049131e": 32, "73427259e": 32, "50933223e": 32, "38007474e": 32, "51575697e": 32, "99473425e": 32, "39362252e": 32, "06840502e": 32, "22844259e": 32, "70906925e": 32, "46340550e": 32, "04256418e": 32, "63290841e": 32, "39889787e": 32, "65220031e": 32, "22742919e": 32, "60875098e": 32, "41601146e": 32, "72448408e": 32, "44108256e": 32, "62667224e": 32, "26354249e": 32, "23656013e": 32, "81220987e": 32, "57729003e": 32, "90739234e": 32, "81123997e": 32, "15606388e": 32, "43189790e": 32, "02157264e": 32, "23117764e": 32, "79950842e": 32, "74317402e": 32, "61768644e": 32, "28680186e": 32, "62394448e": 32, "76277321e": 32, "85227596e": 32, "60481823e": 32, "33027425e": 32, "21455250e": 32, "17040399e": 32, "56606195e": 32, "41256203e": 32, "01386736e": 32, "36342995e": 32, "73587325e": 32, "22429324e": 32, "04432888e": 32, "35846517e": 32, "46121871e": 32, "93720663e": 32, "38806481e": 32, "42363429e": 32, "36215640e": 32, "31633730e": 32, "52108618e": 32, "23620331e": 32, "42078084e": 32, "62860853e": 32, "83780003e": 32, "20542830e": 32, "49712163e": 32, "31334078e": 32, "78805144e": 32, "46798183e": 32, "03546983e": 32, "79256197e": 32, "81320754e": 32, "22557723e": 32, "31892711e": 32, "34719938e": 32, "01388769e": 32, "52745774e": 32, "12014739e": 32, "42548761e": 32, "17321003e": 32, "50760383e": 32, "01455643e": 32, "46202248e": 32, "61714835e": 32, "15005890e": 32, "85452470e": 32, "39872783e": 32, "59000367e": 32, "24749082e": 32, "69461803e": 32, "16622183e": 32, "20910778e": 32, "15561552e": 32, "28864368e": 32, "77288000e": 32, "10264071e": 32, "38713553e": 32, "17730381e": 32, "05892579e": 32, "69449092e": 32, "71225020e": 32, "13410340e": 32, "57913703e": 32, "21168134e": 32, "04695033e": 32, "48187018e": 32, "38037868e": 32, "45409129e": 32, "34145488e": 32, "47289692e": 32, "98184939e": 32, "09549810e": 32, "51365483e": 32, "32683206e": 32, "26345269e": 32, "01647636e": 32, "72529426e": 32, "10472383e": 32, "48674297e": 32, "54468161e": 32, "92202367e": 32, "42249517e": 32, "63514531e": 32, "59800828e": 32, "08957766e": 32, "01954949e": 32, "41048252e": 32, "06257705e": 32, "57094132e": 32, "64204427e": 32, "26930797e": 32, "63755883e": 32, "210": 33, "central": 33, "messag": [33, 68], "rate": [33, 39, 47], "r_i": 33, "corrupt": [33, 38, 60], "white": [33, 38], "beta_ip_i": 33, "simplest": 33, "itself": 33, "although": [33, 68, 75], "prohibit": 33, "utilis": 33, "kullback": 33, "leibler": 33, "diverg": 33, "optimal_pow": 33, "a_val": 33, "b_val": 33, "p_tot": 33, "w_tot": 33, "\u03b2": 33, "451": 33, "151e": 33, "708e": 33, "756e": 33, "788e": [33, 68], "000e": [33, 35, 68], "091e": 33, "955e": 33, "908e": [33, 35], "193e": 33, "slide": [34, 67], "tackl": 34, "protect": 34, "guard": 34, "discrit": 34, "coverag": 34, "secur": 34, "least": [34, 35, 42, 47, 48, 57, 58, 60, 63, 65, 68, 70, 71, 74], "alloc": [34, 37, 39, 43, 57], "induc": 34, "incentiv": 34, "toward": [34, 60, 75], "obstruct": 34, "form_path": 34, "pold": 34, "form_grid": 34, "guard_set": 34, "num": [34, 55], "pert": 34, "inrect": 34, "remove_guard": 34, "p_evad": 34, "minval": 34, "get_guard_effect": 34, "evade_func": 34, "guard_effect": 34, "detect_p": 34, "95": [34, 68], "85": [34, 36], "0x105d17cc0": 34, "increasingli": 34, "num_guard": 34, "xsol": 34, "27091799207174": 34, "placement": 34, "yellow": 34, "markers": 34, "0xb1853f1d0": 34, "pinpoint": 35, "high": [35, 64, 68, 71, 75], "noisi": [35, 68], "dynam": 35, "outlier": 35, "x_t": 35, "ax_t": 35, "bw_t": 35, "y_t": 35, "cx_t": 35, "w_t": 35, "drive": [35, 58, 60], "drift": 35, "tune": [35, 36, 58, 60], "algebra": 35, "y_": [35, 48, 72], "ax_": 35, "bw_": 35, "vestigi": 35, "concis": 35, "influenc": 35, "degrad": 35, "phi_": 35, "penal": [35, 60], "linearli": [35, 58, 59], "ball": [35, 45], "harshli": 35, "veloc": 35, "damp": 35, "recurr": 35, "subsect": 35, "acceler": [35, 38, 68], "v_": [35, 61], "plot_stat": 35, "trajectori": 35, "yaxi": 35, "tick_right": 35, "set_label_posit": 35, "plot_posit": 35, "traj": 35, "cloud": 35, "timestep": 35, "delt": 35, "endpoint": 35, "retstep": 35, "x_0": 35, "w_true": 35, "rkf1": 35, "distort": 35, "kf": 35, "rkf2": 35, "8004": 35, "6000": 35, "22000": 35, "1057e": 35, "57e": [35, 38], "27e": 35, "01e": 35, "plsh": [35, 48], "11e": [35, 47], "78e": [35, 38, 68], "success": [35, 48], "11057": 35, "3550": 35, "70e": [35, 38], "354957764113": 35, "598": 35, "rkf3": 35, "923e": 35, "090e": 35, "360e": 35, "8051": 35, "188e": 35, "134e": 35, "4259": 35, "956e": 35, "5830": 35, "881e": 35, "880e": 35, "7189": 35, "572e": 35, "5464": 35, "986e": 35, "985e": 35, "5716": 35, "262e": 35, "6007": 35, "425e": 35, "5871": 35, "601e": 35, "6383": 35, "728e": 35, "727e": 35, "7925": 35, "759e": 35, "5191": 35, "824e": 35, "860e": 35, "6740": 35, "864e": 35, "2982": 35, "876e": 35, "889e": 35, "7740": 35, "899e": 35, "9702": 35, "901e": 35, "6771": 35, "903e": 35, "9383": 35, "905e": 35, "8982": 35, "906e": 35, "9342": 35, "907e": 35, "8457": 35, "9013": 35, "9207": 35, "9009": 35, "9058": 35, "129066": 35, "39077": 35, "76954636933": 35, "3min": 35, "yy": 36, "s_": 36, "y_j": 36, "condition": 36, "y_1": [36, 48], "y_n": 36, "drawn": 36, "prior": 36, "knowledg": [36, 68], "todens": 36, "sparsen": 36, "strue": 36, "y_sampl": 36, "sqrtm": [36, 68], "cov": 36, "empti": [36, 38], "ss": 36, "logdet": 36, "comprehens": 36, "r_hat": 36, "167608186713004": 36, "545759632606043": 36, "989407069609157": 36, "spy": 36, "432x288": 36, "tropp": 37, "preceq": 37, "rao": 37, "kreutz": 37, "delgado": 37, "portfolio": [37, 43, 57], "transact": 37, "lobo": 37, "fazel": 37, "x0": [37, 41, 45], "x_l1": 37, "cardin": 37, "divers": 37, "nnz_l1": 37, "582394099513873": 37, "num_run": 37, "nnzs_log": 37, "x_log": 37, "linestyl": [37, 48], "intens": 38, "orig": 38, "255": 38, "pixel": 38, "reconstruct": [38, 59, 68, 74], "u_": 38, "ell_2": [38, 40, 45, 60], "u_orig": 38, "imread": 38, "loki512": 38, "png": 38, "u_corr": 38, "loki512_corrupt": 38, "imshow": 38, "cmap": 38, "grai": [38, 48], "v2": 38, "brendan": [38, 68], "donoghu": [38, 68], "lin": [38, 68], "indirect": [38, 65, 68], "1554199": 38, "cg": [38, 68], "tol": [38, 68], "5000": [38, 68], "acceleration_lookback": [38, 48, 68], "rho_x": 38, "523265": 38, "1045507": 38, "262144": 38, "783363": 38, "blk": [38, 68], "261121": 38, "kap": [38, 68], "19e": 38, "21e": [38, 47], "51e": [38, 68], "38e": 38, "69e": 38, "82e": [38, 47], "83e": [38, 47, 68], "12e": [38, 68], "20e": 38, "300": 38, "77e": [38, 47, 48], "75e": [38, 48], "65e": 38, "85e": 38, "07e": 38, "81e": 38, "45e": 38, "48e": 38, "700": 38, "49e": 38, "40e": 38, "720": 38, "04e": 38, "55e": [38, 47], "41e": [38, 68], "42e": 38, "dist": [38, 68], "1720e": 38, "7180e": 38, "9097e": 38, "0439e": 38, "2388e": 38, "8544e": 38, "11044": 38, "2661": 38, "2813": 38, "28989542425": 38, "magnifi": 38, "factor": [38, 57, 68], "img_diff": 38, "rgb": 38, "discard": [38, 53], "loki512color": 38, "pointer": 38, "523264": 38, "785408": 38, "1047552": 38, "3630814": 38, "1047553": 38, "2614279": 38, "786432": 38, "1827847": 38, "18e": 38, "02e": [38, 47], "34e": 38, "53e": [38, 47], "32e": 38, "52e": 38, "87e": 38, "60e": [38, 68], "43e": [38, 47], "760": 38, "03e": 38, "99e": [38, 47], "29e": [38, 47], "72e": [38, 48], "8769e": 38, "1246e": 38, "2851e": 38, "0269e": 38, "7005e": 38, "4293e": 38, "11465": 38, "6528": 38, "5971": 38, "652787130613": 38, "field": [38, 65, 68, 74, 75], "rec_arr": 38, "clip": 38, "511": 38, "classic": 39, "channel": [39, 57], "floor": [39, 50, 71], "baselin": 39, "straightforward": [39, 68, 69], "water_fil": 39, "ith": 39, "\u03b1_i": 39, "boldsymbol": 39, "achiev": [39, 56, 64, 74], "bucket": 39, "863": 39, "533": 39, "333": 39, "illustr": [39, 60, 68], "flat": 39, "pylab": 39, "xtick": 39, "seek": 40, "005909828287484": 40, "17492418": 40, "38102551": 40, "34732251": 40, "0173098": 40, "0845784": 40, "08134019": 40, "293119": 40, "27019762": 40, "17493179": 40, "23953449": 40, "64097935": 40, "41633637": 40, "12799688": 40, "1063942": 40, "32158411": 40, "6468679280023557": 40, "profit": 41, "exceed": 41, "star_i": [41, 43], "s0": 41, "lamb0": 41, "220912604467838": 41, "10131657": 41, "16370661": 41, "89711643": 41, "03228613": 41, "60662428": 41, "12655967": 41, "12985839": 41, "88200333": 41, "49089264": 41, "89851057": 41, "61175641": 41, "52817175": 41, "07296862": 41, "3015387": 41, "7612069": 41, "24937038": 41, "06014071": 41, "3224172": 41, "38405435": 41, "miqp": 42, "scip": [42, 68, 75], "pyscipopt": [42, 64], "conda": 42, "forg": [42, 64], "66000322824753": 42, "tpx": 43, "gx": 43, "financ": [43, 63], "stock": 43, "covari": [43, 44, 57], "balanc": [43, 68], "g_i": [43, 49], "h_i": 43, "89141585569918": 43, "68244521": 43, "29769913": 43, "38772183": 43, "79986015": 43, "18270433": 43, "20911897": 43, "50993526": 43, "76683701": 43, "45770675": 43, "78589638": 43, "45538054": 43, "67365045": 43, "79927156": 43, "54115873": 43, "cx": [44, 72], "a_ix": [44, 45], "a_p": 44, "b_p": 44, "sigma_": 44, "654348003008652": 44, "6080571": 44, "59770202": 44, "69575904": 44, "22228637": 44, "24689205": 44, "39679396": 44, "c_i": [45, 48], "d_i": [45, 47], "n_i": [45, 70, 72], "textrm": 45, "soc_constraint": 45, "582695716265503": 45, "40303325": 45, "4194569": 45, "69146656": 45, "26922215": 45, "30825472": 45, "70834842": 45, "19313706": 45, "64153496": 45, "47698583": 45, "66581033": 45, "61662526": 45, "35370661": 45, "02327185": 45, "04253095": 45, "06243588": 45, "49886837": 45, "35283078": 45, "14301082": 45, "16539699": 45, "22027817": 45, "15440264": 45, "06571645": 45, "86510445": 45, "114638": 45, "449291": 45, "37810251": 45, "6144058": 45, "11377797": 45, "xyz": 46, "xz": 46, "yz": 46, "objective_fn": [46, 47, 48, 49, 51, 58, 60, 70, 71], "acord": 46, "onlin": [46, 62, 68], "5612147353889386": 46, "31496200373359456": 46, "36892055859991446": 46, "3_": 46, "saw": [46, 58], "5612": 46, "3150": 46, "3690": 46, "mathsf": 46, "da": 46, "dc": 46, "x_hat": 46, "y_hat": 46, "z_hat": 46, "5f": 46, "55729": 46, "55734": 46, "31783": 46, "37179": 46, "37175": 46, "fairli": 46, "circ": 46, "nabla": [46, 48], "subtract": [46, 48, 68], "dalpha": 46, "27513": 46, "22709": 46, "22942": 46, "servic": [47, 65], "markovian": 47, "queue": 47, "item": [47, 48], "wait": 47, "serv": 47, "packet": 47, "buffer": [47, 68], "latenc": 47, "llcp": [47, 48, 49, 70], "arriv": 47, "poisson": 47, "ell_i": 47, "traffic": 47, "occup": 47, "q_i": 47, "meant": [47, 48, 49, 70], "q_": 47, "mu_": 47, "lam": 47, "w_max": 47, "d_max": 47, "q_max": 47, "lam_min": 47, "mu_max": 47, "lq": 47, "dens": [47, 64, 68], "457106781186705": 47, "32842713": 47, "67157287": 47, "82842712": 47, "17157287": 47, "60355339": 47, "4267767": 47, "takeawai": [47, 68], "highli": 47, "3g": 47, "213": 47, "411": 47, "927": 47, "458": 47, "229": 47, "466": 47, "661": 47, "0727": 47, "716": 47, "00996": 47, "245": 47, "122": 47, "282": 47, "76e": [47, 68], "334": 47, "0611": 47, "195": 47, "197": 47, "mu_valu": 47, "lam_valu": 47, "lam_pr": 47, "mu_pr": 47, "_old_valu": 47, "lam_actu": 47, "mu_actu": 47, "32203282": 47, "77228841": 47, "07166961": 47, "94304296": 47, "99504983": 47, "99504965": 47, "87148458": 47, "10213353": 47, "newcommand": 48, "ascend": 48, "y_2": 48, "y_m": 48, "phi": 48, "hat": [48, 55, 59, 61], "z_i": [48, 59, 61], "i1": 48, "i2": 48, "emphas": [48, 68], "descent": 48, "effici": [48, 68], "taken": [48, 72], "clamp": 48, "slightli": [48, 68], "pytorch": [48, 66, 68], "cvxpylay": [48, 66, 75], "torch": 48, "set_default_tensor_typ": 48, "doubletensor": 48, "n_val": 48, "manual_se": 48, "243": 48, "multivariate_norm": 48, "multivariatenorm": 48, "lognorm": 48, "batch": 48, "a_tru": 48, "generate_data": [48, 58, 60], "num_point": 48, "latent": 48, "input_cp": 48, "train_input": 48, "train_output": 48, "0x12b367cd0": 48, "val_input": 48, "val_output": 48, "0x12da7e410": 48, "log_c": 48, "inputs_np": 48, "log_outputs_np": 48, "log_inputs_np": 48, "cp_pred": 48, "lstq_problem": 48, "1210": 48, "23000": 48, "time_limit": [48, 68], "22e": 48, "0014e": 48, "17e": 48, "68e": 48, "0100": 48, "010014212812318733": 48, "lstsq_val_pr": 48, "inp": 48, "a_param": 48, "c_param": 48, "x_slack": 48, "x_param": 48, "a_tch": 48, "requires_grad_": 48, "c_tch": 48, "train_loss": 48, "val_loss": 48, "lam1": 48, "lam2": 48, "sgd": 48, "lr": 48, "epoch": 48, "solver_arg": 48, "no_grad": 48, "val_pr": 48, "4f": 48, "zero_grad": 48, "0018": 48, "0014": 48, "0017": 48, "0016": 48, "train_preds_tch": 48, "train_pr": 48, "detach": 48, "val_preds_tch": 48, "teal": 48, "subseteq": [49, 70], "said": [49, 68, 70], "log_log_curvatur": [49, 70], "var0": 49, "var1": 49, "param2": 49, "param3": 49, "cx_1": [49, 70], "a_2": [49, 70], "a_n": [49, 70], "monotonicti": 49, "expr_1": [49, 70], "expr_2": [49, 70], "expr_n": [49, 70], "expri": 49, "expr_i": 49, "mark": [49, 51, 65, 69, 70, 72], "colloqui": [49, 70, 71], "f_0": 49, "9999999926890524": 49, "9999999989968756": 49, "9999999529045318": 49, "000000020895385": 49, "1111111199586956": 49, "94877846244994e": 49, "1111111217156332": 49, "11111112214962586": 49, "forget": 49, "hassibi": [50, 52], "height": [50, 55], "depth": [50, 63, 70, 71], "hw": 50, "hd": 50, "wd": 50, "hwd": 50, "flr": 50, "a_wal": 50, "a_flr": 50, "wall_area": 50, "flr_area": 50, "hw_ratio": 50, "dw_ratio": 50, "77": 50, "45966630736292": 50, "7459666715289766": 50, "872983364643079": 50, "581988871583608": 50, "8333333206334043": 50, "6666666801983365": 50, "minu": [51, 53], "omega": [51, 53], "pf": [51, 70], "known_value_indic": 51, "known_valu": 51, "702374203221372": 51, "63616907": 51, "49991744": 51, "37774148": 51, "14221476": 51, "commun": [52, 57, 63, 65, 68], "trasmitt": 52, "trasmit": 52, "p_2": 52, "p_min": 52, "sinr_min": 52, "s_p": 52, "signal_pow": 52, "inverse_sinr": 52, "9615384629119621": 52, "18653846": 52, "16730769": 52, "23461538": 52, "19615385": 52, "17692308": 52, "criterion": 53, "deviat": 53, "mn": [53, 70, 72], "x_iy_j": 53, "x_1x_2": 53, "outer_product": 53, "relative_devi": 53, "7763568394002505e": 53, "84375": 53, "43389831": 53, "82440678": 53, "89999999": 53, "07999999": 53, "89637009": 53, "38893346": 53, "86838428": 53, "11561063": 53, "0569071": 53, "1196602": 53, "henc": [54, 71], "upgrad": [54, 56], "quasiconcav": [54, 71], "quasilinear": [54, 55, 71], "concave_fractional_fn": [54, 71], "4288821220397949": [54, 71], "50000165": 54, "triangl": 55, "wedg": 55, "hyperson": [55, 57], "drag": 55, "hypotenus": 55, "c_d": 55, "c_l": 55, "pressur": 55, "perpendicular": 55, "bodi": 55, "newtonian": 55, "sine": 55, "whet": 55, "c_p": 55, "elsewher": [55, 68], "stream": 55, "simplic": 55, "int_0": 55, "_x": 55, "_y": 55, "chord": 55, "surfac": 55, "plug": 55, "201": 55, "0x7f571d7bfdd8": 55, "payload": 55, "abl": [55, 69, 74, 75], "prepar": [55, 65], "var30766": 55, "var30793": 55, "var30747": 55, "var30779": 55, "param30811": 55, "500000": 55, "30766": 55, "28425055": 55, "30793": 55, "32048066": 55, "30747": 55, "9203698369509382": 55, "30779": 55, "86287821": 55, "30764": 55, "184352986830617e": 55, "30775": 55, "68139086e": 55, "11799720e": 55, "85059567e": 55, "30788": 55, "73308751e": 55, "50722737e": 55, "55220021e": 55, "30802": 55, "04979217e": 55, "43109122e": 55, "68754271e": 55, "30835": 55, "4165742899966837e": 55, "0109e": 55, "4997e": 55, "125000": 55, "156250": 55, "140625": 55, "145508": 55, "146484": 55, "145996": 55, "01067238": 55, "14440604": 55, "9895144829793": 55, "97914383": 55, "2610785752467482e": 55, "37367039e": 55, "73702792e": 55, "37322961e": 55, "50627898e": 55, "58286953e": 55, "50619494e": 55, "77053008e": 55, "45051237e": 55, "20683981e": 55, "948014872712083e": 55, "000114922": 55, "6457e": 55, "145874": 55, "145905": 55, "145889": 55, "145897": 55, "1458979": 55, "854107648695203": 55, "9895238539767502": 55, "14436946495363565": 55, "verifi": [55, 69, 71], "inscrib": 55, "lambda1": 55, "lambda2": 55, "lambda3": 55, "pt1": 55, "pt2": 55, "pt3": 55, "pt4": 55, "04947620645689951": 55, "0390003355948896": 55, "15158793820131744": 55, "0072184732476817896": 55, "mse": [56, 58, 60], "x_star": 56, "And": 56, "00926009328813662": 56, "58366030e": 56, "38434327e": 56, "10714108e": 56, "44811159e": 56, "14622208e": 56, "51283929e": 56, "62931941e": 56, "16358584e": 56, "78132907e": 56, "76314786e": 56, "44712856": 56, "2245077": 56, "40349164": 56, "59357852": 56, "09491185": 56, "16938243": 56, "74055645": 56, "9537006": 56, "26621851": 56, "03261455": 56, "analys": 57, "ipynb": 57, "worst": 57, "risk": [57, 65, 68], "advertis": 57, "paint": 57, "box": [57, 63, 68, 69], "queu": 57, "ridg": [57, 58], "lasso": [57, 74], "svm": [57, 61], "quantil": 57, "cryptocurr": 57, "entrop": 57, "gini": 57, "kurtosi": 57, "consensu": 57, "interdict": 57, "catch": 57, "smuggler": 57, "antenna": 57, "fault": 57, "filter": 57, "censor": 57, "trend": 57, "parad": 57, "rout": 57, "bandwidth": 57, "wireless": 57, "nba": 57, "game": 57, "win": 57, "kalman": 57, "vehicl": 57, "clock": 57, "mesh": 57, "water": 57, "travel": 57, "salesman": 57, "shrinkag": [58, 60], "hyperparamet": [58, 60], "decompos": [58, 60], "loss_fn": [58, 60], "lambd": [58, 59, 60, 61], "densiti": [58, 61], "beta_star": [58, 60], "x_train": [58, 60], "y_train": [58, 60], "x_test": [58, 59, 60, 61], "y_test": [58, 59, 60, 61], "lambd_valu": [58, 60], "logspac": [58, 59, 60, 61, 68, 74], "train_error": [58, 59, 60, 61], "test_error": [58, 59, 60, 61], "beta_valu": [58, 60], "generaliz": 58, "plot_train_test_error": [58, 60], "xscale": [58, 59, 60, 61, 74], "driven": 58, "decai": 58, "shrink": [58, 60, 61], "plot_regularization_path": [58, 60], "num_coeff": [58, 60], "wi": [58, 59, 60, 61], "posterior": 59, "beta_": [59, 61], "sigmoid": 59, "beta_tru": [59, 61], "log_likelihood": 59, "trial": [59, 61, 68], "lambda_v": [59, 61], "beta_v": [59, 61], "versu": [59, 61], "0x108adedd8": 59, "techniqu": 60, "unadorn": 60, "hope": 60, "aid": 60, "interpet": 60, "tend": 60, "vanilla": 60, "ill": [60, 71], "higher": [60, 64, 68], "bia": 60, "world": [60, 63, 74], "pm": 61, "outcom": 61, "hing": 61, "simultan": 61, "__future__": 61, "reg": 61, "extens": [62, 64, 66, 68], "background": [62, 63], "visit": [62, 67, 69], "__version__": 62, "robust_kktsolv": 62, "frontier": 62, "admittedli": 62, "cryptic": 62, "mimic": 62, "deep": 62, "deepcopi": 62, "modul": [62, 63, 68, 75], "leaf": [62, 68], "recreat": 62, "concept": 62, "behind": 62, "url": 62, "cvxpy_pap": 62, "convex optim": 63, "open sourc": 63, "everyon": 63, "lagrang": [63, 68], "tour": 63, "scientist": 63, "engin": 63, "student": [63, 68], "chat": 63, "rilei": 63, "murrai": 63, "philipp": 63, "schiel": 63, "peopl": 63, "eric": 63, "chu": 63, "enzo": 63, "busseti": 63, "aj": 63, "friend": 63, "chri": 63, "dembia": 63, "appreci": 63, "drastic": 63, "cvxpygen": [63, 66], "complementari": 63, "everyth": [63, 75], "linux": 64, "maco": 64, "window": 64, "isol": 64, "virtualenv": 64, "environ": [64, 68], "download": 64, "studio": 64, "tool": [64, 75], "instruct": 64, "xcode": 64, "activ": [64, 68], "virtual": 64, "cvxpy_env": 64, "strongli": [64, 75], "recommend": [64, 65, 68, 75], "fresh": 64, "alongsid": [64, 65], "clone": 64, "newli": 64, "mint": 64, "top": [64, 68], "troubl": 64, "pyproject": 64, "toml": 64, "newer": 64, "cmake": 64, "homebrew": 64, "wheel": 64, "come": [64, 68, 75], "pyarg": 64, "On": 64, "bundl": 64, "latest": 64, "apt": 64, "ubuntu": 64, "bind": [64, 65], "cvxopt_build_glpk": 64, "cvxopt_glpk_lib_dir": 64, "cvxopt_glpk_inc_dir": 64, "procedur": [64, 68], "gurobipi": 64, "fico": [64, 68, 75], "cylp": 64, "prerequisit": 64, "coptpi": 64, "sdpap": 64, "sdpt3glue": 64, "naginterfac": 64, "ortool": [64, 68], "reliabl": 64, "mip": [64, 68], "revis": [64, 65], "simplex": [64, 68], "advantag": [64, 68, 75], "proxsuit": 64, "Be": 64, "intent": 64, "januari": 65, "AND": 65, "FOR": 65, "reproduct": 65, "shall": 65, "licensor": 65, "owner": 65, "entiti": 65, "legal": 65, "act": 65, "contract": 65, "ownership": 65, "fifti": 65, "outstand": 65, "benefici": 65, "translat": 65, "media": 65, "authorship": 65, "attach": 65, "appendix": 65, "editori": 65, "annot": 65, "elabor": 65, "whole": 65, "mere": 65, "intention": 65, "submit": 65, "inclus": 65, "behalf": 65, "electron": 65, "verbal": 65, "sent": 65, "exclud": 65, "conspicu": 65, "Not": [65, 68], "incorpor": [65, 68], "herebi": 65, "perpetu": 65, "worldwid": 65, "charg": 65, "royalti": 65, "irrevoc": 65, "reproduc": 65, "publicli": 65, "sublicens": 65, "patent": 65, "sell": 65, "transfer": 65, "claim": 65, "infring": 65, "alon": [65, 75], "institut": 65, "litig": 65, "counterclaim": 65, "lawsuit": 65, "alleg": 65, "constitut": 65, "contributori": 65, "redistribut": 65, "meet": 65, "recipi": 65, "retain": 65, "trademark": 65, "pertain": 65, "readabl": 65, "wherev": 65, "addendum": 65, "constru": 65, "compli": 65, "submiss": 65, "notwithstand": 65, "herein": 65, "supersed": 65, "agreement": 65, "customari": 65, "merchant": 65, "sole": 65, "liabil": 65, "tort": 65, "neglig": 65, "grossli": 65, "liabl": 65, "damag": 65, "incident": 65, "consequenti": 65, "charact": 65, "inabl": 65, "goodwil": 65, "stoppag": 65, "failur": 65, "malfunct": 65, "commerci": [65, 66, 68], "advis": 65, "fee": 65, "indemn": 65, "oblig": 65, "indemnifi": 65, "defend": 65, "harmless": 65, "incur": 65, "boilerpl": 65, "bracket": 65, "syntax": [65, 70, 72, 75], "descript": 65, "identif": 65, "archiv": 65, "ecosystem": 66, "tensorflow": [66, 68], "dccp": 66, "dmcp": 66, "multi": 66, "ncvx": 66, "osmm": 66, "stochast": 66, "snapvx": 66, "julia": 66, "cvxr": 66, "gpkit": 66, "pico": 66, "friendli": 66, "proxqp": [66, 68, 75], "xpress": [66, 68, 75], "teach": 67, "explain": [67, 69, 70, 71, 74], "home": 67, "overview": [67, 71], "unfamiliar": 68, "47610300459e": 68, "00025244976": 68, "999999986374": 68, "complementar": 68, "tighten": 68, "0d": [68, 75], "variant": 68, "cheap": 68, "decomposit": 68, "symmetri": 68, "benefit": [68, 75], "fine": 68, "grain": 68, "downsid": 68, "postiv": 68, "expr1": [68, 69, 70, 72], "constr1": 68, "expr2": [68, 69, 70, 72], "constr2": 68, "glpk_mi": 68, "cbc": 68, "ecos_bb": [68, 75], "polici": [68, 75], "recur": 68, "quickli": 68, "cplex": 68, "copt": [68, 75], "academia": 68, "faculti": 68, "academ": 68, "registr": 68, "exce": 68, "pure": 68, "is_real": 68, "is_complex": 68, "is_imag": 68, "subexpress": [68, 69], "prob1": [68, 69], "prob2": [68, 69, 74], "requries_grad": 68, "clarabel": [68, 75], "glop": [68, 75], "pdlp": [68, 75], "sdpa": [68, 75], "v1": 68, "powconend": [68, 75], "manual": [68, 75], "scipy_opt": 68, "installed_solv": 68, "debug": 68, "domahidi": 68, "laboratori": 68, "eth": 68, "451e": 68, "125e": 68, "7857": 68, "839e": 68, "9829": 68, "828e": 68, "829e": 68, "9899": 68, "000121": 68, "82842708233": 68, "solverstat": 68, "exploit": 68, "reus": 68, "cach": 68, "use_indirect": 68, "2500": 68, "90e": 68, "9223e": 68, "1168e": 68, "6446e": 68, "8284": 68, "8285": 68, "82837896975": 68, "000": 68, "mu_eq": 68, "mu_in": 68, "abstol_inacc": 68, "reltol_inacc": 68, "feastol_inacc": 68, "time_limit_sec": 68, "parameters_proto": 68, "parameters_pb2": 68, "glopparamet": 68, "protocol": 68, "msk_dpar_basis_tol_x": 68, "msk_ipar_num_thread": 68, "save_fil": 68, "elimin": 68, "old": 68, "msk_ipar_intpnt_solve_form": 68, "msk_solve_du": 68, "ldl": 68, "ldl2": 68, "qr": 68, "chol": 68, "chol2": 68, "presolv": 68, "redund": 68, "held": 68, "maxiter": 68, "epsilonstar": 68, "lambdastar": 68, "0e2": 68, "omegastar": 68, "search": 68, "lowerbound": 68, "0e5": 68, "upperbound": 68, "betastar": 68, "betabar": 68, "gammastar": 68, "epsilondash": 68, "issymmetr": 68, "isdimac": 68, "dimac": 68, "numthread": 68, "cpu_count": 68, "domainmethod": 68, "rangemethod": 68, "decomp": 68, "frvmethod": 68, "pivot": 68, "zeropoint": 68, "lu": 68, "anderson": 68, "precondit": 68, "sytem": 68, "use_quad_obj": 68, "cut": 68, "cgl": 68, "seem": 68, "buggi": 68, "alldifferentcut": 68, "redsplitcut": 68, "landpcut": 68, "preprocesscut": 68, "gomorycut": 68, "mircut": 68, "mircuts2": 68, "twomircut": 68, "residualcapacitycut": 68, "knapsackcut": 68, "flowcovercut": 68, "cliquecut": 68, "liftprojectcut": 68, "oddholecut": 68, "probingcut": 68, "simpleroundingcut": 68, "cutgennam": 68, "integertoler": 68, "deem": 68, "maximumsecond": 68, "maximumnod": 68, "maximumsolut": 68, "evalut": 68, "numberthread": 68, "allowablegap": 68, "allowablefractiongap": 68, "allowablepercentagegap": 68, "cplex_param": 68, "cpx_param_advind": 68, "assist": 68, "cpx_param_datacheck": 68, "datacheck": 68, "cplex_filenam": 68, "sav": 68, "mp": 68, "export": 68, "reoptim": 68, "Its": 68, "nag_param": 68, "lpipm": 68, "scip_param": 68, "ipm": 68, "solvers_pb2": 68, "primaldualhybridgradientparam": 68, "passag": 68, "save_ii": 68, "irreduc": 68, "iiss": 68, "write_mp": 68, "maxtim": 68, "doc": 68, "dms2019": 68, "chapter7": 68, "metadata": 68, "resembl": [68, 75], "identit": 68, "substanti": [68, 74, 75], "walk": [68, 69], "likewis": 68, "forbid": 68, "dsl": 68, "p_sqrt": 68, "quotient": 68, "p_tild": 68, "analogu": 68, "complaint": 68, "gamma_v": [68, 74], "new_problem_tim": 68, "new_problem": 68, "meaning": 68, "1g": 68, "imposs": 68, "introductori": 68, "prototyp": 68, "tailor": 68, "child": 68, "qp_solver": 68, "qpsolver": 68, "osqp_qpif": 68, "custom_osqp": 68, "mip_cap": 68, "oppos": 68, "mi_supported_constraint": 68, "supported_constraint": 68, "scipy_canon_backend": 68, "fast": 68, "arithmet": [69, 70, 73], "69": 69, "ban": 69, "opposit": [69, 74], "conclus": 69, "_n": 69, "certifi": 69, "solvabl": [69, 70, 71], "prob3": [69, 74], "prob4": 69, "ggp": 70, "9999999938309496": 70, "9999999989682057": 70, "999999974180587": 70, "0000000108569758": 70, "is_log_log_const": 70, "expr_": 70, "incr": [70, 72], "min_": [70, 72], "decr": [70, 72], "x11": [70, 72], "x1q": [70, 72], "xp1": [70, 72], "xpq": [70, 72], "n_j": [70, 72], "ddot": [70, 72], "nn": [70, 72], "xk": [70, 72], "thorough": 71, "49999737143004713": 71, "648717724845007": 71, "mistakenli": 71, "is_quasiconvex": 71, "is_quasiconcav": 71, "is_quasilinear": 71, "e_1": 71, "e_2": 71, "e_n": 71, "e_i": 71, "infix": [71, 72, 73], "dist_ratio": 71, "gen_lambda_max": 71, "bx": 71, "condition_numb": 71, "unlucki": 71, "histor": 72, "deprec": [72, 75], "adopt": 72, "dom": 72, "semi": [72, 74], "nuclear": 72, "expr_list": 72, "expr3": 72, "expr_sum": 72, "col_sum": 72, "row_sum": 72, "cdf": [72, 75], "highest": 72, "conserv": 72, "1q": 72, "pq": 72, "triangular": 72, "y_k": 72, "bmod": 72, "lfloor": 72, "rfloor": 72, "_tri": 72, "status": 73, "999999999761": 74, "00000000001": 74, "19961841702e": 74, "00000000006": 74, "unbounded_inaccur": 74, "infeasible_inaccur": 74, "alias": 74, "infeasible_or_unbound": 74, "rare": [74, 75], "14133859146": 74, "11480673e": 74, "30625742e": 74, "34643668e": 74, "24976681e": 74, "79039542e": 74, "repeatedli": [74, 75], "sq_penalti": 74, "l1_penalti": 74, "x_valu": 74, "211": 74, "212": 74, "pool": 74, "get_x": 74, "gamma_valu": 74, "revers": 75, "chronolog": 75, "plan": 75, "finiteset": 75, "relentrconequad": 75, "oprelentrconequad": 75, "piec": 75, "gsoc": 75, "benchmark": 75, "increment": 75, "minor": 75, "past": 75, "rewrot": 75, "openmp": 75, "multithread": 75, "operand": 75, "builtin": 75, "supersc": 75, "incompat": 75, "fall": 75, "runtimeerror": 75, "0xe": 75, "0xd": 75, "dive": 75, "modular": 75, "unifi": 75, "treatment": 75, "semidef": 75, "byond": 75, "gave": 75, "nd": 75, "renam": 75, "mul_elemwis": 75, "max_entri": 75, "sum_entri": 75, "max_elemwis": 75, "min_elemwis": 75}, "objects": {"": [[68, 0, 1, "", "Leaf"], [68, 0, 1, "", "solve"]], "cvxpy": [[7, 1, 1, "", "Maximize"], [7, 1, 1, "", "Minimize"], [7, 1, 1, "", "Problem"], [3, 1, 1, "", "abs"], [2, 0, 1, "", "bmat"], [2, 1, 1, "", "conj"], [2, 1, 1, "", "conv"], [2, 1, 1, "", "cumsum"], [2, 0, 1, "", "diag"], [2, 0, 1, "", "diff"], [3, 1, 1, "", "entr"], [3, 1, 1, "", "exp"], [2, 0, 1, "", "hstack"], [3, 1, 1, "", "huber"], [2, 1, 1, "", "imag"], [3, 0, 1, "", "inv_pos"], [3, 1, 1, "", "kl_div"], [2, 1, 1, "", "kron"], [3, 1, 1, "", "log"], [3, 1, 1, "", "log1p"], [3, 1, 1, "", "log_normcdf"], [3, 1, 1, "", "loggamma"], [3, 1, 1, "", "logistic"], [2, 0, 1, "", "matmul"], [3, 1, 1, "", "maximum"], [3, 0, 1, "", "minimum"], [2, 1, 1, "", "multiply"], [3, 0, 1, "", "neg"], [2, 0, 1, "", "partial_trace"], [2, 0, 1, "", "partial_transpose"], [3, 0, 1, "", "pos"], [3, 1, 1, "", "power"], [2, 0, 1, "", "real"], [3, 1, 1, "", "rel_entr"], [2, 1, 1, "", "reshape"], [2, 1, 1, "", "scalar_product"], [3, 0, 1, "", "scalene"], [3, 0, 1, "", "sqrt"], [3, 0, 1, "", "square"], [2, 0, 1, "", "sum"], [2, 1, 1, "", "trace"], [2, 1, 1, "", "transpose"], [2, 1, 1, "", "upper_tri"], [2, 0, 1, "", "vec"], [4, 1, 1, "", "von_neumann_entr"], [2, 0, 1, "", "vstack"], [3, 1, 1, "", "xexp"]], "cvxpy.Maximize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Minimize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Problem": [[7, 2, 1, "", "atoms"], [7, 2, 1, "", "backward"], [7, 2, 1, "", "constants"], [7, 3, 1, "", "constraints"], [7, 2, 1, "", "derivative"], [7, 2, 1, "", "get_problem_data"], [7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"], [7, 2, 1, "", "is_dpp"], [7, 2, 1, "", "is_dqcp"], [7, 2, 1, "", "is_qp"], [7, 3, 1, "", "objective"], [7, 2, 1, "", "parameters"], [7, 2, 1, "", "register_solve"], [7, 3, 1, "", "size_metrics"], [7, 2, 1, "", "solve"], [7, 3, 1, "", "solver_stats"], [7, 3, 1, "", "status"], [7, 2, 1, "", "unpack_results"], [7, 3, 1, "", "value"], [7, 2, 1, "", "variables"]], "cvxpy.atoms.affine.add_expr": [[2, 1, 1, "", "AddExpression"]], "cvxpy.atoms.affine.binary_operators": [[2, 1, 1, "", "DivExpression"], [2, 1, 1, "", "MulExpression"]], "cvxpy.atoms.affine.index": [[2, 1, 1, "", "index"]], "cvxpy.atoms.affine.promote": [[2, 0, 1, "", "promote"]], "cvxpy.atoms.affine.unary_operators": [[2, 1, 1, "", "NegExpression"]], "cvxpy.atoms.affine.wraps": [[2, 1, 1, "", "psd_wrap"]], "cvxpy.atoms.atom": [[1, 1, 1, "", "Atom"]], "cvxpy.atoms.atom.Atom": [[1, 3, 1, "", "domain"], [1, 3, 1, "", "grad"], [1, 2, 1, "", "is_atom_affine"], [1, 2, 1, "", "is_atom_concave"], [1, 2, 1, "", "is_atom_convex"], [1, 2, 1, "", "is_atom_log_log_affine"], [1, 2, 1, "", "is_atom_log_log_concave"], [1, 2, 1, "", "is_atom_log_log_convex"], [1, 2, 1, "", "is_decr"], [1, 2, 1, "", "is_incr"]], "cvxpy.atoms.cummax": [[4, 1, 1, "", "cummax"]], "cvxpy.atoms.dotsort": [[4, 1, 1, "", "dotsort"]], "cvxpy.atoms.eye_minus_inv": [[4, 1, 1, "", "eye_minus_inv"], [4, 0, 1, "", "resolvent"]], "cvxpy.atoms.geo_mean": [[4, 1, 1, "", "geo_mean"]], "cvxpy.atoms.geo_mean.geo_mean": [[4, 4, 1, "", "approx_error"], [4, 4, 1, "", "w"]], "cvxpy.atoms.gmatmul": [[4, 1, 1, "", "gmatmul"]], "cvxpy.atoms.harmonic_mean": [[4, 0, 1, "", "harmonic_mean"]], "cvxpy.atoms.inv_prod": [[4, 0, 1, "", "inv_prod"]], "cvxpy.atoms.lambda_max": [[4, 1, 1, "", "lambda_max"]], "cvxpy.atoms.lambda_min": [[4, 0, 1, "", "lambda_min"]], "cvxpy.atoms.lambda_sum_largest": [[4, 0, 1, "", "lambda_sum_largest"]], "cvxpy.atoms.lambda_sum_smallest": [[4, 0, 1, "", "lambda_sum_smallest"]], "cvxpy.atoms.log_det": [[4, 1, 1, "", "log_det"]], "cvxpy.atoms.log_sum_exp": [[4, 1, 1, "", "log_sum_exp"]], "cvxpy.atoms.matrix_frac": [[4, 0, 1, "", "matrix_frac"]], "cvxpy.atoms.max": [[4, 1, 1, "", "max"]], "cvxpy.atoms.min": [[4, 0, 1, "", "min"]], "cvxpy.atoms.mixed_norm": [[4, 0, 1, "", "mixed_norm"]], "cvxpy.atoms.norm": [[4, 0, 1, "", "norm"]], "cvxpy.atoms.norm1": [[4, 1, 1, "", "norm1"]], "cvxpy.atoms": [[4, 1, 1, "", "norm_inf"], [4, 1, 1, "", "one_minus_pos"]], "cvxpy.atoms.norm_nuc": [[4, 1, 1, "", "normNuc"]], "cvxpy.atoms.perspective": [[4, 1, 1, "", "perspective"]], "cvxpy.atoms.pf_eigenvalue": [[4, 1, 1, "", "pf_eigenvalue"]], "cvxpy.atoms.pnorm": [[4, 1, 1, "", "Pnorm"], [4, 0, 1, "", "pnorm"]], "cvxpy.atoms.prod": [[4, 0, 1, "", "prod"]], "cvxpy.atoms.quad_form": [[4, 0, 1, "", "quad_form"]], "cvxpy.atoms.quad_over_lin": [[4, 1, 1, "", "quad_over_lin"]], "cvxpy.atoms.sigma_max": [[4, 1, 1, "", "sigma_max"]], "cvxpy.atoms.sum_largest": [[4, 1, 1, "", "sum_largest"]], "cvxpy.atoms.sum_smallest": [[4, 0, 1, "", "sum_smallest"]], "cvxpy.atoms.sum_squares": [[4, 0, 1, "", "sum_squares"]], "cvxpy.atoms.suppfunc": [[4, 1, 1, "", "SuppFuncAtom"]], "cvxpy.atoms.total_variation": [[4, 0, 1, "", "tv"]], "cvxpy.atoms.tr_inv": [[4, 0, 1, "", "tr_inv"]], "cvxpy.constraints.constraint": [[5, 1, 1, "", "Constraint"]], "cvxpy.constraints.constraint.Constraint": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential": [[5, 1, 1, "", "ExpCone"], [5, 1, 1, "", "OpRelEntrConeQuad"], [5, 1, 1, "", "RelEntrConeQuad"]], "cvxpy.constraints.exponential.ExpCone": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential.OpRelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.exponential.RelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.finite_set": [[5, 1, 1, "", "FiniteSet"]], "cvxpy.constraints.finite_set.FiniteSet": [[5, 3, 1, "", "ineq_form"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.nonpos": [[5, 1, 1, "", "NonPos"]], "cvxpy.constraints.nonpos.NonPos": [[5, 3, 1, "", "dual_value"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power": [[5, 1, 1, "", "PowCone3D"], [5, 1, 1, "", "PowConeND"]], "cvxpy.constraints.power.PowCone3D": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power.PowConeND": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.psd": [[5, 1, 1, "", "PSD"]], "cvxpy.constraints.psd.PSD": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.second_order": [[5, 1, 1, "", "SOC"]], "cvxpy.constraints.second_order.SOC": [[5, 4, 1, "", "X"], [5, 4, 1, "", "axis"], [5, 2, 1, "", "is_dcp"], [5, 4, 1, "", "t"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.zero": [[5, 1, 1, "", "Zero"]], "cvxpy.constraints.zero.Zero": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.cumsum": [[2, 4, 1, "", "axis"], [2, 4, 1, "", "expr"]], "cvxpy.expressions.constants": [[6, 1, 1, "", "Constant"]], "cvxpy.expressions.constants.Constant": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.constants.parameter": [[6, 1, 1, "", "Parameter"]], "cvxpy.expressions.constants.parameter.Parameter": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.expression": [[6, 1, 1, "", "Expression"]], "cvxpy.expressions.expression.Expression": [[6, 3, 1, "", "T"], [6, 2, 1, "", "__add__"], [6, 2, 1, "", "__div__"], [6, 2, 1, "", "__eq__"], [6, 2, 1, "", "__ge__"], [6, 2, 1, "", "__le__"], [6, 2, 1, "", "__lshift__"], [6, 2, 1, "", "__matmul__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__pow__"], [6, 2, 1, "", "__radd__"], [6, 2, 1, "", "__rdiv__"], [6, 2, 1, "", "__rlshift__"], [6, 2, 1, "", "__rmatmul__"], [6, 2, 1, "", "__rmul__"], [6, 2, 1, "", "__rrshift__"], [6, 2, 1, "", "__rshift__"], [6, 2, 1, "", "__rsub__"], [6, 2, 1, "", "__rtruediv__"], [6, 2, 1, "", "__sub__"], [6, 2, 1, "", "__truediv__"], [6, 3, 1, "", "curvature"], [6, 3, 1, "", "domain"], [6, 3, 1, "", "grad"], [6, 2, 1, "", "is_affine"], [6, 2, 1, "", "is_concave"], [6, 2, 1, "", "is_constant"], [6, 2, 1, "", "is_convex"], [6, 2, 1, "", "is_dcp"], [6, 2, 1, "", "is_dgp"], [6, 2, 1, "", "is_dpp"], [6, 2, 1, "", "is_dqcp"], [6, 2, 1, "", "is_log_log_affine"], [6, 2, 1, "", "is_log_log_concave"], [6, 2, 1, "", "is_log_log_convex"], [6, 2, 1, "", "is_nonneg"], [6, 2, 1, "", "is_nonpos"], [6, 2, 1, "", "is_zero"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "sign"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.leaf": [[6, 1, 1, "", "Leaf"]], "cvxpy.expressions.leaf.Leaf": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.variable": [[6, 1, 1, "", "Variable"]], "cvxpy.expressions.variable.Variable": [[6, 3, 1, "", "T"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.problems.problem": [[7, 1, 1, "", "SizeMetrics"], [7, 1, 1, "", "SolverStats"]], "cvxpy.problems.problem.SizeMetrics": [[7, 4, 1, "", "max_big_small_squared"], [7, 4, 1, "", "max_data_dimension"], [7, 4, 1, "", "num_scalar_data"], [7, 4, 1, "", "num_scalar_eq_constr"], [7, 4, 1, "", "num_scalar_leq_constr"], [7, 4, 1, "", "num_scalar_variables"]], "cvxpy.problems.problem.SolverStats": [[7, 4, 1, "", "extra_stats"], [7, 4, 1, "", "num_iters"], [7, 4, 1, "", "setup_time"], [7, 4, 1, "", "solve_time"], [7, 4, 1, "", "solver_name"]], "cvxpy.reductions.chain": [[8, 1, 1, "", "Chain"]], "cvxpy.reductions.chain.Chain": [[8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 4, 1, "", "reductions"]], "cvxpy.reductions.complex2real.complex2real": [[11, 1, 1, "", "Complex2Real"]], "cvxpy.reductions.complex2real.complex2real.Complex2Real": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct": [[9, 1, 1, "", "Dualize"], [9, 1, 1, "", "Slacks"]], "cvxpy.reductions.cone2cone.affine2direct.Dualize": [[9, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct.Slacks": [[9, 2, 1, "", "apply"]], "cvxpy.reductions.cvx_attr2constr": [[11, 1, 1, "", "CvxAttr2Constr"]], "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions": [[10, 5, 0, "-", "dcp2cone"], [12, 5, 0, "-", "qp2quad_form"]], "cvxpy.reductions.dcp2cone": [[10, 5, 0, "-", "cone_matrix_stuffing"], [10, 5, 0, "-", "dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, 1, 1, "", "ConeDims"], [10, 1, 1, "", "ConeMatrixStuffing"], [10, 1, 1, "", "ParamConeProg"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims": [[10, 4, 1, "", "EQ_DIM"], [10, 4, 1, "", "EXP_DIM"], [10, 4, 1, "", "LEQ_DIM"], [10, 4, 1, "", "P3D_DIM"], [10, 4, 1, "", "PSD_DIM"], [10, 4, 1, "", "SOC_DIM"], [10, 4, 1, "", "exp"], [10, 4, 1, "", "nonneg"], [10, 4, 1, "", "psd"], [10, 4, 1, "", "soc"], [10, 4, 1, "", "zero"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing": [[10, 4, 1, "", "CONSTRAINTS"], [10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "invert"], [10, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg": [[10, 2, 1, "", "apply_param_jac"], [10, 2, 1, "", "apply_parameters"], [10, 2, 1, "", "is_mixed_integer"], [10, 2, 1, "", "split_adjoint"], [10, 2, 1, "", "split_solution"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, 1, 1, "", "Dcp2Cone"]], "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone": [[10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "canonicalize_expr"], [10, 2, 1, "", "canonicalize_tree"]], "cvxpy.reductions.dgp2dcp.dgp2dcp": [[11, 1, 1, "", "Dgp2Dcp"]], "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "canonicalize_expr"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.eval_params": [[11, 1, 1, "", "EvalParams"]], "cvxpy.reductions.eval_params.EvalParams": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.flip_objective": [[11, 1, 1, "", "FlipObjective"]], "cvxpy.reductions.flip_objective.FlipObjective": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.qp2quad_form": [[12, 5, 0, "-", "qp2symbolic_qp"], [12, 5, 0, "-", "qp_matrix_stuffing"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, 1, 1, "", "Qp2SymbolicQp"], [12, 0, 1, "", "accepts"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, 1, 1, "", "ConeDims"], [12, 1, 1, "", "ParamQuadProg"], [12, 1, 1, "", "QpMatrixStuffing"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims": [[12, 4, 1, "", "exp"], [12, 4, 1, "", "nonpos"], [12, 4, 1, "", "psd"], [12, 4, 1, "", "soc"], [12, 4, 1, "", "zero"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg": [[12, 2, 1, "", "apply_param_jac"], [12, 2, 1, "", "apply_parameters"], [12, 2, 1, "", "is_mixed_integer"], [12, 2, 1, "", "split_adjoint"], [12, 2, 1, "", "split_solution"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "invert"], [12, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.reduction": [[8, 1, 1, "", "Reduction"]], "cvxpy.reductions.reduction.Reduction": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 2, 1, "", "reduce"], [8, 2, 1, "", "retrieve"]], "cvxpy.reductions.solution": [[8, 1, 1, "", "Solution"]], "cvxpy.reductions.solution.Solution": [[8, 4, 1, "", "attr"], [8, 4, 1, "", "dual_vars"], [8, 4, 1, "", "opt_val"], [8, 4, 1, "", "primal_vars"], [8, 4, 1, "", "status"]], "cvxpy.reductions.solvers.solving_chain": [[8, 1, 1, "", "SolvingChain"]], "cvxpy.reductions.solvers.solving_chain.SolvingChain": [[8, 2, 1, "", "prepend"], [8, 4, 1, "", "reductions"], [8, 2, 1, "", "solve"], [8, 2, 1, "", "solve_via_data"], [8, 4, 1, "", "solver"]], "cvxpy.transforms": [[13, 1, 1, "", "indicator"], [13, 2, 1, "", "linearize"], [13, 2, 1, "", "partial_optimize"]], "cvxpy.transforms.scalarize": [[13, 2, 1, "", "log_sum_exp"], [13, 2, 1, "", "max"], [13, 2, 1, "", "targets_and_priorities"], [13, 2, 1, "", "weighted_sum"]], "cvxpy.transforms.suppfunc": [[13, 1, 1, "", "SuppFunc"]], "cvxpy.transforms.suppfunc.SuppFunc": [[13, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:module"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "module", "Python module"]}, "titleterms": {"api": 0, "document": 0, "atom": [1, 2, 3, 4, 49, 70, 71, 72, 75], "represent": 1, "affin": 2, "addexpress": 2, "mulexpress": 2, "divexpress": 2, "bmat": 2, "conj": 2, "conv": 2, "cumsum": 2, "diag": 2, "diff": 2, "hstack": 2, "imag": [2, 38], "index": [2, 72], "kron": 2, "matmul": 2, "multipli": [2, 19], "partial_trac": 2, "partial_transpos": 2, "promot": 2, "psd_wrap": 2, "real": 2, "reshap": 2, "scalar_product": 2, "sum": 2, "trace": 2, "transpos": [2, 70, 72], "negexpress": 2, "upper_tri": 2, "vec": 2, "vstack": 2, "cvxpy": [3, 10, 12, 14, 16, 62, 63, 67, 74, 75], "elementwis": [3, 70, 72], "packag": [3, 10, 12, 23], "ab": 3, "entr": 3, "exp": 3, "huber": 3, "inv_po": 3, "kl_div": 3, "log": [3, 37, 49, 70], "log_normcdf": 3, "log1p": 3, "loggamma": 3, "logist": [3, 59], "maximum": 3, "minimum": [3, 56], "neg": 3, "po": 3, "power": [3, 30, 33, 52, 70, 72], "rel_entr": 3, "scalen": 3, "sqrt": 3, "squar": [3, 40, 56], "xexp": 3, "other": [4, 13, 74], "cummax": 4, "diff_po": 4, "dotsort": 4, "eye_minus_inv": 4, "geo_mean": 4, "gmatmul": 4, "harmonic_mean": 4, "inv_prod": 4, "lambda_max": 4, "lambda_min": 4, "lambda_sum_largest": 4, "lambda_sum_smallest": 4, "log_det": 4, "log_sum_exp": 4, "matrix_frac": 4, "max": [4, 27], "min": [4, 27], "mixed_norm": 4, "norm": [4, 37], "norm1": 4, "norm2": 4, "norm_inf": 4, "normnuc": 4, "one_minus_po": 4, "perspect": 4, "pf_eigenvalu": 4, "pnorm": 4, "prod": 4, "quad_form": 4, "quad_over_lin": 4, "resolv": 4, "sigma_max": 4, "sum_largest": 4, "sum_smallest": 4, "sum_squar": 4, "suppfuncatom": 4, "tr_inv": 4, "tv": 4, "von_neumann_entr": 4, "constraint": [5, 22, 62, 74, 75], "nonpo": 5, "zero": 5, "psd": 5, "soc": 5, "expcon": 5, "relentrconequad": 5, "powcone3d": 5, "powconend": 5, "finiteset": 5, "oprelentrconequad": 5, "express": [6, 62, 68, 69], "leaf": 6, "variabl": [6, 16, 36, 62, 68], "paramet": [6, 74], "constant": 6, "problem": [7, 21, 23, 25, 26, 28, 29, 32, 34, 35, 36, 37, 49, 62, 68, 69, 70, 71, 74], "minim": [7, 21, 32], "maxim": [7, 29, 50], "sizemetr": 7, "solverstat": 7, "reduct": [8, 9, 10, 11, 12, 68, 75], "disclaim": 8, "type": 8, "core": 8, "class": 8, "solut": [8, 9, 25, 37, 46], "chain": 8, "solvingchain": 8, "back": 9, "end": [9, 11], "dcp2cone": [9, 10], "qp2symbolicqp": 9, "dualiz": 9, "usag": 9, "assumpt": 9, "addit": 9, "note": [9, 17], "detail": 9, "requir": 9, "format": 9, "primal_var": 9, "slack": 9, "subpackag": [10, 12], "submodul": [10, 12], "cone_matrix_stuf": 10, "modul": [10, 12], "content": [10, 12], "middl": 11, "complex2r": 11, "cvxattr2constr": 11, "dgp2dcp": 11, "evalparam": 11, "flipobject": 11, "qp2quad_form": 12, "qp2symbolic_qp": 12, "qp_matrix_stuf": 12, "transform": [13, 27, 68, 75], "suppfunc": 13, "scalar": [13, 70, 72], "cite": [14, 62], "how": [15, 62], "help": [15, 62], "contribut": 16, "wishlist": 16, "gener": [16, 21, 22, 23, 29, 32, 36, 37, 48, 58, 60, 75], "principl": 16, "develop": [16, 17], "environ": 16, "checklist": 16, "licens": [16, 65], "code": 16, "style": 16, "write": [16, 58, 60], "unit": 16, "test": [16, 64], "run": [16, 64], "benchmark": 16, "solver": [16, 62, 64, 66, 68, 75], "interfac": [16, 75], "conic": 16, "": [16, 27, 62], "form": [16, 68], "an": [16, 21, 26, 72], "altern": [16, 32], "dual": [16, 68], "regist": 16, "autodoc": 17, "capac": 18, "commun": [18, 30, 39], "channel": [18, 33], "exampl": [18, 25, 27, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 57, 61, 69], "method": [19, 68], "object": [20, 27, 58, 60, 62], "orient": 20, "convex": [20, 62, 69], "optim": [20, 24, 33, 34, 54, 55, 62], "beamwidth": 21, "arrai": 21, "arbitrari": 21, "2": [21, 49, 62, 69, 75], "d": 21, "geometri": 21, "introduct": [21, 23, 26, 28, 29, 32, 36, 37], "specif": 21, "data": [21, 22, 23, 26, 29, 31, 32, 35, 36, 37, 48, 58, 60], "antenna": 21, "select": [21, 58], "solv": [21, 23, 26, 27, 28, 29, 36, 49, 68, 71], "us": [21, 22, 62], "bisect": 21, "algorithm": 21, "result": [21, 23, 26, 28, 32, 36, 37], "plot": [21, 26, 28, 36, 37], "fit": [22, 48, 58, 60], "censor": 22, "setup": [22, 23], "regular": [22, 31, 58, 59, 60, 61], "ol": 22, "uncensor": 22, "take": [22, 62], "account": 22, "conclus": 22, "size": 23, "clock": 23, "mesh": 23, "import": [23, 31], "helper": [23, 27, 31, 35], "function": [23, 27, 31, 35, 49, 58, 60, 62, 70, 72], "displai": 23, "consensu": 24, "fault": 25, "detect": 25, "topic": [25, 27, 34], "refer": [25, 27, 34, 49], "statement": [25, 34, 35], "approach": 25, "recoveri": [25, 35], "evalu": [25, 58, 60, 62], "chebychev": 26, "design": [26, 47, 55], "fir": 26, "filter": [26, 28, 35], "given": 26, "desir": 26, "h": 26, "omega": 26, "initi": 26, "minimax": 26, "todo": [27, 31], "alloc": [27, 33], "interdict": 27, "effort": 27, "catch": 27, "smuggler": 27, "mathemat": 27, "formul": [27, 28, 29, 34], "game": [27, 31], "path": [27, 31, 58, 60], "secur": 27, "guard": 27, "placement": 27, "multipl": [27, 62], "sourc": [27, 64], "destin": 27, "build": 27, "ell_1": [28, 34, 37, 59, 61], "trend": 28, "entropi": 29, "assign": 30, "wireless": 30, "system": [30, 75], "predict": [31, 48], "nba": 31, "win": 31, "raw": 31, "model": [31, 35, 58, 60, 66], "team": 31, "ident": 31, "home": 31, "awai": 31, "player": 31, "minut": 31, "nonneg": [32, 53], "matrix": [32, 51, 53, 62, 70, 72], "factor": [32, 53], "perform": 32, "output": [32, 68], "bandwidth": 33, "gaussian": [33, 36], "parad": 34, "rout": 34, "relax": 34, "iter": [34, 37], "weight": 34, "heurist": [34, 37], "robust": 35, "kalman": 35, "vehicl": 35, "track": 35, "1d": 35, "simul": 35, "spars": [36, 37, 62], "covari": 36, "estim": 36, "sever": 36, "alpha": 36, "valu": [36, 62, 68], "comput": 37, "set": [37, 68], "linear": [37, 41], "inequ": 37, "total": 38, "variat": 38, "paint": 38, "grayscal": 38, "color": 38, "water": 39, "fill": 39, "least": [40, 56], "program": [41, 42, 43, 44, 45, 49, 57, 68, 69, 70, 71], "mix": [42, 68], "integ": [42, 68], "quadrat": [42, 43], "semidefinit": [44, 62, 68], "second": 45, "order": 45, "cone": 45, "deriv": [46, 57], "fundament": [46, 49], "map": 46, "sensit": [46, 68], "analysi": [46, 47, 68], "gradient": [46, 68], "queu": 47, "sensitv": 47, "perturb": 47, "structur": 48, "monomi": 48, "each": 48, "compon": 48, "dgp": [49, 70], "1": [49, 63, 69, 75], "curvatur": [49, 69, 70, 71], "from": [49, 64], "geometr": [49, 57, 68, 70], "ruleset": [49, 68], "3": [49, 63, 75], "4": 49, "next": 49, "step": 49, "volum": 50, "box": 50, "perron": 51, "frobeniu": 51, "complet": 51, "control": 52, "rank": 53, "one": 53, "fraction": 54, "aerospac": 55, "via": 55, "quasiconvex": [55, 57, 71], "length": 56, "basic": 57, "disciplin": [57, 68, 69, 70, 71], "machin": [57, 58, 60, 61], "learn": [57, 58, 60, 62], "financ": 57, "advanc": [57, 68], "applic": 57, "lasso": 58, "regress": [58, 59, 60], "featur": [58, 68], "ridg": 60, "support": [61, 62, 64], "vector": [61, 70, 72, 74], "classifi": 61, "faq": 62, "where": 62, "can": 62, "i": [62, 68, 74], "get": [62, 68], "more": 62, "about": 62, "do": 62, "know": 62, "which": 62, "version": 62, "m": 62, "what": [62, 68, 74], "dcperror": 62, "except": 62, "find": 62, "dcp": [62, 69], "error": 62, "solvererror": 62, "doe": 62, "ar": 62, "differ": 62, "between": 62, "cannot": 62, "truth": 62, "numpi": [62, 75], "scipi": [62, 64], "matric": [62, 68, 74], "constrain": 62, "posit": 62, "creat": 62, "special": 62, "properti": 62, "boolean": 62, "symmetr": 62, "ha": 62, "than": 62, "dimens": 62, "copi": 62, "why": 62, "so": 62, "long": 62, "compil": 62, "my": 62, "work": 62, "welcom": 63, "instal": 64, "pip": 64, "conda": 64, "appl": 64, "m1": 64, "user": [64, 73], "suit": 64, "cvxopt": 64, "glpk": 64, "gurobi": 64, "mosek": 64, "xpress": 64, "cbc": 64, "clp": 64, "cgl": 64, "copt": 64, "cplex": 64, "sdpa": 64, "sdpt3": 64, "nag": 64, "glop": 64, "pdlp": 64, "scip": 64, "clarabel": 64, "proxqp": 64, "without": 64, "default": 64, "relat": 66, "project": 66, "framework": 66, "short": 67, "cours": 67, "attribut": [68, 75], "complex": 68, "arithmet": 68, "option": 68, "choos": 68, "view": 68, "stat": 68, "warm": 68, "start": 68, "standard": 68, "parametr": 68, "dpp": 68, "The": 68, "repeatedli": 68, "custom": 68, "canonic": 68, "backend": 68, "sign": 69, "rule": [69, 70, 71], "infix": [69, 70], "oper": [69, 70, 72], "composit": 71, "dqcp": 71, "slice": 72, "clarif": 72, "along": 72, "axi": 72, "guid": 73, "chang": [74, 75], "infeas": 74, "unbound": 74, "status": 74, "improv": 75, "highlight": 75, "new": 75, "break": 75, "bugfix": 75, "known": 75, "issu": 75, "notabl": 75, "patch": 75, "sinc": 75, "0": 75, "overview": 75, "compat": 75}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Atoms": [[1, "atoms"], [49, "atoms"]], "Representation of atoms": [[1, "representation-of-atoms"]], "Atom": [[1, "atom"]], "Affine Atoms": [[2, "affine-atoms"]], "AddExpression": [[2, "addexpression"]], "MulExpression": [[2, "mulexpression"]], "DivExpression": [[2, "divexpression"]], "bmat": [[2, "bmat"]], "conj": [[2, "conj"]], "conv": [[2, "conv"]], "cumsum": [[2, "cumsum"]], "diag": [[2, "diag"]], "diff": [[2, "diff"]], "hstack": [[2, "hstack"]], "imag": [[2, "imag"]], "index": [[2, "index"]], "kron": [[2, "kron"]], "matmul": [[2, "matmul"]], "multiply": [[2, "multiply"]], "partial_trace": [[2, "partial-trace"]], "partial_transpose": [[2, "partial-transpose"]], "promote": [[2, "promote"]], "psd_wrap": [[2, "psd-wrap"]], "real": [[2, "real"]], "reshape": [[2, "reshape"]], "scalar_product": [[2, "scalar-product"]], "sum": [[2, "sum"]], "trace": [[2, "trace"]], "transpose": [[2, "transpose"]], "NegExpression": [[2, "negexpression"]], "upper_tri": [[2, "upper-tri"]], "vec": [[2, "vec"]], "vstack": [[2, "vstack"]], "cvxpy.atoms.elementwise package": [[3, "cvxpy-atoms-elementwise-package"]], "abs": [[3, "abs"]], "entr": [[3, "entr"]], "exp": [[3, "exp"]], "huber": [[3, "huber"]], "inv_pos": [[3, "inv-pos"]], "kl_div": [[3, "kl-div"]], "log": [[3, "log"]], "log_normcdf": [[3, "log-normcdf"]], "log1p": [[3, "log1p"]], "loggamma": [[3, "loggamma"]], "logistic": [[3, "logistic"]], "maximum": [[3, "maximum"]], "minimum": [[3, "minimum"]], "neg": [[3, "neg"]], "pos": [[3, "pos"]], "power": [[3, "power"]], "rel_entr": [[3, "rel-entr"]], "scalene": [[3, "scalene"]], "sqrt": [[3, "sqrt"]], "square": [[3, "square"]], "xexp": [[3, "xexp"]], "Other Atoms": [[4, "other-atoms"]], "cummax": [[4, "cummax"]], "diff_pos": [[4, "diff-pos"]], "dotsort": [[4, "dotsort"]], "eye_minus_inv": [[4, "id4"]], "geo_mean": [[4, "geo-mean"]], "gmatmul": [[4, "gmatmul"]], "harmonic_mean": [[4, "harmonic-mean"]], "inv_prod": [[4, "inv-prod"]], "lambda_max": [[4, "lambda-max"]], "lambda_min": [[4, "lambda-min"]], "lambda_sum_largest": [[4, "lambda-sum-largest"]], "lambda_sum_smallest": [[4, "lambda-sum-smallest"]], "log_det": [[4, "log-det"]], "log_sum_exp": [[4, "log-sum-exp"]], "matrix_frac": [[4, "matrix-frac"]], "max": [[4, "max"]], "min": [[4, "min"]], "mixed_norm": [[4, "mixed-norm"]], "norm": [[4, "norm"]], "norm1": [[4, "norm1"]], "norm2": [[4, "norm2"]], "norm_inf": [[4, "norm-inf"]], "normNuc": [[4, "normnuc"]], "one_minus_pos": [[4, "one-minus-pos"]], "perspective": [[4, "perspective"]], "pf_eigenvalue": [[4, "pf-eigenvalue"]], "pnorm": [[4, "pnorm"]], "Pnorm": [[4, "id26"]], "prod": [[4, "prod"]], "quad_form": [[4, "quad-form"]], "quad_over_lin": [[4, "quad-over-lin"]], "resolvent": [[4, "resolvent"]], "sigma_max": [[4, "sigma-max"]], "sum_largest": [[4, "sum-largest"]], "sum_smallest": [[4, "sum-smallest"]], "sum_squares": [[4, "sum-squares"]], "SuppFuncAtom": [[4, "suppfuncatom"]], "tr_inv": [[4, "tr-inv"]], "tv": [[4, "tv"]], "von_neumann_entr": [[4, "von-neumann-entr"]], "Constraints": [[5, "constraints"], [74, "constraints"]], "Constraint": [[5, "constraint"]], "NonPos": [[5, "nonpos"]], "Zero": [[5, "zero"]], "PSD": [[5, "psd"]], "SOC": [[5, "soc"]], "ExpCone": [[5, "expcone"]], "RelEntrConeQuad": [[5, "relentrconequad"]], "PowCone3D": [[5, "powcone3d"]], "PowConeND": [[5, "powconend"]], "FiniteSet": [[5, "finiteset"]], "OpRelEntrConeQuad": [[5, "oprelentrconequad"]], "Expressions": [[6, "expressions"], [69, "expressions"]], "Expression": [[6, "expression"]], "Leaf": [[6, "leaf"]], "Variable": [[6, "variable"]], "Parameter": [[6, "parameter"]], "Constant": [[6, "constant"]], "Problems": [[7, "problems"]], "Minimize": [[7, "minimize"]], "Maximize": [[7, "maximize"]], "Problem": [[7, "problem"]], "SizeMetrics": [[7, "sizemetrics"]], "SolverStats": [[7, "solverstats"]], "Reductions": [[8, "reductions"], [68, "reductions"], [75, "reductions"]], "Disclaimer": [[8, "disclaimer"]], "Types of Reductions": [[8, "types-of-reductions"]], "Core classes": [[8, "core-classes"]], "Solution": [[8, "solution"]], "Reduction": [[8, "reduction"]], "Chain": [[8, "chain"]], "SolvingChain": [[8, "solvingchain"]], "Back-End Reductions": [[9, "back-end-reductions"]], "Dcp2Cone": [[9, "dcp2cone"]], "Qp2SymbolicQp": [[9, "qp2symbolicqp"]], "Dualize": [[9, "dualize"]], "Usage": [[9, "usage"]], "Assumptions": [[9, "assumptions"], [9, "id1"]], "Additional notes": [[9, "additional-notes"]], "Details on required formatting of solution.primal_vars": [[9, "details-on-required-formatting-of-solution-primal-vars"]], "Slacks": [[9, "slacks"]], "cvxpy.reductions.dcp2cone package": [[10, "cvxpy-reductions-dcp2cone-package"]], "Subpackages": [[10, "subpackages"], [12, "subpackages"]], "Submodules": [[10, "submodules"], [12, "submodules"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing module": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone module": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "Module contents": [[10, "module-cvxpy.reductions.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"]], "Middle-End Reductions": [[11, "middle-end-reductions"]], "Complex2Real": [[11, "complex2real"]], "CvxAttr2Constr": [[11, "cvxattr2constr"]], "Dgp2Dcp": [[11, "dgp2dcp"]], "EvalParams": [[11, "evalparams"]], "FlipObjective": [[11, "flipobjective"]], "cvxpy.reductions.qp2quad_form package": [[12, "cvxpy-reductions-qp2quad-form-package"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp module": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing module": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "Transforms": [[13, "transforms"], [68, "transforms"], [75, "transforms"]], "SuppFunc": [[13, "suppfunc"]], "Scalarize": [[13, "scalarize"]], "Other": [[13, "other"]], "Citing CVXPY": [[14, "citing-cvxpy"]], "How to Help": [[15, "how-to-help"]], "Contributing": [[16, "contributing"]], "Wishlist": [[16, "wishlist"]], "General principles": [[16, "general-principles"]], "Development environment": [[16, "development-environment"]], "Contribution checklist": [[16, "contribution-checklist"]], "License": [[16, "license"], [65, "license"]], "Code style": [[16, "code-style"]], "Writing unit tests": [[16, "writing-unit-tests"]], "Running unit tests": [[16, "running-unit-tests"]], "Benchmarks": [[16, "benchmarks"]], "Solver interfaces": [[16, "solver-interfaces"], [75, "solver-interfaces"], [75, "id3"]], "Conic solvers": [[16, "conic-solvers"]], "CVXPY\u2019s conic form": [[16, "cvxpy-s-conic-form"]], "An alternative conic form": [[16, "an-alternative-conic-form"]], "Dual variables": [[16, "dual-variables"], [68, "dual-variables"]], "Registering a solver": [[16, "registering-a-solver"]], "Writing tests": [[16, "writing-tests"]], "Developer Notes": [[17, "developer-notes"]], "autodoc": [[17, "autodoc"]], "Capacity of a Communication Channel": [[18, "capacity-of-a-communication-channel"]], "Example": [[18, "example"], [25, "example"], [30, "example"], [31, "example"], [33, "example"], [34, "example"], [39, "example"], [40, "example"], [41, "example"], [42, "example"], [43, "example"], [44, "example"], [45, "example"], [61, "example"]], "Method of multipliers": [[19, "method-of-multipliers"]], "Object Oriented Convex Optimization": [[20, "object-oriented-convex-optimization"]], "Minimize beamwidth of an array with arbitrary 2-D geometry": [[21, "minimize-beamwidth-of-an-array-with-arbitrary-2-d-geometry"]], "Introduction": [[21, "introduction"], [23, "introduction"], [26, "introduction"], [28, "introduction"], [29, "introduction"], [32, "introduction"], [36, "introduction"], [37, "introduction"]], "Problem specification and data": [[21, "problem-specification-and-data"]], "Antenna array selection": [[21, "antenna-array-selection"]], "Data generation": [[21, "data-generation"], [48, "data-generation"]], "Solve using bisection algorithm": [[21, "solve-using-bisection-algorithm"]], "Result plots": [[21, "result-plots"], [26, "result-plots"], [36, "result-plots"], [37, "result-plots"]], "Fitting censored data": [[22, "fitting-censored-data"]], "Setup": [[22, "setup"]], "Data Generation": [[22, "data-generation"]], "Regular OLS": [[22, "regular-ols"]], "OLS using uncensored data": [[22, "ols-using-uncensored-data"]], "Using constraints to take into account of censored data": [[22, "using-constraints-to-take-into-account-of-censored-data"]], "Conclusion": [[22, "conclusion"]], "Sizing of clock meshes": [[23, "sizing-of-clock-meshes"]], "Import and setup packages": [[23, "import-and-setup-packages"]], "Helper functions": [[23, "helper-functions"], [27, "helper-functions"]], "Generate problem data": [[23, "generate-problem-data"], [29, "generate-problem-data"], [32, "generate-problem-data"], [36, "generate-problem-data"], [37, "generate-problem-data"]], "Solve problem and display results": [[23, "solve-problem-and-display-results"]], "Consensus optimization": [[24, "consensus-optimization"]], "Fault detection": [[25, "fault-detection"]], "Topic references": [[25, "topic-references"], [27, "topic-references"], [34, "topic-references"]], "Problem statement": [[25, "problem-statement"], [34, "problem-statement"], [35, "problem-statement"]], "Solution approach": [[25, "solution-approach"]], "Recovery": [[25, "recovery"]], "Evaluation": [[25, "evaluation"]], "Chebychev design of an FIR filter given a desired H(\\omega)": [[26, "chebychev-design-of-an-fir-filter-given-a-desired-h-omega"]], "Initialize problem data": [[26, "initialize-problem-data"]], "Solve the minimax (Chebychev) design problem": [[26, "solve-the-minimax-chebychev-design-problem"]], "TODO": [[27, "todo"], [27, "id1"], [31, "todo"]], "Allocating interdiction effort to catch a smuggler": [[27, "allocating-interdiction-effort-to-catch-a-smuggler"]], "Transformations and mathematical formulation": [[27, "transformations-and-mathematical-formulation"]], "Min/max game": [[27, "min-max-game"]], "Smuggler\u2019s objective": [[27, "smuggler-s-objective"]], "Smuggler\u2019s path example": [[27, "smuggler-s-path-example"]], "Security\u2019s objective": [[27, "security-s-objective"]], "Security example": [[27, "security-example"]], "Guard placement example": [[27, "guard-placement-example"]], "Multiple sources and destinations": [[27, "multiple-sources-and-destinations"]], "Guards": [[27, "guards"]], "Buildings": [[27, "buildings"]], "Example to solve": [[27, "example-to-solve"]], "\\ell_1 trend filtering": [[28, "ell-1-trend-filtering"]], "Formulate and solve problem": [[28, "formulate-and-solve-problem"], [29, "formulate-and-solve-problem"]], "Results plot": [[28, "results-plot"]], "Entropy maximization": [[29, "entropy-maximization"]], "Power Assignment in a Wireless Communication System": [[30, "power-assignment-in-a-wireless-communication-system"]], "Predicting NBA game wins": [[31, "predicting-nba-game-wins"]], "Imports and helper functions": [[31, "imports-and-helper-functions"]], "Raw data": [[31, "raw-data"]], "Model": [[31, "model"]], "Regularization paths": [[31, "regularization-paths"]], "Team identities": [[31, "team-identities"]], "Identities + home/away": [[31, "identities-home-away"]], "Identities + home/away + player minutes": [[31, "identities-home-away-player-minutes"]], "Nonnegative matrix factorization": [[32, "nonnegative-matrix-factorization"]], "Perform alternating minimization": [[32, "perform-alternating-minimization"]], "Output results": [[32, "output-results"]], "Optimal Power and Bandwidth Allocation in a Gaussian Channel": [[33, "optimal-power-and-bandwidth-allocation-in-a-gaussian-channel"]], "Optimal parade route": [[34, "optimal-parade-route"]], "Optimization formulation": [[34, "optimization-formulation"]], "Relaxation": [[34, "relaxation"]], "Iterated weighted \\ell_1 heuristic": [[34, "iterated-weighted-ell-1-heuristic"]], "Robust Kalman filtering for vehicle tracking": [[35, "robust-kalman-filtering-for-vehicle-tracking"]], "Kalman filtering": [[35, "kalman-filtering"]], "Robust Kalman filtering": [[35, "robust-kalman-filtering"]], "Vehicle tracking example": [[35, "vehicle-tracking-example"]], "1D Model": [[35, "d-model"]], "Helper Functions": [[35, "helper-functions"]], "Problem Data": [[35, "problem-data"]], "Simulation": [[35, "simulation"]], "Kalman filtering recovery": [[35, "kalman-filtering-recovery"]], "Robust Kalman filtering recovery": [[35, "robust-kalman-filtering-recovery"]], "Sparse covariance estimation for Gaussian variables": [[36, "sparse-covariance-estimation-for-gaussian-variables"]], "Solve for several \\alpha values": [[36, "solve-for-several-alpha-values"]], "Computing a sparse solution of a set of linear inequalities": [[37, "computing-a-sparse-solution-of-a-set-of-linear-inequalities"]], "\\ell_1-norm heuristic": [[37, "ell-1-norm-heuristic"]], "Iterative log heuristic": [[37, "iterative-log-heuristic"]], "Total variation in-painting": [[38, "total-variation-in-painting"]], "Grayscale Images": [[38, "grayscale-images"]], "Color Images": [[38, "color-images"]], "Water Filling in Communications": [[39, "water-filling-in-communications"]], "Least-squares": [[40, "least-squares"]], "Linear program": [[41, "linear-program"]], "Mixed-integer quadratic program": [[42, "mixed-integer-quadratic-program"]], "Quadratic program": [[43, "quadratic-program"]], "Semidefinite program": [[44, "semidefinite-program"]], "Second-order cone program": [[45, "second-order-cone-program"]], "Derivatives fundamentals": [[46, "derivatives-fundamentals"]], "Solution map": [[46, "solution-map"]], "Sensitivity analysis": [[46, "sensitivity-analysis"]], "Gradient": [[46, "gradient"]], "Queuing design": [[47, "queuing-design"]], "Sensitvities": [[47, "sensitvities"]], "Perturbation analysis": [[47, "perturbation-analysis"]], "Structured prediction": [[48, "structured-prediction"]], "Monomial fit to each component": [[48, "monomial-fit-to-each-component"]], "Fitting": [[48, "fitting"]], "DGP fundamentals": [[49, "dgp-fundamentals"]], "1. Log-log curvature": [[49, "log-log-curvature"]], "Functions from geometric programming": [[49, "functions-from-geometric-programming"]], "2. Log-log curvature ruleset": [[49, "log-log-curvature-ruleset"]], "3. DGP problems": [[49, "dgp-problems"]], "Solving DGP problems": [[49, "solving-dgp-problems"]], "4. Next steps": [[49, "next-steps"]], "References": [[49, "references"]], "Maximizing the volume of a box": [[50, "maximizing-the-volume-of-a-box"]], "Perron-Frobenius matrix completion": [[51, "perron-frobenius-matrix-completion"]], "Power control": [[52, "power-control"]], "Rank-one nonnegative matrix factorization": [[53, "rank-one-nonnegative-matrix-factorization"]], "Fractional optimization": [[54, "fractional-optimization"]], "Aerospace Design via Quasiconvex Optimization": [[55, "aerospace-design-via-quasiconvex-optimization"]], "Minimum-length least squares": [[56, "minimum-length-least-squares"]], "Examples": [[57, "examples"]], "Basic examples": [[57, "basic-examples"]], "Disciplined geometric programming": [[57, "disciplined-geometric-programming"]], "Disciplined quasiconvex programming": [[57, "disciplined-quasiconvex-programming"]], "Derivatives": [[57, "derivatives"]], "Machine learning": [[57, "machine-learning"]], "Finance": [[57, "finance"]], "Advanced": [[57, "advanced"]], "Advanced Applications": [[57, "advanced-applications"]], "Machine Learning: Lasso Regression": [[58, "machine-learning-lasso-regression"]], "Writing the objective function": [[58, "writing-the-objective-function"], [60, "writing-the-objective-function"]], "Generating data": [[58, "generating-data"], [60, "generating-data"]], "Fitting the model": [[58, "fitting-the-model"], [60, "fitting-the-model"]], "Evaluating the model": [[58, "evaluating-the-model"], [60, "evaluating-the-model"]], "Regularization path and feature selection": [[58, "regularization-path-and-feature-selection"]], "Logistic regression with \\ell_1 regularization": [[59, "logistic-regression-with-ell-1-regularization"]], "Machine Learning: Ridge Regression": [[60, "machine-learning-ridge-regression"]], "Regularization path": [[60, "regularization-path"]], "Support vector machine classifier with \\ell_1-regularization": [[61, "support-vector-machine-classifier-with-ell-1-regularization"]], "FAQ": [[62, "faq"]], "Where can I get help with CVXPY?": [[62, "where-can-i-get-help-with-cvxpy"]], "Where can I learn more about convex optimization?": [[62, "where-can-i-learn-more-about-convex-optimization"]], "How do I know which version of CVXPY I\u2019m using?": [[62, "how-do-i-know-which-version-of-cvxpy-i-m-using"]], "What do I do if I get a DCPError exception?": [[62, "what-do-i-do-if-i-get-a-dcperror-exception"]], "How do I find DCP errors?": [[62, "how-do-i-find-dcp-errors"]], "What do I do if I get a SolverError exception?": [[62, "what-do-i-do-if-i-get-a-solvererror-exception"]], "What solvers does CVXPY support?": [[62, "what-solvers-does-cvxpy-support"]], "What are the differences between CVXPY\u2019s solvers?": [[62, "what-are-the-differences-between-cvxpy-s-solvers"]], "What do I do if I get \u201cException: Cannot evaluate the truth value of a constraint\u201d?": [[62, "what-do-i-do-if-i-get-exception-cannot-evaluate-the-truth-value-of-a-constraint"]], "Can I use NumPy functions on CVXPY objects?": [[62, "can-i-use-numpy-functions-on-cvxpy-objects"]], "Can I use SciPy sparse matrices with CVXPY?": [[62, "can-i-use-scipy-sparse-matrices-with-cvxpy"]], "How do I constrain a CVXPY matrix expression to be positive semidefinite?": [[62, "how-do-i-constrain-a-cvxpy-matrix-expression-to-be-positive-semidefinite"]], "How do I create variables with special properties, such as boolean or symmetric variables?": [[62, "how-do-i-create-variables-with-special-properties-such-as-boolean-or-symmetric-variables"]], "How do I create a variable that has multiple special properties, such as boolean and symmetric?": [[62, "how-do-i-create-a-variable-that-has-multiple-special-properties-such-as-boolean-and-symmetric"]], "How do I create variables with more than 2 dimensions?": [[62, "how-do-i-create-variables-with-more-than-2-dimensions"]], "Can I copy CVXPY expressions?": [[62, "can-i-copy-cvxpy-expressions"]], "Why does it take so long to compile my Problem?": [[62, "why-does-it-take-so-long-to-compile-my-problem"]], "How does CVXPY work?": [[62, "how-does-cvxpy-work"]], "How do I cite CVXPY?": [[62, "how-do-i-cite-cvxpy"]], "Welcome to CVXPY 1.3": [[63, "welcome-to-cvxpy-1-3"]], "Install": [[64, "install"]], "pip": [[64, "pip"]], "conda": [[64, "conda"]], "Install from source": [[64, "install-from-source"]], "Apple M1 users": [[64, "apple-m1-users"]], "Running the test suite": [[64, "running-the-test-suite"]], "Install with CVXOPT and GLPK support": [[64, "install-with-cvxopt-and-glpk-support"]], "Install with GUROBI support": [[64, "install-with-gurobi-support"]], "Install with MOSEK support": [[64, "install-with-mosek-support"]], "Install with XPRESS support": [[64, "install-with-xpress-support"]], "Install with Cbc (Clp, Cgl) support": [[64, "install-with-cbc-clp-cgl-support"]], "Install with COPT support": [[64, "install-with-copt-support"]], "Install with CPLEX support": [[64, "install-with-cplex-support"]], "Install with SDPA support": [[64, "install-with-sdpa-support"]], "Install with SDPT3 support": [[64, "install-with-sdpt3-support"]], "Install with NAG support": [[64, "install-with-nag-support"]], "Install with GLOP and PDLP support": [[64, "install-with-glop-and-pdlp-support"]], "Install with SCIP support": [[64, "install-with-scip-support"]], "Install with SCIPY support": [[64, "install-with-scipy-support"]], "Install with CLARABEL support": [[64, "install-with-clarabel-support"]], "Install with PROXQP support": [[64, "install-with-proxqp-support"]], "Install without default solvers": [[64, "install-without-default-solvers"]], "Related Projects": [[66, "related-projects"]], "Modeling frameworks": [[66, "modeling-frameworks"]], "Solvers": [[66, "solvers"]], "CVXPY Short Course": [[67, "cvxpy-short-course"]], "Advanced Features": [[68, "advanced-features"]], "Attributes": [[68, "attributes"], [75, "attributes"]], "Semidefinite matrices": [[68, "semidefinite-matrices"]], "Mixed-integer programs": [[68, "mixed-integer-programs"]], "Complex valued expressions": [[68, "complex-valued-expressions"]], "Problem arithmetic": [[68, "problem-arithmetic"]], "Solve method options": [[68, "solve-method-options"]], "Choosing a solver": [[68, "choosing-a-solver"]], "Viewing solver output": [[68, "viewing-solver-output"]], "Solving disciplined geometric programs": [[68, "solving-disciplined-geometric-programs"]], "Solver stats": [[68, "solver-stats"]], "Warm start": [[68, "warm-start"]], "Setting solver options": [[68, "setting-solver-options"]], "Getting the standard form": [[68, "getting-the-standard-form"]], "Disciplined Parametrized Programming": [[68, "disciplined-parametrized-programming"]], "What is DPP?": [[68, "what-is-dpp"]], "The DPP ruleset": [[68, "the-dpp-ruleset"]], "Repeatedly solving a DPP problem": [[68, "repeatedly-solving-a-dpp-problem"]], "Sensitivity analysis and gradients": [[68, "sensitivity-analysis-and-gradients"]], "Custom Solvers": [[68, "custom-solvers"]], "Canonicalization backends": [[68, "canonicalization-backends"]], "Disciplined Convex Programming": [[69, "disciplined-convex-programming"]], "Sign": [[69, "sign"]], "Curvature": [[69, "curvature"], [71, "curvature"]], "Curvature rules": [[69, "curvature-rules"]], "Infix operators": [[69, "infix-operators"], [70, "infix-operators"]], "Example 1": [[69, "example-1"]], "Example 2": [[69, "example-2"]], "DCP problems": [[69, "dcp-problems"]], "Disciplined Geometric Programming": [[70, "disciplined-geometric-programming"]], "Log-log curvature": [[70, "log-log-curvature"]], "Log-log curvature rules": [[70, "log-log-curvature-rules"]], "DGP problems": [[70, "dgp-problems"]], "DGP atoms": [[70, "dgp-atoms"]], "Transpose": [[70, "transpose"], [72, "transpose"]], "Power": [[70, "power"], [72, "power"]], "Scalar functions": [[70, "scalar-functions"], [72, "scalar-functions"]], "Elementwise functions": [[70, "elementwise-functions"], [72, "elementwise-functions"]], "Vector/matrix functions": [[70, "vector-matrix-functions"], [72, "vector-matrix-functions"]], "Disciplined Quasiconvex Programming": [[71, "disciplined-quasiconvex-programming"]], "Composition rules": [[71, "composition-rules"]], "DQCP problems": [[71, "dqcp-problems"]], "DQCP atoms": [[71, "dqcp-atoms"]], "Solving DQCP problems": [[71, "solving-dqcp-problems"]], "Atomic Functions": [[72, "atomic-functions"]], "Operators": [[72, "operators"]], "Indexing and slicing": [[72, "indexing-and-slicing"]], "Clarifications for scalar functions": [[72, "clarifications-for-scalar-functions"]], "Functions along an axis": [[72, "functions-along-an-axis"]], "Clarifications on elementwise functions": [[72, "clarifications-on-elementwise-functions"]], "Clarifications on vector and matrix functions": [[72, "clarifications-on-vector-and-matrix-functions"]], "User Guide": [[73, "user-guide"]], "What is CVXPY?": [[74, "what-is-cvxpy"]], "Changing the problem": [[74, "changing-the-problem"]], "Infeasible and unbounded problems": [[74, "infeasible-and-unbounded-problems"]], "Other problem statuses": [[74, "other-problem-statuses"]], "Vectors and matrices": [[74, "vectors-and-matrices"]], "Parameters": [[74, "parameters"]], "Changes to CVXPY": [[75, "changes-to-cvxpy"]], "CVXPY 1.3": [[75, "cvxpy-1-3"]], "Constraints and atoms": [[75, "constraints-and-atoms"], [75, "id2"]], "General system improvements": [[75, "general-system-improvements"], [75, "id4"]], "CVXPY 1.2": [[75, "cvxpy-1-2"]], "CVXPY 1.1": [[75, "cvxpy-1-1"]], "Highlights": [[75, "highlights"]], "New atoms and transforms": [[75, "new-atoms-and-transforms"]], "Breaking changes": [[75, "breaking-changes"]], "Bugfixes": [[75, "bugfixes"]], "Known issues": [[75, "known-issues"]], "Notable patches since CVXPY 1.1.0": [[75, "notable-patches-since-cvxpy-1-1-0"]], "CVXPY 1.0": [[75, "cvxpy-1-0"]], "Overview": [[75, "overview"]], "NumPy Compatibility": [[75, "numpy-compatibility"]]}, "indexentries": {"atom (class in cvxpy.atoms.atom)": [[1, "cvxpy.atoms.atom.Atom"]], "domain (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.domain"]], "grad (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.grad"]], "is_atom_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_affine"]], "is_atom_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_concave"]], "is_atom_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_convex"]], "is_atom_log_log_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_affine"]], "is_atom_log_log_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_concave"]], "is_atom_log_log_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_convex"]], "is_decr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_decr"]], "is_incr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_incr"]], "addexpression (class in cvxpy.atoms.affine.add_expr)": [[2, "cvxpy.atoms.affine.add_expr.AddExpression"]], "divexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.DivExpression"]], "mulexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.MulExpression"]], "negexpression (class in cvxpy.atoms.affine.unary_operators)": [[2, "cvxpy.atoms.affine.unary_operators.NegExpression"]], "axis (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.axis"]], "bmat() (in module cvxpy)": [[2, "cvxpy.bmat"]], "conj (class in cvxpy)": [[2, "cvxpy.conj"]], "conv (class in cvxpy)": [[2, "cvxpy.conv"]], "cumsum (class in cvxpy)": [[2, "cvxpy.cumsum"]], "diag() (in module cvxpy)": [[2, "cvxpy.diag"]], "diff() (in module cvxpy)": [[2, "cvxpy.diff"]], "expr (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.expr"]], "hstack() (in module cvxpy)": [[2, "cvxpy.hstack"]], "imag (class in cvxpy)": [[2, "cvxpy.imag"]], "index (class in cvxpy.atoms.affine.index)": [[2, "cvxpy.atoms.affine.index.index"]], "kron (class in cvxpy)": [[2, "cvxpy.kron"]], "matmul() (in module cvxpy)": [[2, "cvxpy.matmul"]], "multiply (class in cvxpy)": [[2, "cvxpy.multiply"]], "partial_trace() (in module cvxpy)": [[2, "cvxpy.partial_trace"]], "partial_transpose() (in module cvxpy)": [[2, "cvxpy.partial_transpose"]], "promote() (in module cvxpy.atoms.affine.promote)": [[2, "cvxpy.atoms.affine.promote.promote"]], "psd_wrap (class in cvxpy.atoms.affine.wraps)": [[2, "cvxpy.atoms.affine.wraps.psd_wrap"]], "real() (in module cvxpy)": [[2, "cvxpy.real"]], "reshape (class in cvxpy)": [[2, "cvxpy.reshape"]], "scalar_product (class in cvxpy)": [[2, "cvxpy.scalar_product"]], "sum() (in module cvxpy)": [[2, "cvxpy.sum"]], "trace (class in cvxpy)": [[2, "cvxpy.trace"]], "transpose (class in cvxpy)": [[2, "cvxpy.transpose"]], "upper_tri (class in cvxpy)": [[2, "cvxpy.upper_tri"]], "vec() (in module cvxpy)": [[2, "cvxpy.vec"]], "vstack() (in module cvxpy)": [[2, "cvxpy.vstack"]], "abs (class in cvxpy)": [[3, "cvxpy.abs"]], "entr (class in cvxpy)": [[3, "cvxpy.entr"]], "exp (class in cvxpy)": [[3, "cvxpy.exp"]], "huber (class in cvxpy)": [[3, "cvxpy.huber"]], "inv_pos() (in module cvxpy)": [[3, "cvxpy.inv_pos"]], "kl_div (class in cvxpy)": [[3, "cvxpy.kl_div"]], "log (class in cvxpy)": [[3, "cvxpy.log"]], "log1p (class in cvxpy)": [[3, "cvxpy.log1p"]], "log_normcdf (class in cvxpy)": [[3, "cvxpy.log_normcdf"]], "loggamma (class in cvxpy)": [[3, "cvxpy.loggamma"]], "logistic (class in cvxpy)": [[3, "cvxpy.logistic"]], "maximum (class in cvxpy)": [[3, "cvxpy.maximum"]], "minimum() (in module cvxpy)": [[3, "cvxpy.minimum"]], "neg() (in module cvxpy)": [[3, "cvxpy.neg"]], "pos() (in module cvxpy)": [[3, "cvxpy.pos"]], "power (class in cvxpy)": [[3, "cvxpy.power"]], "rel_entr (class in cvxpy)": [[3, "cvxpy.rel_entr"]], "scalene() (in module cvxpy)": [[3, "cvxpy.scalene"]], "sqrt() (in module cvxpy)": [[3, "cvxpy.sqrt"]], "square() (in module cvxpy)": [[3, "cvxpy.square"]], "xexp (class in cvxpy)": [[3, "cvxpy.xexp"]], "pnorm (class in cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.Pnorm"]], "suppfuncatom (class in cvxpy.atoms.suppfunc)": [[4, "cvxpy.atoms.suppfunc.SuppFuncAtom"]], "approx_error (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.approx_error"]], "cummax (class in cvxpy.atoms.cummax)": [[4, "cvxpy.atoms.cummax.cummax"]], "dotsort (class in cvxpy.atoms.dotsort)": [[4, "cvxpy.atoms.dotsort.dotsort"]], "eye_minus_inv (class in cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.eye_minus_inv"]], "geo_mean (class in cvxpy.atoms.geo_mean)": [[4, "cvxpy.atoms.geo_mean.geo_mean"]], "gmatmul (class in cvxpy.atoms.gmatmul)": [[4, "cvxpy.atoms.gmatmul.gmatmul"]], "harmonic_mean() (in module cvxpy.atoms.harmonic_mean)": [[4, "cvxpy.atoms.harmonic_mean.harmonic_mean"]], "inv_prod() (in module cvxpy.atoms.inv_prod)": [[4, "cvxpy.atoms.inv_prod.inv_prod"]], "lambda_max (class in cvxpy.atoms.lambda_max)": [[4, "cvxpy.atoms.lambda_max.lambda_max"]], "lambda_min() (in module cvxpy.atoms.lambda_min)": [[4, "cvxpy.atoms.lambda_min.lambda_min"]], "lambda_sum_largest() (in module cvxpy.atoms.lambda_sum_largest)": [[4, "cvxpy.atoms.lambda_sum_largest.lambda_sum_largest"]], "lambda_sum_smallest() (in module cvxpy.atoms.lambda_sum_smallest)": [[4, "cvxpy.atoms.lambda_sum_smallest.lambda_sum_smallest"]], "log_det (class in cvxpy.atoms.log_det)": [[4, "cvxpy.atoms.log_det.log_det"]], "log_sum_exp (class in cvxpy.atoms.log_sum_exp)": [[4, "cvxpy.atoms.log_sum_exp.log_sum_exp"]], "matrix_frac() (in module cvxpy.atoms.matrix_frac)": [[4, "cvxpy.atoms.matrix_frac.matrix_frac"]], "max (class in cvxpy.atoms.max)": [[4, "cvxpy.atoms.max.max"]], "min() (in module cvxpy.atoms.min)": [[4, "cvxpy.atoms.min.min"]], "mixed_norm() (in module cvxpy.atoms.mixed_norm)": [[4, "cvxpy.atoms.mixed_norm.mixed_norm"]], "norm() (in module cvxpy.atoms.norm)": [[4, "cvxpy.atoms.norm.norm"]], "norm1 (class in cvxpy.atoms.norm1)": [[4, "cvxpy.atoms.norm1.norm1"]], "normnuc (class in cvxpy.atoms.norm_nuc)": [[4, "cvxpy.atoms.norm_nuc.normNuc"]], "norm_inf (class in cvxpy.atoms)": [[4, "cvxpy.atoms.norm_inf"]], "one_minus_pos (class in cvxpy.atoms)": [[4, "cvxpy.atoms.one_minus_pos"]], "perspective (class in cvxpy.atoms.perspective)": [[4, "cvxpy.atoms.perspective.perspective"]], "pf_eigenvalue (class in cvxpy.atoms.pf_eigenvalue)": [[4, "cvxpy.atoms.pf_eigenvalue.pf_eigenvalue"]], "pnorm() (in module cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.pnorm"]], "prod() (in module cvxpy.atoms.prod)": [[4, "cvxpy.atoms.prod.prod"]], "quad_form() (in module cvxpy.atoms.quad_form)": [[4, "cvxpy.atoms.quad_form.quad_form"]], "quad_over_lin (class in cvxpy.atoms.quad_over_lin)": [[4, "cvxpy.atoms.quad_over_lin.quad_over_lin"]], "resolvent() (in module cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.resolvent"]], "sigma_max (class in cvxpy.atoms.sigma_max)": [[4, "cvxpy.atoms.sigma_max.sigma_max"]], "sum_largest (class in cvxpy.atoms.sum_largest)": [[4, "cvxpy.atoms.sum_largest.sum_largest"]], "sum_smallest() (in module cvxpy.atoms.sum_smallest)": [[4, "cvxpy.atoms.sum_smallest.sum_smallest"]], "sum_squares() (in module cvxpy.atoms.sum_squares)": [[4, "cvxpy.atoms.sum_squares.sum_squares"]], "tr_inv() (in module cvxpy.atoms.tr_inv)": [[4, "cvxpy.atoms.tr_inv.tr_inv"]], "tv() (in module cvxpy.atoms.total_variation)": [[4, "cvxpy.atoms.total_variation.tv"]], "von_neumann_entr (class in cvxpy)": [[4, "cvxpy.von_neumann_entr"]], "w (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.w"]], "constraint (class in cvxpy.constraints.constraint)": [[5, "cvxpy.constraints.constraint.Constraint"]], "expcone (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.ExpCone"]], "finiteset (class in cvxpy.constraints.finite_set)": [[5, "cvxpy.constraints.finite_set.FiniteSet"]], "nonpos (class in cvxpy.constraints.nonpos)": [[5, "cvxpy.constraints.nonpos.NonPos"]], "oprelentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad"]], "psd (class in cvxpy.constraints.psd)": [[5, "cvxpy.constraints.psd.PSD"]], "powcone3d (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowCone3D"]], "powconend (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowConeND"]], "relentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad"]], "soc (class in cvxpy.constraints.second_order)": [[5, "cvxpy.constraints.second_order.SOC"]], "x (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.X"]], "zero (class in cvxpy.constraints.zero)": [[5, "cvxpy.constraints.zero.Zero"]], "axis (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.axis"]], "dual_value (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.dual_value"]], "ineq_form (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.ineq_form"]], "is_dcp() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.is_dcp"]], "is_dcp() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.is_dcp"]], "is_dcp() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.is_dcp"]], "is_dcp() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.is_dcp"]], "is_dcp() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.is_dcp"]], "shape (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.shape"]], "shape (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.shape"]], "size (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.size"]], "size (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.size"]], "t (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.t"]], "value() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.value"]], "value() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.value"]], "value() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.value"]], "value() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.value"]], "value() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.value"]], "value() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.value"]], "value() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.value"]], "value() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.value"]], "value() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.value"]], "value() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.value"]], "violation() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.violation"]], "violation() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.violation"]], "violation() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.violation"]], "violation() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.violation"]], "violation() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.violation"]], "violation() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.violation"]], "violation() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.violation"]], "violation() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.violation"]], "violation() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.violation"]], "constant (class in cvxpy.expressions.constants)": [[6, "cvxpy.expressions.constants.Constant"]], "expression (class in cvxpy.expressions.expression)": [[6, "cvxpy.expressions.expression.Expression"]], "leaf (class in cvxpy.expressions.leaf)": [[6, "cvxpy.expressions.leaf.Leaf"]], "parameter (class in cvxpy.expressions.constants.parameter)": [[6, "cvxpy.expressions.constants.parameter.Parameter"]], "t (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.T"]], "t (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.T"]], "t (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.T"]], "t (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.T"]], "t (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.T"]], "variable (class in cvxpy.expressions.variable)": [[6, "cvxpy.expressions.variable.Variable"]], "__add__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__add__"]], "__div__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__div__"]], "__eq__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__eq__"]], "__ge__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__ge__"]], "__le__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__le__"]], "__lshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__lshift__"]], "__matmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__matmul__"]], "__mul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__mul__"]], "__pow__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__pow__"]], "__radd__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__radd__"]], "__rdiv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rdiv__"]], "__rlshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rlshift__"]], "__rmatmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmatmul__"]], "__rmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmul__"]], "__rrshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rrshift__"]], "__rshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rshift__"]], "__rsub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rsub__"]], "__rtruediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rtruediv__"]], "__sub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__sub__"]], "__truediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__truediv__"]], "curvature (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.curvature"]], "domain (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.domain"]], "grad (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.grad"]], "is_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_affine"]], "is_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_concave"]], "is_constant() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_constant"]], "is_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_convex"]], "is_dcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dcp"]], "is_dgp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dgp"]], "is_dpp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dpp"]], "is_dqcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dqcp"]], "is_log_log_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_affine"]], "is_log_log_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_concave"]], "is_log_log_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_convex"]], "is_nonneg() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonneg"]], "is_nonpos() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonpos"]], "is_zero() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_zero"]], "name() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.name"]], "name() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.name"]], "ndim (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.ndim"]], "ndim (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.ndim"]], "ndim (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.ndim"]], "ndim (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.ndim"]], "ndim (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.ndim"]], "project() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project"]], "project() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project"]], "project() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project"]], "project_and_assign() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project_and_assign"]], "project_and_assign() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project_and_assign"]], "project_and_assign() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project_and_assign"]], "shape (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.shape"]], "shape (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.shape"]], "shape (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.shape"]], "shape (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.shape"]], "shape (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.shape"]], "sign (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.sign"]], "size (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.size"]], "size (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.size"]], "size (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.size"]], "size (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.size"]], "size (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.size"]], "value (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.value"]], "value (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.value"]], "value (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.value"]], "value (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.value"]], "value (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.value"]], "maximize (class in cvxpy)": [[7, "cvxpy.Maximize"]], "minimize (class in cvxpy)": [[7, "cvxpy.Minimize"]], "problem (class in cvxpy)": [[7, "cvxpy.Problem"]], "sizemetrics (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SizeMetrics"]], "solverstats (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SolverStats"]], "atoms() (cvxpy.problem method)": [[7, "cvxpy.Problem.atoms"]], "backward() (cvxpy.problem method)": [[7, "cvxpy.Problem.backward"]], "constants() (cvxpy.problem method)": [[7, "cvxpy.Problem.constants"]], "constraints (cvxpy.problem property)": [[7, "cvxpy.Problem.constraints"]], "derivative() (cvxpy.problem method)": [[7, "cvxpy.Problem.derivative"]], "extra_stats (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.extra_stats"]], "get_problem_data() (cvxpy.problem method)": [[7, "cvxpy.Problem.get_problem_data"]], "is_dcp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dcp"]], "is_dcp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dcp"]], "is_dcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dcp"]], "is_dgp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dgp"]], "is_dgp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dgp"]], "is_dgp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dgp"]], "is_dpp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dpp"]], "is_dqcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dqcp"]], "is_qp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_qp"]], "max_big_small_squared (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_big_small_squared"]], "max_data_dimension (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_data_dimension"]], "num_iters (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.num_iters"]], "num_scalar_data (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_data"]], "num_scalar_eq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_eq_constr"]], "num_scalar_leq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_leq_constr"]], "num_scalar_variables (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_variables"]], "objective (cvxpy.problem property)": [[7, "cvxpy.Problem.objective"]], "parameters() (cvxpy.problem method)": [[7, "cvxpy.Problem.parameters"]], "register_solve() (cvxpy.problem class method)": [[7, "cvxpy.Problem.register_solve"]], "setup_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.setup_time"]], "size_metrics (cvxpy.problem property)": [[7, "cvxpy.Problem.size_metrics"]], "solve() (cvxpy.problem method)": [[7, "cvxpy.Problem.solve"]], "solve_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solve_time"]], "solver_name (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solver_name"]], "solver_stats (cvxpy.problem property)": [[7, "cvxpy.Problem.solver_stats"]], "status (cvxpy.problem property)": [[7, "cvxpy.Problem.status"]], "unpack_results() (cvxpy.problem method)": [[7, "cvxpy.Problem.unpack_results"]], "value (cvxpy.problem property)": [[7, "cvxpy.Problem.value"]], "variables() (cvxpy.problem method)": [[7, "cvxpy.Problem.variables"]], "chain (class in cvxpy.reductions.chain)": [[8, "cvxpy.reductions.chain.Chain"]], "reduction (class in cvxpy.reductions.reduction)": [[8, "cvxpy.reductions.reduction.Reduction"]], "solution (class in cvxpy.reductions.solution)": [[8, "cvxpy.reductions.solution.Solution"]], "solvingchain (class in cvxpy.reductions.solvers.solving_chain)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain"]], "__init__() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.__init__"]], "accepts() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.accepts"]], "accepts() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.accepts"]], "apply() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.apply"]], "apply() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.apply"]], "attr (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.attr"]], "dual_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.dual_vars"]], "invert() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.invert"]], "invert() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.invert"]], "opt_val (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.opt_val"]], "prepend() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.prepend"]], "primal_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.primal_vars"]], "reduce() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.reduce"]], "reductions (cvxpy.reductions.chain.chain attribute)": [[8, "cvxpy.reductions.chain.Chain.reductions"]], "reductions (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.reductions"]], "retrieve() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.retrieve"]], "solve() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve"]], "solve_via_data() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve_via_data"]], "solver (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solver"]], "status (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.status"]], "dcp2cone (class in cvxpy.reductions.dcp2cone.dcp2cone)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"]], "dualize (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize"]], "qp2symbolicqp (class in cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"]], "slacks (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks"]], "accepts() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"]], "accepts() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"]], "apply() (cvxpy.reductions.cone2cone.affine2direct.slacks static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks.apply"]], "apply() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"]], "apply() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"]], "canonicalize_expr() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"]], "canonicalize_tree() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"]], "invert() (cvxpy.reductions.cone2cone.affine2direct.dualize static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize.invert"]], "constraints (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.CONSTRAINTS"]], "conedims (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims"]], "conematrixstuffing (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing"]], "eq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EQ_DIM"]], "exp_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EXP_DIM"]], "leq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.LEQ_DIM"]], "p3d_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.P3D_DIM"]], "psd_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.PSD_DIM"]], "paramconeprog (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg"]], "soc_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.SOC_DIM"]], "accepts() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.accepts"]], "apply() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_parameters"]], "cvxpy.reductions.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "exp (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.is_mixed_integer"]], "module": [[10, "module-cvxpy.reductions.dcp2cone"], [10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"], [10, "module-cvxpy.reductions.dcp2cone.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"], [12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"], [12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "nonneg (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.nonneg"]], "psd (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_adjoint"]], "split_solution() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.zero"]], "complex2real (class in cvxpy.reductions.complex2real.complex2real)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real"]], "cvxattr2constr (class in cvxpy.reductions.cvx_attr2constr)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr"]], "dgp2dcp (class in cvxpy.reductions.dgp2dcp.dgp2dcp)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp"]], "evalparams (class in cvxpy.reductions.eval_params)": [[11, "cvxpy.reductions.eval_params.EvalParams"]], "flipobjective (class in cvxpy.reductions.flip_objective)": [[11, "cvxpy.reductions.flip_objective.FlipObjective"]], "accepts() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.accepts"]], "accepts() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.accepts"]], "accepts() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.accepts"]], "accepts() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.accepts"]], "accepts() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.accepts"]], "apply() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.apply"]], "apply() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.apply"]], "apply() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.apply"]], "apply() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.apply"]], "apply() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.apply"]], "canonicalize_expr() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.canonicalize_expr"]], "invert() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.invert"]], "invert() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.invert"]], "invert() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.invert"]], "invert() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.invert"]], "invert() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.invert"]], "conedims (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims"]], "paramquadprog (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg"]], "qpmatrixstuffing (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing"]], "accepts() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing static method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.accepts"]], "accepts() (in module cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.accepts"]], "apply() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_parameters"]], "cvxpy.reductions.qp2quad_form": [[12, "module-cvxpy.reductions.qp2quad_form"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "exp (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.is_mixed_integer"]], "nonpos (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.nonpos"]], "psd (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_adjoint"]], "split_solution() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.zero"]], "suppfunc (class in cvxpy.transforms.suppfunc)": [[13, "cvxpy.transforms.suppfunc.SuppFunc"]], "__call__() (cvxpy.transforms.suppfunc.suppfunc method)": [[13, "cvxpy.transforms.suppfunc.SuppFunc.__call__"]], "indicator (class in cvxpy.transforms)": [[13, "cvxpy.transforms.indicator"]], "linearize() (cvxpy.transforms method)": [[13, "cvxpy.transforms.linearize"]], "log_sum_exp() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.log_sum_exp"]], "max() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.max"]], "partial_optimize() (cvxpy.transforms method)": [[13, "cvxpy.transforms.partial_optimize"]], "targets_and_priorities() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.targets_and_priorities"]], "weighted_sum() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.weighted_sum"]], "leaf()": [[68, "Leaf"]], "built-in function": [[68, "Leaf"], [68, "solve"]], "solve()": [[68, "solve"]]}})