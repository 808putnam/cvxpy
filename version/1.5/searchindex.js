Search.setIndex({"docnames": ["api_reference/cvxpy", "api_reference/cvxpy.atoms", "api_reference/cvxpy.atoms.affine", "api_reference/cvxpy.atoms.elementwise", "api_reference/cvxpy.atoms.other_atoms", "api_reference/cvxpy.constraints", "api_reference/cvxpy.expressions", "api_reference/cvxpy.problems", "api_reference/cvxpy.reductions", "api_reference/cvxpy.reductions.back_end", "api_reference/cvxpy.reductions.dcp2cone", "api_reference/cvxpy.reductions.middle_end", "api_reference/cvxpy.reductions.qp2quad_form", "api_reference/cvxpy.transforms", "contributing/index", "examples/applications/Channel_capacity_BV4.57", "examples/applications/MM", "examples/applications/OOCO", "examples/applications/ant_array_min_beamwidth", "examples/applications/censored_data", "examples/applications/clock_mesh", "examples/applications/consensus_opt", "examples/applications/fault_detection", "examples/applications/fir_chebychev_design", "examples/applications/interdiction", "examples/applications/l1_trend_filter", "examples/applications/max_entropy", "examples/applications/maximise_minimum_SINR_BV4.20", "examples/applications/nonneg_matrix_fact", "examples/applications/optimal_power_gaussian_channel_BV4.62", "examples/applications/parade_route", "examples/applications/robust_kalman", "examples/applications/sparse_covariance_est", "examples/applications/sparse_solution", "examples/applications/tv_inpainting", "examples/applications/water_filling_BVex5.2", "examples/basic/least_squares", "examples/basic/linear_program", "examples/basic/mixed_integer_quadratic_program", "examples/basic/quadratic_program", "examples/basic/sdp", "examples/basic/socp", "examples/derivatives/fundamentals", "examples/derivatives/queuing_design", "examples/derivatives/structured_prediction", "examples/dgp/dgp_fundamentals", "examples/dgp/max_volume_box", "examples/dgp/pf_matrix_completion", "examples/dgp/power_control", "examples/dgp/rank_one_nmf", "examples/dqcp/concave_fractional_function", "examples/dqcp/hypersonic_shape_design", "examples/dqcp/minimum_length_least_squares", "examples/index", "examples/machine_learning/lasso_regression", "examples/machine_learning/logistic_regression", "examples/machine_learning/ridge_regression", "examples/machine_learning/svm", "faq/index", "index", "install/index", "resources/citing/index", "resources/index", "resources/license/index", "resources/related_projects/index", "resources/short_course/index", "tutorial/advanced/index", "tutorial/constraints/index", "tutorial/dcp/index", "tutorial/dgp/index", "tutorial/dpp/index", "tutorial/dqcp/index", "tutorial/functions/index", "tutorial/index", "tutorial/intro/index", "tutorial/solvers/index", "updates/index"], "filenames": ["api_reference/cvxpy.rst", "api_reference/cvxpy.atoms.rst", "api_reference/cvxpy.atoms.affine.rst", "api_reference/cvxpy.atoms.elementwise.rst", "api_reference/cvxpy.atoms.other_atoms.rst", "api_reference/cvxpy.constraints.rst", "api_reference/cvxpy.expressions.rst", "api_reference/cvxpy.problems.rst", "api_reference/cvxpy.reductions.rst", "api_reference/cvxpy.reductions.back_end.rst", "api_reference/cvxpy.reductions.dcp2cone.rst", "api_reference/cvxpy.reductions.middle_end.rst", "api_reference/cvxpy.reductions.qp2quad_form.rst", "api_reference/cvxpy.transforms.rst", "contributing/index.rst", "examples/applications/Channel_capacity_BV4.57.rst", "examples/applications/MM.rst", "examples/applications/OOCO.rst", "examples/applications/ant_array_min_beamwidth.rst", "examples/applications/censored_data.rst", "examples/applications/clock_mesh.rst", "examples/applications/consensus_opt.rst", "examples/applications/fault_detection.rst", "examples/applications/fir_chebychev_design.rst", "examples/applications/interdiction.rst", "examples/applications/l1_trend_filter.rst", "examples/applications/max_entropy.rst", "examples/applications/maximise_minimum_SINR_BV4.20.rst", "examples/applications/nonneg_matrix_fact.rst", "examples/applications/optimal_power_gaussian_channel_BV4.62.rst", "examples/applications/parade_route.rst", "examples/applications/robust_kalman.rst", "examples/applications/sparse_covariance_est.rst", "examples/applications/sparse_solution.rst", "examples/applications/tv_inpainting.rst", "examples/applications/water_filling_BVex5.2.rst", "examples/basic/least_squares.rst", "examples/basic/linear_program.rst", "examples/basic/mixed_integer_quadratic_program.rst", "examples/basic/quadratic_program.rst", "examples/basic/sdp.rst", "examples/basic/socp.rst", "examples/derivatives/fundamentals.rst", "examples/derivatives/queuing_design.rst", "examples/derivatives/structured_prediction.rst", "examples/dgp/dgp_fundamentals.rst", "examples/dgp/max_volume_box.rst", "examples/dgp/pf_matrix_completion.rst", "examples/dgp/power_control.rst", "examples/dgp/rank_one_nmf.rst", "examples/dqcp/concave_fractional_function.rst", "examples/dqcp/hypersonic_shape_design.rst", "examples/dqcp/minimum_length_least_squares.rst", "examples/index.rst", "examples/machine_learning/lasso_regression.rst", "examples/machine_learning/logistic_regression.rst", "examples/machine_learning/ridge_regression.rst", "examples/machine_learning/svm.rst", "faq/index.rst", "index.rst", "install/index.rst", "resources/citing/index.rst", "resources/index.rst", "resources/license/index.rst", "resources/related_projects/index.rst", "resources/short_course/index.rst", "tutorial/advanced/index.rst", "tutorial/constraints/index.rst", "tutorial/dcp/index.rst", "tutorial/dgp/index.rst", "tutorial/dpp/index.rst", "tutorial/dqcp/index.rst", "tutorial/functions/index.rst", "tutorial/index.rst", "tutorial/intro/index.rst", "tutorial/solvers/index.rst", "updates/index.rst"], "titles": ["API Documentation", "Atoms", "Affine Atoms", "cvxpy.atoms.elementwise package", "Other Atoms", "Constraints", "Expressions", "Problems", "Reductions", "Back-End Reductions", "cvxpy.reductions.dcp2cone package", "Middle-End Reductions", "cvxpy.reductions.qp2quad_form package", "Transforms", "Contributing", "Capacity of a Communication Channel", "Method of multipliers", "Object Oriented Convex Optimization", "Minimize beamwidth of an array with arbitrary 2-D geometry", "Fitting censored data", "Sizing of clock meshes", "Consensus optimization", "Fault detection", "Chebychev design of an FIR filter given a desired <span class=\"math notranslate nohighlight\">\\(H(\\omega)\\)</span>", "TODO", "<span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> trend filtering", "Entropy maximization", "Power Assignment in a Wireless Communication System", "Nonnegative matrix factorization", "Optimal Power and Bandwidth Allocation in a Gaussian Channel", "Optimal parade route", "Robust Kalman filtering for vehicle tracking", "Sparse covariance estimation for Gaussian variables", "Computing a sparse solution of a set of linear inequalities", "Total variation in-painting", "Water Filling in Communications", "Least-squares", "Linear program", "Mixed-integer quadratic program", "Quadratic program", "Semidefinite program", "Second-order cone program", "Derivatives fundamentals", "Queuing design", "Structured prediction", "DGP fundamentals", "Maximizing the volume of a box", "Perron-Frobenius matrix completion", "Power control", "Rank-one nonnegative matrix factorization", "Fractional optimization", "Aerospace Design via Quasiconvex Optimization", "Minimum-length least squares", "Examples", "Machine Learning: Lasso Regression", "Logistic regression with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span> regularization", "Machine Learning: Ridge Regression", "Support vector machine classifier with <span class=\"math notranslate nohighlight\">\\(\\ell_1\\)</span>-regularization", "FAQ", "Welcome to CVXPY 1.5", "Install", "Citing CVXPY", "Resources", "License", "Related Projects", "CVXPY Short Course", "Advanced Features", "Advanced Constraints", "Disciplined Convex Programming", "Disciplined Geometric Programming", "Disciplined Parametrized Programming", "Disciplined Quasiconvex Programming", "Atomic Functions", "User Guide", "What is CVXPY?", "Solver Features", "Changes to CVXPY"], "terms": {"cvxpy": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76], "design": [0, 14, 18, 53, 63], "intuit": [0, 30], "enough": [0, 7, 14, 66], "so": [0, 1, 4, 6, 7, 9, 14, 15, 18, 20, 22, 23, 24, 27, 29, 30, 32, 33, 34, 42, 47, 49, 51, 54, 56, 68, 69, 70, 75, 76], "mai": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 23, 24, 27, 60, 63, 67, 68, 69, 71, 74, 75, 76], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 41, 42, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "without": [0, 3, 4, 7, 8, 10, 12, 14, 24, 31, 37, 44, 63, 67, 70, 74, 75, 76], "consult": [0, 7, 45, 58, 66, 76], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 22, 24, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 56, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76], "refer": [0, 3, 7, 9, 14, 18, 20, 23, 25, 32, 33, 42, 51, 58, 66, 69, 71, 72, 75, 76], "tutori": [0, 7, 42, 45, 46, 48, 53, 58, 59, 66, 68, 69, 70, 72, 74, 75, 76], "suffic": 0, "acquaint": 0, "you": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 34, 38, 42, 45, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 74, 75, 76], "our": [0, 9, 10, 11, 12, 14, 19, 27, 30, 31, 34, 37, 43, 44, 45, 49, 50, 51, 55, 56, 57, 59, 67, 69, 71, 75, 76], "softwar": [0, 8, 10, 12, 14, 58, 59, 63, 64, 70], "nonetheless": [0, 5], "we": [0, 2, 3, 4, 5, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76], "includ": [0, 4, 9, 10, 23, 24, 35, 45, 47, 49, 59, 63, 67, 75, 76], "here": [0, 2, 3, 4, 7, 8, 9, 11, 13, 14, 19, 24, 27, 30, 31, 32, 37, 39, 40, 42, 43, 44, 51, 59, 64, 68, 69, 71, 74, 75, 76], "those": [0, 2, 4, 7, 8, 14, 34, 56, 60, 63, 67, 74, 76], "who": [0, 8, 14, 17, 18, 59], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "comfort": 0, "read": [0, 14, 59, 70, 72, 74, 75], "technic": [0, 76], "all": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 17, 19, 20, 21, 23, 24, 27, 31, 35, 41, 44, 45, 54, 56, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 24, 55, 58, 63, 67, 70, 75, 76], "function": [0, 1, 2, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 18, 19, 21, 22, 23, 27, 29, 30, 32, 33, 35, 40, 42, 43, 44, 47, 49, 50, 51, 53, 55, 57, 66, 67, 68, 70, 71, 73, 74, 75, 76], "import": [0, 1, 3, 4, 7, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 63, 66, 68, 69, 70, 71, 74, 75, 76], "namespac": [0, 59, 76], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "mean": [0, 1, 3, 4, 7, 8, 13, 14, 15, 22, 24, 29, 32, 44, 52, 53, 54, 56, 58, 63, 67, 68, 69, 71, 72, 74, 75, 76], "thei": [0, 1, 5, 8, 9, 11, 13, 14, 21, 24, 30, 43, 45, 50, 58, 66, 67, 68, 69, 71, 74, 76], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 44, 45, 49, 50, 51, 52, 54, 56, 59, 60, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "simpli": [0, 5, 19, 35, 56, 67, 75], "write": [0, 5, 6, 8, 10, 12, 13, 17, 18, 24, 35, 51, 58, 63, 66, 67, 72, 74, 76], "symbol": [0, 9, 11, 12, 70, 74, 76], "where": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 63, 67, 69, 70, 71, 74, 75, 76], "name": [0, 3, 4, 6, 7, 14, 18, 19, 23, 25, 26, 28, 32, 33, 43, 45, 46, 60, 63, 75, 76], "your": [0, 7, 9, 10, 11, 12, 14, 58, 59, 60, 63, 67, 69, 70, 71, 74, 75, 76], "choic": [0, 7, 9, 24, 30, 54, 55, 57, 74], "long": [0, 7, 70, 76], "packag": [0, 14, 19, 24, 36, 37, 39, 40, 41, 60, 64, 67, 70, 75], "python": [0, 6, 7, 14, 24, 58, 59, 60, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 38, 58, 59, 60, 63, 64, 67, 75, 76], "file": [0, 10, 12, 14, 63, 69, 71, 75, 76], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "group": [0, 8, 27], "five": 0, "section": [0, 14, 20, 24, 32, 33, 53, 58, 63, 66, 68, 69, 71, 72, 74, 76], "atom": [0, 6, 7, 9, 10, 13, 14, 26, 47, 49, 50, 66, 67, 70, 73, 75], "constraint": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 59, 66, 68, 69, 71, 73, 75], "express": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 34, 45, 51, 59, 63, 66, 69, 70, 71, 72, 73, 74, 76], "problem": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 24, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 73, 75, 76], "reduct": [0, 7, 14, 66, 75], "implement": [0, 1, 3, 4, 5, 9, 13, 14, 16, 18, 31, 47, 64, 66, 75, 76], "mathemat": [0, 1, 4, 5, 6, 68], "like": [0, 2, 5, 7, 13, 14, 19, 24, 45, 49, 54, 58, 68, 70, 74, 76], "exp": [0, 1, 7, 9, 10, 12, 13, 14, 18, 23, 24, 44, 45, 50, 55, 66, 69, 71, 72, 75], "log": [0, 1, 4, 5, 6, 7, 8, 13, 15, 22, 24, 25, 26, 29, 30, 32, 35, 43, 44, 47, 53, 54, 55, 56, 57, 61, 70, 72, 73, 74, 76], "sqrt": [0, 1, 19, 22, 23, 50, 51, 68, 69, 71, 72], "impos": [0, 5, 7, 9, 24, 54], "upon": [0, 5], "variabl": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "tree": [0, 1, 5, 6, 9, 10, 20, 58, 68], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 25, 26, 27, 29, 31, 32, 33, 35, 42, 43, 44, 45, 54, 55, 56, 57, 58, 67, 68, 69, 70, 73, 75, 76], "other": [0, 1, 5, 6, 7, 8, 14, 24, 34, 56, 59, 63, 67, 70, 71, 73, 75, 76], "relat": [0, 5, 7, 15, 18, 31, 54, 62, 70, 75], "principl": [0, 24, 35], "oper": [0, 1, 2, 3, 5, 6, 8, 13, 18, 21, 24, 31, 32, 40, 42, 43, 44, 45, 66, 67, 71, 73, 75, 76], "convert": [0, 8, 9, 10, 11, 12, 13, 14, 19, 21, 28, 64, 66, 76], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 42, 43, 44, 46, 48, 49, 54, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "particular": [0, 8, 11, 14, 19, 20, 21, 44, 45, 52, 63, 70, 76], "form": [0, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 23, 24, 25, 27, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 44, 45, 57, 59, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76], "anoth": [0, 2, 5, 6, 8, 9, 14, 29, 70], "equival": [0, 2, 3, 4, 5, 7, 8, 9, 11, 49, 66, 69, 70, 72, 74, 76], "transform": [0, 4, 8, 14, 45, 63, 69, 70, 73, 74], "addit": [0, 4, 7, 13, 14, 19, 24, 30, 37, 39, 41, 56, 59, 63, 66, 67, 69, 70, 71, 75, 76], "avail": [0, 7, 8, 13, 18, 32, 37, 58, 63, 66, 67, 75, 76], "manipul": [0, 13, 64, 66, 76], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 48, 49, 50, 51, 53, 59, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76], "lower": [1, 6, 13, 19, 20, 23, 24, 27, 33, 35, 51, 56, 67, 71, 74, 75, 76], "case": [1, 3, 4, 5, 14, 15, 19, 20, 24, 27, 29, 31, 34, 42, 51, 53, 58, 67, 70, 72, 74, 75, 76], "appli": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 31, 33, 45, 63, 68, 69, 71, 72, 75], "return": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 20, 22, 24, 27, 29, 30, 35, 39, 42, 44, 54, 55, 56, 58, 59, 66, 67, 69, 71, 72, 74, 75, 76], "composit": [1, 3, 4, 42, 43, 45, 68, 69, 73], "thereof": [1, 2, 5, 63], "precis": [1, 15, 27, 29, 35, 69, 71, 74, 75], "mechan": [1, 4, 63, 76], "allow": [1, 5, 6, 8, 9, 13, 14, 18, 24, 45, 46, 66, 70, 75, 76], "build": [1, 8, 14, 18, 20, 30, 37, 59, 60, 76], "up": [1, 3, 4, 5, 7, 8, 9, 10, 14, 24, 27, 56, 66, 70, 75, 76], "everi": [1, 7, 8, 10, 11, 14, 24, 30, 45, 58, 69, 71, 72, 74], "tag": [1, 45], "inform": [1, 7, 8, 13, 14, 15, 17, 19, 35, 45, 56, 60, 61, 63, 66, 67, 69, 72, 75, 76], "about": [1, 5, 7, 8, 9, 10, 11, 12, 14, 19, 59, 67, 75], "its": [1, 2, 3, 4, 5, 6, 7, 9, 16, 30, 33, 42, 45, 49, 50, 51, 54, 63, 68, 69, 70, 71, 75, 76], "domain": [1, 3, 4, 5, 6, 27, 43, 45, 67, 69, 71, 72, 75], "sign": [1, 3, 6, 57, 67, 70, 71, 72, 73, 74, 76], "curvatur": [1, 3, 6, 51, 72, 73, 76], "monoton": [1, 3, 13, 44, 57, 68, 69, 72], "let": [1, 2, 7, 14, 18, 19, 24, 27, 30, 31, 36, 42, 45, 47, 59, 69, 70, 71, 75, 76], "instanc": [1, 6, 7, 8, 12, 14, 30, 68, 70, 74, 75], "reason": [1, 13, 14, 22, 55, 57, 63, 67, 76], "whether": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 27, 35, 45, 58, 63, 67, 68, 69, 70, 71, 74, 75, 76], "dcp": [1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 29, 35, 45, 67, 69, 70, 71, 72, 73, 74, 75], "dgp": [1, 3, 7, 11, 42, 47, 49, 53, 70, 73, 75, 76], "see": [1, 3, 4, 6, 7, 9, 10, 11, 12, 14, 17, 18, 19, 22, 24, 34, 42, 54, 58, 59, 60, 63, 66, 69, 70, 71, 72, 74, 75, 76], "page": [1, 5, 13, 14, 15, 27, 29, 35, 61, 63, 65, 69, 75, 76], "compact": 1, "access": [1, 7, 8, 9, 14, 45, 67, 75], "summari": [1, 10, 12], "each": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 20, 21, 22, 24, 27, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 48, 55, 57, 58, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75], "": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 17, 18, 19, 20, 22, 23, 25, 27, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 48, 51, 59, 60, 61, 63, 66, 67, 69, 70, 71, 72, 74, 75, 76], "attribut": [1, 4, 6, 7, 11, 13, 14, 42, 45, 58, 63, 69, 70, 71, 73, 74, 75], "affin": [1, 3, 4, 5, 6, 9, 10, 12, 13, 14, 33, 37, 39, 43, 45, 67, 68, 69, 70, 71, 72, 76], "addexpress": 1, "mulexpress": 1, "divexpress": 1, "bmat": [1, 69, 72], "conj": [1, 67, 72], "convolv": [1, 72, 76], "cumsum": [1, 72], "expr": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 66, 67, 68, 69, 70, 72, 74, 76], "axi": [1, 2, 4, 5, 15, 18, 24, 27, 31, 34, 35, 44, 51, 69, 73], "diag": [1, 6, 20, 48, 67, 69, 72], "diff": [1, 72], "hstack": [1, 17, 18, 30, 44, 48, 68, 69, 72, 76], "imag": [1, 6, 18, 23, 67, 72], "index": [1, 6, 7, 31, 35, 45, 67, 71, 76], "kron": [1, 18, 23, 72, 76], "matmul": [1, 69], "multipli": [1, 4, 10, 12, 21, 23, 24, 29, 34, 44, 48, 49, 53, 55, 57, 59, 66, 69, 71, 72, 76], "outer": [1, 4, 49, 72, 76], "partial_trac": [1, 72], "partial_transpos": [1, 72], "promot": [1, 5, 30, 69, 72], "psd_wrap": 1, "real": [1, 5, 11, 13, 18, 23, 44, 45, 56, 59, 67, 69, 72, 74, 76], "reshap": [1, 10, 12, 18, 19, 20, 23, 27, 51, 69, 72, 76], "vdot": [1, 4, 14, 69, 72, 76], "sum": [1, 3, 4, 5, 6, 7, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 43, 44, 45, 47, 48, 49, 54, 55, 56, 57, 66, 67, 68, 69, 70, 72, 76], "trace": [1, 4, 14, 32, 40, 47, 49, 69, 72, 76], "transpos": [1, 6, 42, 67, 76], "negexpress": 1, "upper_tri": [1, 72], "vec": [1, 4, 5, 13, 69, 72], "vec_to_upper_tri": [1, 72, 76], "vstack": [1, 18, 25, 42, 49, 51, 69, 72, 76], "elementwis": [1, 2, 4, 5, 13, 29, 33, 37, 39, 43, 44, 45, 47, 49, 73, 74], "ab": [1, 5, 13, 17, 18, 23, 24, 30, 32, 33, 34, 44, 55, 67, 72], "entr": [1, 15, 26, 69, 72], "huber": [1, 31, 53, 72], "inv_po": [1, 51, 72], "kl_div": [1, 29, 72], "log_normcdf": [1, 72, 76], "log1p": [1, 72], "loggamma": [1, 72, 76], "logist": [1, 53, 72], "maximum": [1, 4, 7, 13, 15, 18, 19, 22, 23, 24, 27, 35, 37, 43, 46, 48, 49, 68, 69, 71, 72, 75, 76], "minimum": [1, 4, 18, 24, 27, 30, 48, 53, 68, 69, 71, 72, 74, 75, 76], "neg": [1, 5, 6, 10, 13, 22, 28, 67, 68, 72, 74, 75, 76], "po": [1, 6, 11, 24, 32, 42, 43, 44, 45, 46, 47, 48, 49, 51, 57, 67, 69, 70, 71, 72], "power": [1, 4, 5, 6, 14, 17, 20, 35, 45, 51, 53, 63, 70, 75, 76], "rel_entr": [1, 72, 76], "scalen": [1, 72], "squar": [1, 2, 4, 7, 18, 19, 23, 30, 31, 34, 38, 44, 51, 53, 54, 56, 59, 67, 68, 69, 70, 72, 74, 75], "xexp": [1, 69, 72, 76], "cummax": 1, "diff_po": [1, 43, 69], "dotsort": [1, 72, 76], "eye_minus_inv": [1, 69], "geo_mean": [1, 69, 72], "w": [1, 4, 5, 6, 9, 10, 11, 14, 18, 23, 24, 29, 30, 31, 33, 43, 44, 46, 69, 71, 72, 76], "approx_error": [1, 4], "gmatmul": [1, 44, 69, 76], "harmonic_mean": [1, 69, 72], "inv_prod": [1, 72], "lambda_max": [1, 72], "lambda_min": [1, 43, 72], "lambda_sum_largest": [1, 72], "lambda_sum_smallest": [1, 72], "log_det": [1, 32, 72], "log_sum_exp": [1, 13, 72], "matrix_frac": [1, 67, 72], "max": [1, 9, 11, 13, 17, 18, 20, 23, 27, 28, 43, 44, 48, 49, 58, 69, 71, 72, 76], "min": [1, 9, 11, 14, 43, 48, 58, 69, 71, 72, 76], "mixed_norm": [1, 72], "norm": [1, 16, 18, 19, 23, 24, 25, 28, 30, 31, 34, 36, 41, 55, 57, 67, 68, 69, 70, 72, 74, 75], "norm1": [1, 54], "norm2": [1, 54], "norm_inf": 1, "normnuc": 1, "one_minus_po": [1, 43, 69], "perspect": [1, 9, 24, 72, 76], "pf_eigenvalu": [1, 47, 69], "pnorm": [1, 56, 69, 72], "ptp": [1, 72, 76], "prod": [1, 5, 43, 69], "quad_form": [1, 39, 67, 69, 70, 72, 76], "quad_over_lin": [1, 7, 14, 69, 72], "resolv": [1, 14, 31, 69, 76], "sigma_max": 1, "std": [1, 72, 76], "sum_largest": [1, 72], "sum_smallest": [1, 72], "sum_squar": [1, 7, 16, 19, 21, 22, 25, 31, 36, 38, 44, 52, 59, 69, 70, 72, 74, 75], "suppfuncatom": [1, 13], "tr_inv": [1, 72, 76], "tv": [1, 34, 72], "var": [1, 23, 34, 43, 72, 74, 75, 76], "von_neumann_entr": [1, 72, 76], "might": [1, 6, 7, 14, 19, 21, 36, 37, 43, 56, 70, 71, 75, 76], "constructor": [1, 67, 69, 76], "some": [1, 5, 6, 7, 9, 13, 14, 18, 19, 24, 29, 38, 44, 47, 49, 53, 66, 67, 68, 69, 70, 71, 75, 76], "For": [1, 2, 3, 4, 6, 7, 9, 13, 14, 19, 21, 24, 25, 27, 28, 31, 34, 36, 37, 45, 51, 58, 59, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "exampl": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 21, 23, 25, 26, 28, 32, 33, 42, 43, 44, 46, 48, 51, 54, 55, 56, 59, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76], "x": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "mapsto": [1, 13, 43], "lambda_": [1, 4, 43, 47, 69, 71, 72], "construct": [1, 2, 4, 5, 7, 8, 9, 10, 14, 17, 18, 20, 23, 33, 34, 37, 38, 45, 49, 52, 55, 57, 59, 67, 68, 69, 70, 71, 72, 74, 75, 76], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 38, 42, 43, 44, 45, 47, 48, 50, 51, 52, 55, 57, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "inherit": [1, 14], "directli": [1, 2, 5, 7, 9, 10, 11, 12, 27, 29, 66, 67, 76], "indirectli": 1, "most": [1, 4, 5, 7, 8, 14, 51, 54, 55, 57, 64, 67, 75], "wai": [1, 5, 6, 7, 8, 9, 13, 14, 17, 19, 24, 53, 58, 59, 66, 67, 68, 70, 74, 76], "altern": [1, 4, 7, 21, 66, 69], "wrapper": [1, 2, 4, 7, 14, 66, 70, 75], "initi": [1, 16, 27, 28, 30, 33, 34, 44, 51, 59, 61, 74, 75], "run": [1, 21, 24, 27, 31, 33, 38, 44, 58, 67, 69, 71, 76], "cp": [1, 2, 7, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 66, 67, 68, 69, 70, 71, 74, 75, 76], "shape": [1, 2, 5, 6, 13, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 45, 46, 48, 53, 54, 56, 59, 67, 68, 69, 72, 74, 76], "2": [1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75], "symmetr": [1, 3, 5, 6, 9, 13, 20, 32, 38, 40, 67, 71, 72, 74, 75, 76], "true": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "print": [1, 4, 5, 7, 8, 11, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 58, 59, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75], "type": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 28, 58, 63, 67, 71, 74, 75, 76], "show": [1, 18, 19, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 44, 50, 51, 52, 53, 54, 55, 56, 57, 67, 68, 69, 71, 74, 75], "unary_oper": [1, 2], "happen": [1, 9, 58, 71, 74], "becaus": [1, 3, 4, 7, 9, 11, 14, 24, 31, 50, 55, 56, 66, 70, 75], "1": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75], "negat": [1, 2], "base": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 19, 22, 32, 33, 59, 63, 64, 66, 68, 69, 70, 71, 75, 76], "3": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 54, 55, 56, 59, 60, 66, 68, 69, 70, 71, 72, 74, 75], "last": [1, 7, 8, 9, 10, 12, 14, 17, 24, 27, 30, 35, 71, 74], "ani": [1, 2, 4, 6, 7, 10, 12, 13, 14, 18, 24, 30, 37, 63, 66, 67, 68, 69, 70, 72, 74, 75, 76], "ha": [1, 3, 4, 5, 9, 10, 11, 13, 14, 15, 17, 18, 19, 22, 24, 27, 29, 30, 31, 33, 34, 35, 38, 43, 45, 47, 49, 51, 53, 60, 63, 67, 68, 69, 70, 71, 72, 75, 76], "been": [1, 9, 11, 17, 35, 51, 60, 63, 66, 75, 76], "arg": [1, 2, 3, 4, 5, 7, 9, 10, 11, 21, 75], "abstract": [1, 5, 6, 8, 14, 24, 76], "properti": [1, 5, 6, 7, 17, 18, 20, 23, 25, 28, 32, 33, 43, 67, 75, 76], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 21, 24, 30, 32, 45, 58, 59, 61, 63, 64, 66, 67, 68, 69, 71, 72, 75, 76], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "describ": [1, 6, 7, 9, 14, 15, 18, 24, 30, 33, 42, 43, 44, 58, 63, 69, 70, 71, 72, 75, 76], "closur": [1, 6], "region": [1, 5, 6, 24, 75], "finit": [1, 5, 6], "grad": [1, 6, 13], "give": [1, 3, 4, 6, 9, 13, 19, 22, 24, 29, 31, 35, 48, 63, 67, 72, 74, 75, 76], "sub": [1, 6, 27, 68], "super": [1, 6, 75], "gradient": [1, 4, 6, 7, 16, 34, 43, 44, 53, 73, 75], "r": [1, 4, 5, 6, 9, 10, 11, 14, 15, 16, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 54, 55, 56, 57, 64, 67, 69, 70, 71, 72, 74, 75], "t": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 49, 55, 57, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76], "matrix": [1, 2, 4, 5, 6, 9, 14, 15, 17, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 40, 48, 53, 54, 56, 67, 68, 70, 73, 74, 75, 76], "vector": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 17, 18, 19, 22, 23, 29, 30, 31, 33, 34, 36, 38, 42, 43, 44, 49, 52, 55, 58, 66, 67, 68, 70, 71, 73], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 24, 31, 45, 67, 68, 69, 72, 75], "indic": [1, 6, 7, 13, 14, 22, 24, 34, 37, 39, 41, 47, 56, 63, 66, 67, 74, 75, 76], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76], "unknown": [1, 3, 31, 45, 51, 68, 69, 71, 72, 74, 76], "outsid": [1, 13, 18, 24, 29, 30, 31, 67, 70], "map": [1, 6, 7, 8, 9, 10, 11, 12, 14, 44, 70, 74, 76], "scipi": [1, 3, 6, 7, 14, 15, 20, 25, 32, 59, 60, 66, 70, 74, 75, 76], "csc": [1, 6], "spars": [1, 6, 10, 12, 14, 22, 25, 30, 34, 53, 54, 55, 57, 59, 66, 74, 75, 76], "is_atom_affin": 1, "bool": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 67, 75, 76], "is_atom_concav": 1, "concav": [1, 3, 4, 6, 7, 13, 16, 33, 43, 45, 50, 53, 55, 68, 69, 71, 72], "is_atom_convex": 1, "convex": [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 35, 38, 43, 44, 45, 47, 50, 51, 53, 55, 57, 59, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76], "is_atom_log_log_affin": 1, "is_atom_log_log_concav": 1, "is_atom_log_log_convex": 1, "is_decr": 1, "idx": [1, 54, 55, 57], "non": [1, 5, 7, 8, 10, 12, 13, 14, 20, 24, 31, 33, 37, 39, 41, 55, 57, 58, 59, 63, 66, 68, 69, 70, 71, 75, 76], "increas": [1, 3, 4, 5, 28, 34, 43, 45, 46, 50, 54, 56, 57, 66, 67, 68, 69, 71, 76], "argument": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 42, 43, 45, 66, 67, 68, 69, 70, 71, 72, 75, 76], "is_incr": 1, "decreas": [1, 3, 43, 45, 50, 57, 68, 69, 71, 76], "add_expr": 2, "arg_group": 2, "iter": [2, 6, 7, 13, 18, 20, 21, 24, 25, 28, 31, 34, 44, 51, 67, 75], "affatom": 2, "number": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 44, 45, 48, 49, 61, 68, 69, 71, 72, 75, 76], "binary_oper": 2, "lh_exp": 2, "rh_exp": 2, "binaryoper": 2, "multipl": [2, 4, 5, 6, 8, 14, 29, 44, 53, 66, 68, 69, 70, 72, 74, 75, 76], "semant": [2, 4, 6, 8, 59, 67, 68, 71, 72, 76], "exactli": [2, 4, 5, 6, 7, 24, 54, 67, 68, 69, 72], "numpi": [2, 4, 5, 6, 7, 8, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 66, 68, 70, 72, 74, 75], "except": [2, 4, 6, 7, 10, 12, 13, 14, 18, 20, 23, 25, 28, 31, 32, 33, 45, 63, 67, 68, 69, 71, 74, 75, 76], "scalar": [2, 3, 4, 5, 7, 27, 42, 57, 66, 67, 68, 70, 71, 73, 74, 76], "permit": [2, 71], "creat": [2, 4, 5, 6, 7, 8, 14, 18, 24, 27, 28, 30, 32, 33, 40, 41, 51, 54, 56, 60, 66, 67, 68, 74, 76], "left": [2, 4, 16, 18, 21, 24, 28, 31, 33, 34, 54, 55, 56, 57, 68, 69, 72, 75], "hand": [2, 7, 9, 14, 18, 24, 66, 70], "side": [2, 7, 9, 24, 42, 66, 67, 70, 75], "right": [2, 4, 9, 16, 18, 19, 21, 23, 24, 28, 31, 33, 34, 35, 55, 57, 63, 66, 68, 69, 72, 75], "lh_expr": 2, "rh_expr": 2, "divis": [2, 57], "block_list": 2, "block": [2, 7, 9, 14, 18, 21, 24, 30, 69, 70, 71, 72], "take": [2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 22, 24, 27, 44, 64, 66, 68, 69, 70, 72, 75, 76], "intern": [2, 4, 6, 17, 51, 76], "stack": [2, 44, 72], "horizont": [2, 20, 72], "vertic": [2, 20, 72], "repres": [2, 4, 5, 6, 9, 10, 12, 13, 17, 18, 24, 30, 34, 35, 36, 48, 51, 63, 66, 70, 74, 76], "complex": [2, 6, 11, 14, 17, 18, 23, 53, 68, 72, 73, 76], "conjug": [2, 67, 72], "1d": [2, 6, 18, 76], "discret": [2, 4, 9, 15, 18, 23, 24, 31, 34], "convolut": 2, "two": [2, 3, 5, 6, 8, 9, 13, 14, 15, 17, 24, 27, 30, 31, 33, 45, 49, 66, 67, 68, 69, 70, 71, 74, 76], "c": [2, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 19, 20, 22, 24, 31, 34, 37, 38, 40, 41, 42, 44, 45, 51, 60, 64, 66, 68, 69, 70, 72, 74, 75, 76], "b": [2, 5, 7, 8, 9, 10, 12, 14, 16, 18, 20, 24, 25, 26, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 49, 51, 52, 58, 59, 66, 68, 70, 71, 74, 75, 76], "length": [2, 4, 5, 6, 9, 29, 51, 53, 67, 71, 72, 75], "n": [2, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 67, 69, 70, 71, 72, 74, 75, 76], "m": [2, 3, 4, 5, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 54, 55, 56, 57, 59, 69, 70, 72, 74, 75], "respect": [2, 5, 7, 9, 13, 15, 19, 24, 42, 43, 44, 51, 67, 68, 69, 70, 72, 74, 75], "c_k": 2, "sum_": [2, 4, 13, 14, 15, 19, 21, 22, 24, 26, 27, 29, 31, 32, 34, 35, 36, 43, 44, 48, 49, 55, 69, 72], "j": [2, 4, 15, 17, 20, 23, 24, 25, 27, 32, 33, 34, 37, 40, 47, 48, 49, 61, 69, 72], "k": [2, 4, 5, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 48, 69, 72, 75], "a_ib_j": 2, "quad": [2, 14, 15, 18, 22, 23, 29, 31, 40, 41, 43, 44, 45, 49, 55], "0": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75], "ldot": [2, 3, 14, 19, 22, 24, 31, 34, 40, 41, 43, 44, 45, 48, 55, 57, 69, 71, 72], "match": [2, 5, 20, 27, 34], "constant": [2, 3, 4, 7, 10, 11, 12, 19, 20, 27, 28, 29, 42, 45, 51, 58, 67, 68, 69, 70, 71, 72, 74, 75, 76], "int": [2, 3, 4, 5, 6, 7, 9, 10, 12, 18, 20, 22, 24, 27, 54, 57, 67, 76], "axisatom": [2, 4], "cumul": [2, 3, 4, 72], "being": [2, 14, 22, 76], "across": [2, 7, 9, 21, 48, 76], "2d": [2, 4, 6, 18, 67, 76], "diag_mat": 2, "diag_vec": 2, "extract": [2, 14, 76], "diagon": [2, 6, 32, 67], "make": [2, 5, 7, 8, 9, 14, 18, 19, 20, 22, 24, 26, 31, 37, 54, 56, 58, 63, 68, 69, 71, 74, 75, 76], "numer": [2, 3, 4, 5, 6, 9, 12, 13, 14, 19, 31, 33, 50, 58, 67, 68, 69, 70, 74, 76], "question": [2, 14, 47, 58], "default": [2, 3, 4, 5, 7, 13, 14, 66, 67, 70, 72, 74, 75, 76], "abov": [2, 5, 7, 14, 18, 19, 28, 35, 42, 44, 45, 51, 54, 56, 60, 63, 66, 67, 68, 70, 71, 74, 75], "main": [2, 8, 14, 67, 75], "below": [2, 7, 9, 13, 14, 18, 19, 20, 22, 23, 24, 27, 30, 31, 33, 34, 43, 47, 49, 50, 51, 52, 61, 63, 66, 67, 68, 69, 71, 74, 75, 76], "kth": [2, 72], "order": [2, 5, 8, 9, 10, 11, 12, 14, 19, 20, 27, 29, 35, 37, 43, 44, 53, 64, 70, 72, 75, 76], "differ": [2, 4, 6, 8, 14, 15, 18, 21, 25, 33, 34, 35, 36, 37, 39, 45, 53, 54, 59, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76], "between": [2, 3, 4, 5, 8, 9, 13, 14, 15, 19, 24, 27, 30, 34, 45, 48, 49, 67, 74, 75], "adjac": 2, "element": [2, 4, 5, 15, 18, 20, 30, 32, 33, 69, 71, 72], "second": [2, 5, 7, 9, 10, 12, 14, 18, 20, 22, 24, 25, 27, 31, 43, 53, 57, 59, 64, 67, 72, 75, 76], "unchang": 2, "arg_list": 2, "concaten": [2, 4, 8, 9, 19, 35, 66, 72], "arbitrari": [2, 27, 76], "imaginari": [2, 18, 23, 67, 72], "part": [2, 5, 8, 14, 18, 23, 59, 63, 64, 67, 72, 75, 76], "kei": [2, 8, 9, 14, 75], "orig_kei": 2, "slice": [2, 5, 9], "support": [2, 3, 5, 7, 8, 9, 13, 14, 59, 63, 66, 67, 70, 75, 76], "via": [2, 4, 6, 7, 17, 18, 24, 31, 45, 60, 66, 67, 69, 71, 72, 75, 76], "overload": [2, 5, 6, 66], "low": [2, 7, 8, 14, 19, 66, 71], "level": [2, 7, 8, 14, 18, 27, 29, 35, 48, 60, 66, 67], "should": [2, 5, 6, 7, 9, 11, 14, 24, 27, 46, 51, 55, 58, 60, 63, 67, 69, 70, 72, 74, 75, 76], "instanti": [2, 4, 7, 8, 75, 76], "e": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 22, 24, 25, 27, 29, 32, 34, 44, 45, 58, 60, 66, 67, 68, 69, 70, 72, 74, 75, 76], "kroneck": 2, "product": [2, 4, 6, 14, 18, 24, 33, 37, 47, 49, 63, 69, 70, 71, 72, 76], "stat": [2, 4, 15, 35, 73], "keepdim": [2, 4, 72], "fals": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 24, 30, 54, 57, 58, 67, 68, 70, 72, 75], "y": [2, 3, 4, 5, 9, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 34, 35, 42, 43, 44, 45, 49, 50, 51, 54, 55, 56, 57, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "float": [2, 3, 4, 5, 6, 7, 8, 13, 24, 27, 42, 55, 68, 75, 76], "ndarrai": [2, 5, 6, 8, 10, 12, 14, 68, 72, 74, 76], "nest": [2, 75], "input": [2, 3, 5, 8, 9, 10, 11, 13, 14, 15, 26, 27, 29, 31, 43, 44, 51, 72, 75, 76], "flatten": [2, 4, 5, 14, 18, 19, 20, 22, 24, 30, 72], "alreadi": [2, 9, 19, 66, 75], "linear": [2, 5, 9, 10, 12, 13, 14, 18, 19, 20, 23, 24, 25, 26, 27, 30, 31, 36, 41, 44, 53, 55, 56, 57, 64, 67, 75, 76], "dim": [2, 7, 20, 66, 72], "tupl": [2, 4, 6, 9, 10, 24, 47, 67, 76], "assum": [2, 3, 4, 5, 9, 10, 12, 15, 20, 24, 29, 30, 31, 43, 51, 63, 75], "texttt": [2, 4, 13, 29, 72, 76], "x_1": [2, 4, 11, 20, 44, 69, 72], "otim": 2, "cdot": [2, 4, 20, 25, 44, 48, 49, 51, 69, 72], "x_n": [2, 4, 31, 44, 45, 69, 72], "compos": [2, 75], "len": [2, 14, 20, 22, 24, 29, 31, 32, 51, 52, 54, 56], "implicit": [2, 3, 4, 13], "subsystem": [2, 75], "partial": [2, 13, 19, 42, 49, 72, 76], "along": [2, 4, 8, 17, 18, 24, 30, 51, 63, 66, 69, 73, 75], "text": [2, 3, 5, 13, 18, 20, 23, 25, 27, 28, 29, 32, 33, 46, 47, 48, 49, 63, 68, 69, 70, 72, 74], "th": [2, 8, 14, 21, 30, 35, 43, 48], "tr": [2, 4, 32, 40, 69, 72], "x_k": [2, 15], "x_": [2, 4, 31, 47, 49, 69, 72, 74], "integ": [2, 4, 5, 6, 7, 9, 10, 12, 14, 18, 24, 53, 59, 64, 71, 73, 75, 76], "encod": [2, 6, 7, 8, 11, 22, 24], "dimens": [2, 4, 5, 6, 7, 10, 12, 14, 27, 31, 32, 33, 67, 68, 69, 72, 74, 76], "out": [2, 3, 10, 12, 13, 14, 17, 21, 22, 24, 27, 34, 37, 45, 51, 54, 59, 63, 67, 68, 69, 71, 75, 76], "tensor": [2, 44], "defin": [2, 4, 5, 8, 13, 14, 17, 18, 20, 22, 24, 27, 31, 34, 36, 37, 39, 40, 41, 49, 51, 54, 56, 63, 64, 67, 71, 72, 75], "rais": [2, 4, 5, 6, 7, 8, 11, 13, 18, 20, 23, 25, 28, 32, 33, 45, 58, 68, 69, 70, 71, 74, 75, 76], "valueerror": [2, 5, 7, 8, 13, 68, 70, 76], "If": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 27, 32, 36, 45, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "wrap": 2, "assert": [2, 11, 45, 46, 50, 63, 69, 70, 71], "psd": [2, 4, 6, 7, 9, 10, 12, 13, 14, 20, 32, 66, 67, 76], "str": [2, 4, 6, 7, 8, 10, 11, 12, 13, 75], "f": [2, 3, 4, 7, 9, 10, 11, 13, 14, 16, 17, 20, 21, 26, 41, 42, 45, 54, 56, 57, 66, 68, 69, 70, 71, 72, 75, 76], "unvector": 2, "new": [2, 6, 7, 8, 9, 11, 14, 18, 19, 24, 27, 28, 33, 59, 60, 70, 71, 72, 74], "entri": [2, 3, 4, 5, 6, 7, 14, 22, 24, 28, 36, 37, 39, 40, 44, 47, 49, 54, 61, 67, 68, 69, 72, 74, 76], "store": [2, 5, 10, 12, 17, 18, 32, 33, 34, 59, 66, 68, 69, 71, 72, 75], "column": [2, 4, 5, 9, 10, 12, 15, 20, 22, 30, 34, 72, 74], "major": [2, 5, 8, 14, 19, 24, 70, 72, 76], "also": [2, 3, 7, 8, 9, 13, 14, 17, 24, 29, 30, 31, 35, 36, 43, 45, 53, 55, 57, 59, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "known": [2, 19, 29, 33, 34, 36, 41, 43, 45, 47, 49, 51, 68, 69, 71, 72, 75], "fortran": [2, 20, 75], "ortran": 2, "standard": [2, 3, 4, 9, 14, 28, 31, 33, 37, 39, 51, 59, 68, 70, 72, 73, 74, 76], "inner": [2, 4, 14, 72], "alwai": [2, 13, 24, 68, 72, 76], "have": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 24, 29, 30, 31, 36, 37, 39, 43, 45, 48, 51, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "note": [2, 4, 5, 7, 13, 15, 17, 18, 23, 24, 30, 31, 32, 34, 58, 61, 66, 68, 69, 70, 71, 75], "independ": [2, 22, 24, 32, 58, 68], "one": [2, 4, 5, 6, 7, 8, 9, 13, 14, 19, 22, 23, 24, 27, 28, 29, 34, 37, 41, 45, 53, 58, 60, 63, 67, 68, 69, 70, 71, 72, 75, 76], "d": [2, 9, 10, 12, 14, 19, 20, 23, 24, 25, 30, 33, 41, 42, 43, 44, 45, 46, 51, 55, 57, 69, 75], "drop": [2, 4, 72, 76], "after": [2, 4, 5, 6, 7, 10, 12, 14, 23, 24, 28, 34, 45, 60, 67, 69, 74, 75, 76], "ax": [2, 4, 14, 16, 22, 24, 30, 31, 32, 33, 34, 36, 37, 38, 39, 52, 71, 74, 75], "unaryoper": 2, "strictli": [2, 34, 44, 72], "upper": [2, 6, 13, 20, 24, 27, 51, 54, 55, 56, 57, 71, 72, 75, 76], "triagon": 2, "perform": [2, 5, 14, 18, 22, 30, 31, 42, 58, 60, 63, 75, 76], "row": [2, 4, 5, 6, 9, 14, 18, 20, 25, 31, 34, 36, 58, 72, 75], "np": [2, 4, 5, 6, 7, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 50, 51, 52, 54, 55, 56, 57, 59, 70], "arrai": [2, 3, 4, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 68, 69, 76], "10": [2, 4, 5, 7, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 39, 41, 44, 45, 46, 50, 51, 52, 54, 55, 67, 69, 70, 71, 74, 75, 76], "11": [2, 18, 20, 22, 24, 25, 26, 28, 31, 33, 34, 43, 51, 69, 72, 74, 75, 76], "12": [2, 4, 20, 22, 24, 25, 28, 30, 31, 32, 33, 34, 43, 51, 71, 75, 76], "13": [2, 4, 20, 22, 25, 26, 28, 31, 33, 38, 43, 51, 52, 61, 75], "14": [2, 4, 18, 20, 22, 25, 28, 31, 33, 35, 43, 44, 49, 75, 76], "15": [2, 4, 20, 22, 23, 24, 25, 28, 30, 31, 33, 36, 37, 39, 44, 51, 60, 70, 74], "16": [2, 18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 54, 55, 56, 57, 70, 74], "17": [2, 4, 20, 22, 24, 25, 28, 31, 61, 71, 75, 76], "18": [2, 20, 22, 24, 25, 28, 31, 66, 76], "19": [2, 20, 22, 25, 28, 31, 60], "20": [2, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 39, 44, 54, 56, 57, 59, 68, 75, 76], "21": [2, 20, 22, 25, 28, 31, 74], "22": [2, 20, 22, 24, 25, 28, 31, 32, 43], "23": [2, 4, 19, 20, 28, 31], "24": [2, 20, 26, 28, 31, 32], "25": [2, 4, 15, 20, 23, 24, 28, 30, 31, 38, 44, 51], "strict": [2, 5, 32, 72, 74], "triangular": [2, 72], "specifi": [2, 4, 6, 7, 8, 9, 13, 14, 27, 50, 52, 59, 67, 68, 71, 74, 75, 76], "invert": [2, 8, 9, 10, 11, 12, 14, 75], "ensur": [2, 24, 28, 44, 67, 68], "exponenti": [3, 5, 9, 10, 12, 14, 43, 45, 64, 69, 75, 76], "suppli": [3, 7, 8, 13, 14, 27, 45, 55, 66, 69, 70, 71], "absolut": [3, 5, 13, 14, 23, 33, 75], "operatornam": [3, 4, 72], "begin": [3, 4, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 69, 72, 75], "2m": [3, 72], "geq": [3, 4, 5, 14, 15, 19, 27, 39, 42, 43, 48, 57, 67, 68, 69, 71, 72, 75], "leq": [3, 5, 14, 18, 22, 24, 27, 30, 31, 37, 39, 41, 42, 43, 44, 45, 46, 48, 52, 68, 69, 71, 72, 75], "end": [3, 4, 8, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 63, 69, 70, 71, 72, 75], "disambigu": 3, "http": [3, 4, 7, 10, 12, 14, 24, 25, 45, 58, 63, 75], "github": [3, 14, 58, 59, 60, 67, 69, 71, 72, 76], "com": [3, 14, 22, 31, 75], "issu": [3, 14, 19, 33, 58, 59, 60, 63, 67, 69, 71, 72], "733": 3, "distribut": [3, 10, 12, 14, 15, 18, 19, 24, 32, 43, 44, 63, 75, 76], "normal": [3, 4, 14, 19, 20, 23, 25, 28, 32, 34, 44, 49, 51, 54, 55, 56, 57, 63, 67, 72, 75], "random": [3, 13, 15, 16, 18, 19, 22, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 52, 54, 55, 56, 57, 59, 70, 74, 75], "quadrat": [3, 7, 8, 9, 10, 11, 12, 14, 31, 53, 64, 70, 75, 76], "approxim": [3, 4, 5, 13, 28, 33, 42, 43, 46, 49, 53, 54, 70, 72, 75, 76], "modest": 3, "accuraci": [3, 4, 14, 31, 55, 56, 58, 72, 74, 75], "over": [3, 5, 7, 13, 14, 20, 24, 28, 30, 44, 51, 55, 57, 59, 67, 71, 72, 74, 75, 76], "4": [3, 4, 7, 11, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 43, 44, 47, 51, 57, 68, 69, 70, 72, 74, 75], "detail": [3, 5, 7, 14, 30, 58, 65, 66, 72, 74, 75, 76], "natur": [3, 17, 43, 59, 76], "pr": [3, 55, 72], "1224": [3, 72], "analog": [3, 69, 70], "call": [3, 6, 7, 8, 9, 14, 15, 17, 21, 42, 45, 58, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "log_ndtr": 3, "opt": [3, 9, 24, 44], "would": [3, 6, 7, 14, 17, 19, 24, 27, 30, 37, 39, 41, 42, 43, 49, 58, 67, 69, 70, 71, 72, 74, 75, 76], "obviou": 3, "casual": 3, "user": [3, 5, 6, 7, 8, 14, 22, 31, 36, 51, 59, 60, 64, 66, 72, 75, 76], "gamma": [3, 13, 27, 31, 43, 46, 70, 72, 74, 76], "full": [3, 14, 45, 66, 67, 75, 76], "rang": [3, 4, 7, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 40, 41, 44, 45, 48, 49, 51, 54, 55, 56, 57, 72, 74, 75], "approach": [3, 13, 17, 30, 31, 56, 59], "perfect": [3, 7, 22, 36], "goe": [3, 13, 14], "infin": [3, 4, 13], "228": [3, 72], "special": [3, 15, 42, 63, 75, 76], "evalu": [3, 6, 7, 11, 13, 44, 69, 70, 71], "rather": [3, 5, 13, 14, 28, 59, 75, 76], "than": [3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 17, 19, 22, 24, 28, 31, 34, 43, 55, 56, 57, 59, 67, 70, 71, 74, 75, 76], "regress": [3, 14, 19, 36, 44, 53], "arg1": 3, "arg2": 3, "sequenc": [3, 4, 8, 9, 30, 31, 71, 75], "alia": [3, 4], "p": [3, 4, 6, 7, 9, 10, 12, 14, 15, 17, 21, 22, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 40, 41, 44, 45, 48, 56, 58, 61, 67, 69, 70, 72, 76], "max_denom": [3, 4], "1024": [3, 4], "expon": [3, 70], "must": [3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 22, 23, 24, 27, 29, 42, 43, 44, 45, 51, 58, 59, 63, 67, 69, 70, 71, 72, 74, 75, 76], "specif": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 20, 24, 32, 47, 49, 53, 63, 75, 76], "given": [3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 18, 21, 22, 24, 27, 28, 29, 30, 31, 34, 35, 36, 42, 43, 44, 45, 47, 51, 55, 57, 66, 67, 68, 70, 71, 72, 75, 76], "ccl": 3, "posit": [3, 4, 5, 6, 9, 10, 12, 14, 15, 18, 22, 24, 29, 31, 32, 33, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 55, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "same": [3, 4, 5, 6, 13, 14, 16, 18, 23, 24, 25, 26, 28, 29, 32, 33, 58, 63, 66, 67, 68, 69, 72, 74, 75, 76], "8": [3, 7, 15, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 43, 44, 45, 47, 49, 52, 72, 75, 76], "infti": [3, 4, 13, 24, 66, 76], "neq": [3, 4, 27, 48, 69, 72], "ration": [3, 4], "represent": [3, 4, 5, 6, 7, 11, 13, 14, 18, 23, 51, 66, 70, 74, 75], "small": [3, 7, 14, 24, 33, 42, 43, 44, 52, 56, 66, 70, 75], "denomin": [3, 4, 7, 50, 71], "emploi": 3, "when": [3, 4, 5, 6, 7, 9, 13, 14, 18, 22, 24, 27, 28, 31, 39, 41, 42, 50, 55, 60, 66, 68, 69, 70, 71, 72, 74, 75, 76], "comput": [3, 4, 6, 7, 13, 18, 20, 22, 23, 24, 32, 42, 43, 44, 53, 55, 57, 63, 67, 70, 71, 74, 75], "better": [3, 4, 5, 19, 31, 56], "fraction": [3, 4, 23, 24, 27, 29, 30, 44, 53, 75], "usual": [3, 4, 13, 14, 43, 54, 56, 74, 75], "exact": [3, 4, 7, 14, 32, 76], "No": [3, 9, 13, 27, 58, 75], "cone": [3, 4, 5, 7, 9, 10, 12, 14, 32, 34, 53, 64, 66, 67, 74, 75, 76], "Such": [3, 13, 14], "could": [3, 7, 13, 17, 24, 68, 70, 74, 75], "handl": [3, 4, 9, 13, 14, 31, 58, 75, 76], "reli": [3, 59, 67], "result": [3, 4, 5, 7, 9, 19, 22, 24, 26, 31, 36, 37, 39, 40, 41, 54, 59, 63, 68, 70, 71, 72, 74, 75, 76], "fewer": 3, "current": [3, 5, 9, 13, 14, 18, 24, 66, 74, 75, 76], "method": [3, 5, 6, 7, 8, 9, 13, 14, 17, 21, 25, 27, 33, 42, 44, 45, 53, 54, 56, 58, 66, 67, 69, 70, 71, 73, 74, 76], "even": [3, 7, 8, 9, 12, 14, 19, 20, 24, 28, 63, 68, 69, 70, 71, 74, 75], "reformul": [3, 5], "re": [3, 5, 14, 24, 31, 33, 34, 44, 67, 69, 70, 71, 74, 75, 76], "interest": [3, 8, 14, 22, 24, 28, 47, 66, 67, 70, 71, 76], "help": [3, 8, 14, 71, 75, 76], "enhanc": [3, 14], "abil": [3, 14, 75, 76], "pleas": [3, 8, 9, 10, 11, 12, 14, 58, 61, 67, 69, 71, 75, 76], "get": [3, 6, 7, 14, 22, 24, 31, 59, 60, 68, 73, 74, 75, 76], "touch": [3, 14], "u": [3, 8, 14, 21, 24, 27, 29, 31, 34, 45, 59, 66, 67, 69, 74], "check": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 23, 24, 25, 27, 33, 35, 45, 58, 59, 67, 68, 69, 70, 71, 75, 76], "1222": [3, 14], "final": [3, 14, 18, 22, 23, 24, 27, 30, 44, 51, 69, 70, 75], "determin": [3, 8, 13, 20, 24, 27, 30, 33, 63, 68, 69, 72, 74, 75], "g": [3, 4, 6, 9, 13, 14, 18, 20, 24, 26, 27, 30, 39, 41, 48, 58, 66, 67, 69, 70, 74, 75, 76], "001": [3, 4, 13, 27], "1001": 3, "1000": [3, 24, 31, 32, 44, 57, 67, 75], "math": [3, 15, 18, 23, 24, 51, 59, 61], "while": [3, 5, 8, 9, 13, 18, 19, 21, 24, 27, 36, 43, 55, 57, 58, 63, 68, 69, 71, 72, 75, 76], "0001": 3, "version": [3, 8, 10, 12, 14, 18, 20, 59, 60, 63, 67, 69, 70, 72, 75, 76], "program": [3, 6, 7, 8, 9, 10, 11, 12, 14, 23, 24, 33, 42, 43, 44, 46, 47, 48, 49, 50, 52, 58, 59, 61, 64, 73, 74, 76], "consid": [3, 4, 8, 13, 14, 15, 17, 18, 20, 22, 24, 26, 27, 29, 33, 42, 43, 45, 51, 56, 59, 75, 76], "onli": [3, 4, 5, 6, 7, 9, 13, 14, 18, 19, 20, 23, 24, 27, 30, 31, 45, 58, 60, 63, 67, 68, 69, 70, 71, 75, 76], "relev": [3, 6, 7, 64, 75], "solv": [3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 66, 67, 68, 69, 73, 74, 76], "alpha": [3, 5, 14, 20, 24, 27, 29, 30, 31, 34, 35, 42, 44, 46, 66, 72, 75], "beta": [3, 20, 29, 46, 54, 55, 56, 57, 72], "root": [3, 9, 10, 14, 60], "neither": [4, 13, 69], "nor": [4, 13, 69], "langl": [4, 13, 51, 72], "sort": [4, 14, 44, 72], "rangl": [4, 13, 51, 72], "both": [4, 6, 7, 9, 12, 13, 14, 15, 17, 24, 31, 34, 67, 68, 69, 70, 71, 72, 75, 76], "less": [4, 5, 31, 56, 71, 75], "conceptu": 4, "pad": 4, "zero": [4, 6, 7, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 27, 28, 30, 31, 32, 33, 34, 41, 43, 44, 54, 55, 56, 57, 66, 68, 75], "larger": [4, 7, 24, 34, 55, 57, 64, 68, 75], "gener": [4, 5, 6, 7, 8, 9, 10, 11, 17, 22, 24, 30, 31, 36, 37, 38, 39, 40, 41, 43, 45, 49, 55, 57, 58, 59, 63, 64, 66, 68, 69, 70, 71, 72, 75], "5": [4, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 60, 61, 66, 67, 68, 69, 70, 72, 74, 75], "boolean": [4, 6, 9, 22, 24, 30, 55, 57, 67, 75, 76], "weight": [4, 13, 18, 20, 23, 24, 25, 27, 28, 33, 43], "largest": [4, 72], "assign": [4, 6, 9, 14, 24, 35, 53, 54, 56, 67, 74], "etc": [4, 13, 14, 24, 74, 75], "uniti": 4, "enforc": [4, 6, 7, 14, 19, 21, 24, 32, 44, 71], "spectral": [4, 47, 69, 72], "radiu": [4, 24, 31, 41, 47, 69], "geometr": [4, 7, 11, 14, 42, 46, 48, 49, 51, 59, 61, 64, 73, 76], "option": [4, 6, 7, 8, 10, 12, 13, 14, 24, 31, 45, 58, 59, 60, 69, 71, 73, 74, 76], "p_1": [4, 48, 69, 72], "p_n": [4, 48, 69, 72], "frac": [4, 5, 18, 22, 27, 31, 42, 43, 44, 48, 49, 50, 51, 52, 55, 69, 72], "mathbf": [4, 16, 19, 20, 22, 24, 26, 28, 30, 31, 32, 38, 39, 40, 42, 43, 44, 45, 49, 52, 69, 71, 72], "tp": 4, "nonneg": [4, 5, 6, 7, 9, 10, 12, 13, 14, 33, 35, 50, 53, 54, 55, 56, 57, 67, 68, 70, 71, 74, 76], "nonzero": [4, 18, 20, 32, 33, 71], "ones": [4, 7, 19, 20, 24, 25, 33, 44, 48, 54, 68, 74], "unweight": 4, "x_i": [4, 15, 20, 21, 22, 26, 30, 33, 35, 55, 57, 72], "whenev": [4, 58, 76], "p_i": [4, 27, 29, 48], "unconstrain": 4, "rule": [4, 7, 14, 23, 33, 42, 43, 45, 58, 66, 70, 72, 73, 74, 75], "occur": [4, 14, 22, 29], "sai": [4, 14, 24, 31, 45, 69, 70, 71], "cannot": [4, 6, 7, 13, 24, 27, 33, 63, 67, 68, 69, 74, 75], "made": [4, 9, 14, 63, 75, 76], "immedi": [4, 14], "approx": [4, 23, 42, 54], "w_1": 4, "w_n": 4, "adjust": [4, 30, 33, 75], "modifi": [4, 6, 7, 14, 20, 23, 24, 63, 70, 76], "error": [4, 6, 7, 14, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 44, 45, 52, 54, 55, 56, 57, 60, 70, 71, 74, 75, 76], "found": [4, 5, 14, 18, 25, 26, 30, 33, 34, 51, 52, 58, 74, 75, 76], "through": [4, 5, 6, 7, 9, 14, 19, 24, 43, 44, 61, 63, 68, 70, 75, 76], "seen": [4, 31, 50], "string": [4, 6, 7, 8, 9, 74, 75], "maxim": [4, 9, 11, 13, 15, 16, 17, 24, 30, 32, 35, 45, 50, 51, 53, 55, 66, 68, 69, 71, 74], "point": [4, 5, 7, 13, 19, 20, 24, 30, 31, 33, 35, 51, 56, 58, 70, 75, 76], "few": [4, 14, 24, 28, 55, 75], "decim": 4, "place": [4, 14, 24, 30, 63, 66, 70], "sometim": [4, 19, 58, 70, 71], "34": [4, 20], "56": [4, 20], "78": [4, 20], "90": [4, 20], "45": [4, 18, 20, 30, 57], "30": [4, 18, 19, 20, 23, 28, 34, 59], "In": [4, 7, 8, 9, 14, 15, 19, 22, 24, 29, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 63, 67, 68, 69, 70, 74, 75, 76], "123": [4, 20], "456": 4, "789": 4, "256": 4, "341": 4, "295": 4, "512": 4, "1e": [4, 5, 7, 13, 22, 24, 25, 26, 30, 31, 32, 33, 42, 43, 44, 52, 70, 75], "contain": [4, 7, 9, 11, 13, 14, 18, 24, 27, 44, 51, 53, 63, 66, 67, 70, 76], "combin": [4, 13, 24, 63, 70], "73": 4, "60": [4, 18, 20, 24, 31, 44, 61, 75], "often": [4, 14, 19, 54, 75], "9": [4, 18, 20, 22, 24, 25, 26, 28, 30, 31, 33, 34, 41, 44, 45, 47, 49, 51, 52, 63, 75, 76], "153": 4, "term": [4, 9, 10, 13, 17, 20, 21, 30, 31, 55, 57, 63, 66, 76], "obj": [4, 15, 17, 18, 20, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 51, 66, 67, 68, 70, 74, 75], "constr": [4, 24, 30, 31, 67], "val": [4, 6, 44, 67, 70, 74], "whose": [4, 5, 6, 9, 10, 11, 44, 67], "possibl": [4, 7, 13, 14, 15, 22, 24, 27, 30, 58, 63, 70, 75, 76], "offer": [4, 8, 31, 63], "more": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 20, 22, 24, 31, 34, 53, 56, 59, 60, 63, 67, 68, 69, 70, 72, 75, 76], "accur": [4, 17, 31, 75], "cost": [4, 17, 24, 31, 33, 36, 56, 67, 75], "requir": [4, 8, 10, 12, 14, 35, 37, 44, 51, 59, 60, 63, 67, 68, 69, 70, 71, 75, 76], "inequ": [4, 5, 6, 7, 9, 12, 14, 26, 37, 39, 40, 43, 44, 51, 53, 71, 74, 75], "_": [4, 5, 7, 9, 14, 16, 21, 24, 34, 38, 39, 40, 42, 43, 44, 45, 49, 54, 57, 66, 68, 69, 72, 75], "mathbin": 4, "diamond": [4, 10, 12, 58, 59, 61, 63], "time": [4, 5, 7, 9, 14, 15, 16, 17, 20, 22, 24, 25, 27, 28, 30, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 59, 66, 69, 70, 72, 74, 75, 76], "ccc": 4, "prod_": [4, 24, 47, 69], "j1": 4, "a_": [4, 24, 37, 44, 46, 47, 49, 69], "1j": [4, 18, 23, 67, 69], "pj": 4, "mj": [4, 69], "harmon": 4, "reciproc": [4, 27, 43, 45, 69], "eigenvalu": [4, 47, 49, 67, 71, 72, 75], "det": [4, 32, 72], "sum_i": [4, 33, 57], "max_": [4, 27, 69, 72], "q": [4, 6, 7, 10, 12, 38, 39, 43, 66, 69, 72], "lp": [4, 24, 75, 76], "sum_k": [4, 72], "sum_l": [4, 72], "lvert": [4, 69, 72], "l": [4, 7, 10, 14, 18, 20, 27, 44, 51, 66, 70, 72], "rvert": [4, 69, 72], "l_": [4, 16], "mix": [4, 5, 9, 10, 12, 14, 53, 59, 64, 73, 75, 76], "valid": [4, 8, 13, 24, 44, 68, 69, 71], "fro": [4, 28, 69, 72], "frobeniu": [4, 49, 53, 72], "nuc": [4, 72], "singular": [4, 72], "inf": [4, 7, 20, 66, 69, 72, 74, 75], "set": [4, 5, 6, 7, 9, 13, 14, 18, 19, 22, 24, 25, 27, 28, 30, 31, 32, 34, 35, 38, 40, 42, 44, 45, 47, 53, 55, 57, 58, 64, 66, 67, 69, 70, 71, 72, 73, 74], "reduc": [4, 8, 9, 10, 11, 12, 14, 16, 18, 19, 21, 56, 59, 75], "size": [4, 5, 6, 7, 9, 13, 14, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 53, 54, 55, 56, 57, 68, 72, 76], "norm_nuc": 4, "f_recess": 4, "fact": [4, 7, 54, 57, 66, 67, 68], "epigraph": 4, "mathbb": [4, 5, 14, 15, 27, 55, 75], "fx": [4, 26, 41], "gt": 4, "sf": [4, 72], "se": 4, "web": [4, 7, 22, 31, 45], "stanford": [4, 24, 25, 30, 31, 34, 44, 45, 58, 68, 75], "edu": [4, 24, 25, 45, 58, 68], "boyd": [4, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 35, 45, 46, 48, 58, 59, 61, 66], "paper": [4, 5, 25, 33, 43, 44, 45, 58, 61, 69, 71, 76], "pdf": [4, 22, 24, 31, 58], "sw_aff_ctrl": 4, "view": [4, 24, 30, 70], "underli": [4, 25], "doe": [4, 5, 7, 9, 18, 19, 23, 27, 29, 34, 45, 54, 63, 67, 68, 69, 70, 71, 75], "callabl": [4, 6], "z": [4, 5, 7, 9, 13, 14, 21, 38, 42, 44, 45, 55, 67, 69, 71, 75], "perpect": 4, "perron": [4, 49, 53], "magnitud": [4, 23, 42], "equal": [4, 5, 6, 7, 9, 12, 14, 20, 24, 30, 37, 39, 41, 49, 51, 58, 66, 67, 71, 74, 75], "guarante": [4, 13, 24, 68, 69, 71, 76], "factori": 4, "treat": [4, 7, 28, 68, 69, 72, 74, 75], "accept": [4, 8, 9, 10, 11, 12, 13, 14, 63, 76], "_p": [4, 69, 72], "n_": [4, 5, 30, 39, 69, 72], "actual": [4, 13, 18, 19, 22, 24, 30, 31, 42, 43, 50], "otherwis": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 27, 28, 29, 55, 60, 63], "them": [4, 5, 9, 10, 19, 24, 54, 58, 70, 74], "come": [4, 60, 67, 75, 76], "acronym": 4, "peak": 4, "ignor": [4, 19, 24], "assume_psd": 4, "ij": [4, 15, 24, 27, 32, 34, 37, 40, 47, 48, 49, 69, 72], "2_": [4, 42], "si": [4, 69], "ddof": 4, "deviat": [4, 49], "quantiti": [4, 18, 23, 24, 36, 70], "bessel": 4, "correct": [4, 9, 67, 68], "smallest": [4, 72], "suppfunc": 4, "parent": [4, 67], "mathrm": [4, 14, 24, 34, 43, 51, 52, 55, 57, 69, 72], "definit": [4, 5, 63, 71, 72, 74, 75], "total_vari": 4, "total": [4, 19, 20, 22, 27, 29, 30, 31, 35, 37, 43, 48, 53, 68, 75, 76], "variat": [4, 53], "matric": [4, 6, 7, 9, 10, 12, 13, 14, 17, 18, 20, 31, 38, 40, 47, 49, 68, 69, 72, 73, 75, 76], "l1": [4, 25, 33, 53, 57], "l2": [4, 68], "extend": [4, 17, 31, 76], "third": [4, 14, 18, 63], "varianc": [4, 22, 39, 56], "quad_approx": 4, "von": 4, "neumann": 4, "entropi": [4, 5, 15, 53], "logm": [4, 72], "logarithm": [4, 5, 24, 45, 69], "textstyl": 4, "lambda_i": [4, 41, 43], "expect": [4, 14, 22, 39, 56, 70, 76], "applic": [4, 8, 9, 10, 11, 12, 14, 59, 63, 65, 67, 68, 75], "quantum": [4, 76], "restrict": [5, 7, 24, 59, 70], "optim": [5, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 55, 57, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76], "seven": 5, "semidefinit": [5, 6, 9, 10, 12, 14, 32, 38, 53, 64, 73, 74, 75, 76], "dimension": [5, 10, 12, 14, 33, 38, 67, 72, 74, 75, 76], "vast": [5, 70], "need": [5, 6, 7, 8, 11, 13, 14, 24, 31, 35, 38, 54, 56, 67, 70, 75, 76], "first": [5, 7, 8, 9, 14, 16, 18, 20, 24, 27, 28, 30, 43, 44, 57, 67, 70, 75, 76], "three": [5, 8, 14, 20, 34, 45, 68, 69, 72], "addition": [5, 43, 45, 67, 71], "know": [5, 7, 8, 14, 19, 24, 29, 70], "anyth": [5, 7, 8], "how": [5, 7, 9, 14, 19, 30, 32, 37, 42, 50, 52, 53, 54, 56, 63, 65, 67, 68, 69, 70, 71, 74, 75, 76], "api": [5, 8, 9, 10, 11, 12, 13, 59, 69, 75, 76], "do": [5, 8, 9, 13, 14, 18, 19, 23, 24, 27, 31, 33, 54, 56, 57, 59, 63, 67, 70, 75, 76], "provid": [5, 8, 9, 13, 14, 60, 63, 66, 67, 70, 71, 74, 75, 76], "advanc": [5, 7, 24, 61, 73, 75, 76], "find": [5, 7, 8, 9, 14, 15, 19, 24, 27, 33, 36, 39, 44, 51, 52, 54, 56, 57, 66, 71, 72, 74], "inspect": [5, 7, 50], "dual": [5, 7, 8, 9, 13, 16, 24, 34, 37, 39, 41, 45, 58, 67, 73, 75, 76], "residu": [5, 28, 36, 75], "constr_id": 5, "canon": [5, 6], "uniqu": [5, 24], "id": [5, 6, 8, 10, 12, 58], "is_dcp": [5, 6, 7, 44, 46, 58, 68, 70], "dpp": [5, 6, 7, 42, 44, 73, 74, 75, 76], "toler": [5, 13, 27, 28, 75], "08": [5, 20, 22, 25, 29, 31, 75], "violat": [5, 66, 68, 76], "constrain": [5, 6, 14, 20, 22, 24, 26, 30, 31, 32, 48, 67, 75, 76], "associ": [5, 13, 16, 30, 32, 55, 57, 63], "distanc": [5, 19, 24, 30, 71], "project": [5, 6, 14, 34, 44, 51, 59, 61, 62, 67, 75, 76], "onto": [5, 6, 67], "pi": [5, 18, 20, 23], "v": [5, 13, 14, 19, 20, 22, 31, 45, 51, 54, 56, 57, 58, 69, 74], "_2": [5, 14, 19, 22, 25, 31, 34, 36, 38, 41, 44, 52, 54, 56, 68, 71, 72, 75], "prefer": [5, 38, 63, 67], "To": [5, 14, 16, 17, 22, 24, 30, 31, 35, 44, 58, 59, 60, 61, 63, 67, 69, 70, 71, 74, 75, 76], "nonposit": [5, 6, 67, 68, 71], "As": [5, 8, 13, 18, 24, 27, 30, 35, 42, 54, 56, 68, 70, 72, 74, 76], "belong": [5, 9, 14], "polar": [5, 18], "sens": [5, 13, 22, 54, 56, 68, 74], "dual_valu": [5, 37, 39, 41, 45, 46, 59, 66], "former": [5, 54], "succcurlyeq_": 5, "s_n": 5, "second_ord": 5, "origin": [5, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 24, 25, 28, 31, 34, 42, 58, 63, 66, 74], "mid": [5, 43, 55, 75], "ye": [5, 58], "cup": [5, 75], "rel": [5, 19, 24, 34, 49, 75], "k_": [5, 14], "cl": [5, 14], "sinc": [5, 14, 15, 18, 21, 27, 29, 31, 33, 35, 43, 59, 66, 68, 70, 75], "veri": [5, 14, 35, 70, 76], "similar": [5, 19, 34, 43, 56, 69, 70, 71, 72], "convers": [5, 51, 59, 63, 71], "theorem": [5, 68, 71], "node": [5, 6, 9, 10, 17, 20, 24, 29, 58, 75], "quadratur": 5, "algorithm": [5, 7, 16, 24, 30, 33, 75, 76], "control": [5, 22, 24, 53, 59, 61, 63, 75], "collect": [5, 6, 43], "3d": [5, 14, 75], "common": [5, 14, 27, 37, 39, 45, 53, 63, 74, 76], "compon": [5, 9, 18, 37, 38, 43], "open": [5, 14, 25, 38, 58, 59, 60, 64, 67, 75], "interv": [5, 18, 24, 27, 31, 44, 51], "follow": [5, 7, 8, 13, 14, 16, 18, 21, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 55, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76], "code": [5, 7, 8, 9, 10, 11, 12, 18, 20, 21, 24, 31, 33, 36, 37, 38, 39, 40, 41, 42, 49, 50, 55, 57, 58, 59, 60, 63, 66, 67, 69, 70, 71, 72, 74, 75, 76], "snippet": [5, 14, 58, 70], "incorrect": 5, "satisfi": [5, 7, 13, 24, 33, 43, 45, 58, 67, 68, 69, 71, 74, 75], "ndim": [5, 6, 13, 14, 68, 76], "unlik": [5, 24], "attempt": [5, 9, 32, 70, 75], "appropri": [5, 8, 14, 63, 75, 76], "finite_set": 5, "ineq_form": 5, "separ": [5, 18, 59, 63, 67, 75], "union": [5, 63], "canonic": [5, 7, 9, 10, 11, 12, 14, 59, 70, 73, 75, 76], "formul": [5, 14, 15, 18, 23, 29, 43, 44, 45, 47, 48, 55, 57, 69, 76], "binari": 5, "speed": [5, 7, 8, 31, 58, 66, 70, 75], "solver": [5, 7, 8, 9, 11, 13, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 38, 44, 59, 62, 66, 67, 71, 73, 74], "simpl": [5, 7, 9, 14, 19, 27, 33, 35, 39, 42, 50, 65, 67, 68, 69, 70, 71, 74], "branch": [5, 14], "bound": [5, 6, 13, 14, 19, 20, 22, 24, 27, 46, 48, 51, 67, 71, 74, 75, 76], "choos": [5, 6, 7, 9, 18, 22, 24, 27, 35, 37, 43, 47, 51, 55, 57, 58, 63], "methodologi": [5, 33], "work": [5, 14, 18, 19, 23, 24, 25, 26, 28, 32, 33, 60, 61, 63, 67, 68, 75, 76], "h": [5, 9, 13, 14, 18, 24, 30, 39, 44, 46, 67], "d_": [5, 43], "op": 5, "succeq": [5, 15, 20, 26, 28, 29, 32, 35, 40], "local": [5, 14, 17, 21, 33, 51], "significantli": [5, 59, 66], "expand": [5, 11, 14], "effect": [5, 7, 9, 24, 30, 42, 70, 75], "scale": [5, 14, 24, 31, 33, 34, 44, 64, 75], "param": [5, 10, 12, 43], "conic": [5, 8, 9, 10, 11, 34, 64, 75, 76], "link": [6, 63], "togeth": [6, 72, 74], "mani": [6, 14, 19, 34, 37, 53, 54, 56, 59, 61, 64, 67, 70, 71, 74, 75, 76], "conveni": [6, 66], "creation": [6, 7], "compound": [6, 70], "__add__": 6, "arraylik": 6, "__div__": 6, "One": [6, 14, 19, 29, 43, 67], "divid": [6, 9, 20, 29, 55, 57], "__eq__": 6, "self": [6, 8, 14, 17, 75], "__ge__": 6, "__le__": 6, "__lshift__": 6, "__matmul__": 6, "__mul__": 6, "__pow__": 6, "__radd__": 6, "__rdiv__": 6, "__rlshift__": 6, "__rmatmul__": 6, "__rmul__": 6, "__rrshift__": 6, "__rshift__": 6, "__rsub__": 6, "__rtruediv__": 6, "__sub__": 6, "__truediv__": 6, "miss": [6, 34, 40, 47], "dict": [6, 7, 8, 9, 10, 11, 12, 14, 20, 24, 58, 66], "is_affin": [6, 71], "is_concav": [6, 71], "is_const": [6, 71], "is_convex": [6, 45, 71], "disciplin": [6, 7, 25, 42, 45, 50, 52, 58, 61, 73, 74, 76], "parametr": [6, 7, 14, 19, 73, 74, 76], "ruleset": [6, 7, 69, 71, 73, 76], "involv": [6, 7, 13, 14, 24, 59, 67, 70, 71, 74, 75], "is_dgp": [6, 7, 42, 44, 45, 46, 48, 69, 70], "is_dpp": [6, 7], "context": [6, 7, 24, 45, 69], "parameter": [6, 10, 12, 14, 32, 76], "is_dqcp": [6, 7, 50, 52, 71], "dqcp": [6, 7, 50, 51, 52, 73, 76], "is_log_log_affin": [6, 45, 69], "is_log_log_concav": [6, 45, 69], "is_log_log_convex": [6, 69], "is_nonneg": 6, "is_nonpo": 6, "is_zero": 6, "nonpo": [6, 12, 66, 67, 68, 74], "nsd": [6, 67], "hermitian": [6, 67], "sparsiti": [6, 32, 54, 57, 67, 75], "carri": [6, 12, 21, 63], "permiss": [6, 10, 12, 14, 63, 67], "contradict": 6, "either": [6, 7, 8, 10, 11, 12, 13, 14, 18, 24, 30, 63, 68, 70, 71, 74, 75, 76], "entir": [6, 17, 67, 70, 74], "tuplewith": [6, 67], "fix": [6, 13, 14, 19, 24, 28, 32, 33, 44, 60, 67, 75, 76], "pattern": [6, 9, 18, 32, 67], "sensibl": [6, 67], "idiom": [6, 7, 67], "round": [6, 22, 55], "project_and_assign": [6, 67], "var_id": 6, "kwarg": [6, 7, 13, 14, 75], "declar": [6, 35, 69], "hyper": [6, 56], "machin": [6, 14, 58, 59, 60, 61], "learn": [6, 59, 61], "model": [6, 13, 14, 17, 19, 20, 21, 24, 44, 53, 55, 58, 59, 61, 62, 67, 74, 75, 76], "trade": [6, 53, 55, 56, 57, 63, 74], "off": [6, 18, 20, 24, 31, 34, 44, 55, 56, 57, 74, 76], "curv": [6, 13, 20, 55, 57, 74], "raw": [6, 8], "primit": 6, "implicitli": [6, 24, 71], "cast": [6, 24, 49, 72], "col": [6, 31, 34], "callback_param": 6, "callback": 6, "deriv": [6, 7, 18, 23, 25, 26, 28, 31, 32, 33, 43, 63, 70, 75, 76], "enabl": [6, 8, 17, 67, 75, 76], "replac": [6, 11, 14, 24, 31, 45, 54, 57, 63, 69, 74, 76], "automat": [6, 7, 14, 60, 67, 70, 71, 74, 75, 76], "updat": [6, 7, 16, 21, 22, 24, 31, 33, 35, 44, 74, 76], "With": [6, 15, 19, 75], "pq": [6, 72], "callbackparamet": 6, "lambda": [6, 24, 25, 37, 39, 43, 44, 54, 55, 56, 57, 71], "expos": [6, 17, 70], "encapsul": 7, "report": [7, 14, 24, 59, 76], "wa": [7, 8, 9, 13, 23, 34, 43, 51, 54, 59, 60, 63, 70, 74, 76], "infeas": [7, 9, 18, 27, 51, 73, 75, 76], "unbound": [7, 9, 73, 75, 76], "statu": [7, 8, 9, 15, 18, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 38, 44, 51, 67, 74, 75, 76], "immut": [7, 74], "yourself": 7, "want": [7, 14, 27, 30, 32, 36, 42, 60, 67, 70, 74, 75, 76], "add": [7, 14, 17, 18, 24, 30, 31, 60, 63, 71, 72, 75, 76], "exist": [7, 8, 14, 60, 71, 76], "instead": [7, 9, 14, 19, 20, 22, 25, 27, 58, 69, 75, 76], "new_constraint": 7, "queri": [7, 51], "statist": [7, 15, 75, 76], "recent": [7, 60, 69, 71, 75, 76], "invoc": [7, 8, 11], "captur": [7, 17, 74, 76], "size_metr": 7, "solver_stat": [7, 75], "save": [7, 75], "modif": [7, 20, 33, 63], "accessor": 7, "backward": [7, 8, 42, 43, 44, 70, 75, 76], "solut": [7, 10, 11, 12, 14, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 35, 37, 38, 39, 40, 41, 43, 44, 51, 52, 53, 66, 70, 71, 74, 75, 76], "differenti": [7, 42, 43, 44, 61, 64, 70, 76], "obtain": [7, 10, 12, 14, 24, 28, 31, 37, 39, 41, 51, 54, 56, 63, 66, 69, 70, 71, 72], "word": [7, 56, 67], "calcul": [7, 18, 29, 32, 70], "sensit": [7, 18, 43, 53, 73, 76], "perturb": [7, 24, 42, 70, 75], "integr": [7, 14, 31, 51, 75, 76], "toolkit": 7, "popul": [7, 9, 42, 70, 75], "It": [7, 9, 13, 14, 22, 24, 31, 38, 45, 51, 52, 54, 56, 58, 59, 68, 69, 72, 74, 75, 76], "requires_grad": [7, 42, 43, 70, 75], "ep": [7, 10, 24, 34, 43, 66, 75], "dx": [7, 25, 70], "dp": [7, 70], "test": [7, 27, 54, 55, 56, 57, 58, 74], "assert_allclos": 7, "easili": [7, 14, 15, 17, 19, 34, 67, 74], "almost": [7, 34], "analyt": [7, 19, 70], "compliant": [7, 9, 12, 50, 70], "chain": [7, 42, 58, 66, 74], "Then": [7, 14, 15, 19, 27, 39, 70, 75], "dz": 7, "chosen": [7, 27, 32, 55, 75], "correspond": [7, 9, 14, 23, 24, 32, 34, 36, 39, 41, 42, 48, 49, 54, 56, 66, 69, 72], "custom": [7, 64, 73], "interpret": [7, 9, 21, 24, 35, 54, 74], "solvererror": [7, 20, 74, 76], "tell": [7, 14, 66, 74, 75], "chang": [7, 8, 14, 15, 18, 24, 37, 39, 41, 42, 43, 63, 67, 70, 73, 75], "delta": [7, 18, 27, 31, 33, 42, 43, 46, 51, 70], "unspecifi": [7, 11, 75], "compat": [7, 8, 14, 32, 66], "2e": [7, 22, 25, 26, 31, 43, 70, 75], "get_problem_data": [7, 66], "gp": [7, 27, 42, 43, 44, 45, 46, 47, 48, 49, 64, 69, 75], "enforce_dpp": [7, 75], "ignore_dpp": [7, 75], "verbos": [7, 8, 22, 24, 25, 26, 30, 31, 34, 44, 51, 71, 75, 76], "canon_backend": [7, 10, 12, 66], "solver_opt": [7, 8], "data": [7, 8, 9, 10, 11, 14, 16, 21, 25, 29, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 52, 53, 55, 57, 59, 66, 70, 74, 75], "enclos": [7, 63], "solvingchain": [7, 66], "compil": [7, 8, 63, 70, 75, 76], "target": [7, 8, 11, 13, 14, 17, 18, 21, 66, 76], "dictionari": [7, 10, 12, 24, 66, 75], "were": [7, 30, 54, 61, 70, 75, 76], "howev": [7, 14, 17, 19, 22, 24, 27, 31, 33, 45, 63, 67, 72, 75, 76], "intermedi": 7, "further": [7, 65, 66, 75, 76], "interfac": [7, 9, 63, 64, 66, 67, 75], "invok": [7, 8, 14, 66, 75], "solve_via_data": [7, 8, 14, 66, 75], "thin": [7, 66], "around": [7, 14, 19, 24, 66, 75], "extern": [7, 66], "process": [7, 14, 21, 27, 43, 61, 66, 74], "unpack_result": [7, 66], "recov": [7, 9, 14, 22, 24, 30, 31, 34, 54, 66, 76], "inverse_data": [7, 8, 10, 11, 12, 66], "sc": [7, 14, 18, 20, 25, 28, 34, 43, 44, 59, 60, 64, 66, 71, 75, 76], "soln": [7, 66], "unpack": [7, 11, 66, 74], "bypass": [7, 66], "probdata": [7, 66], "cone_dim": [7, 14, 66], "soc": [7, 9, 10, 12, 14, 34, 41, 51, 53, 66, 75], "structur": [7, 8, 9, 14, 17, 53, 66], "depend": [7, 14, 31, 44, 60, 66, 68, 71, 72, 75, 76], "pars": [7, 67, 75], "dpperror": [7, 75], "thrown": [7, 75], "try": [7, 14, 19, 20, 24, 30, 31, 45, 58, 67, 68, 71, 74, 75, 76], "just": [7, 9, 13, 14, 24, 33, 42, 45, 54, 69, 70, 71, 74, 75], "warn": [7, 34, 75, 76], "cpp": [7, 66], "backend": [7, 14, 59, 73, 75, 76], "affect": [7, 10, 12, 70, 71], "select": [7, 9, 24, 33, 34, 56, 57, 60, 66, 72], "output": [7, 8, 9, 12, 14, 15, 22, 35, 43, 44, 69, 70, 71, 72], "pass": [7, 9, 14, 20, 66, 69, 71, 75, 76], "overrid": [7, 14, 75], "lowest": 7, "invers": [7, 8, 11, 32, 47, 49], "invalid": [7, 68], "mild": [7, 70], "subsequ": [7, 8, 42, 63, 70], "much": [7, 9, 14, 19, 20, 70, 75], "faster": [7, 70, 74], "document": [7, 8, 9, 14, 63, 75, 76], "www": [7, 10, 12, 14, 22, 25, 31, 45, 63], "org": [7, 10, 12, 14, 45, 63], "html": [7, 25, 45, 75], "complianc": [7, 10, 12, 14, 63], "is_qp": 7, "classmethod": 7, "register_solv": 7, "func": [7, 72], "keyword": [7, 13, 14, 42, 66, 69, 70, 71, 75], "execut": [7, 9, 28, 63], "eco": [7, 14, 22, 25, 31, 33, 34, 59, 60, 64, 75], "osqp": [7, 24, 31, 44, 59, 60, 64, 75], "hide": [7, 75], "qcp": [7, 50, 51, 52, 71, 75], "quasiconvex": [7, 18, 27, 50, 52, 59, 61, 73, 75, 76], "wide": 7, "stop": [7, 75], "criteria": 7, "strategi": 7, "improv": [7, 8, 14, 19, 31, 32, 54, 56, 63, 75], "qualiti": 7, "There": [7, 27, 30, 45, 53, 55], "satisfactori": 7, "done": [7, 23, 44, 70, 76], "prob": [7, 9, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 57, 59, 66, 67, 68, 74, 75, 76], "abstol": [7, 22, 31, 75], "6": [7, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 39, 43, 44, 49, 51, 52, 60, 66, 67, 70, 74, 75, 76], "max_it": [7, 16, 21, 24, 28, 31, 34, 43, 44, 75], "10000": [7, 28, 43, 44], "mydict": 7, "msk_dpar_intpnt_co_tol_near_rel": 7, "mosek": [7, 14, 60, 64, 67, 75, 76], "mosek_param": [7, 75], "why": [7, 13, 24, 70, 75, 76], "dcperror": [7, 45], "dgperror": 7, "suitabl": [7, 14], "among": 7, "instal": [7, 14, 38, 50, 52, 58, 59, 67, 75, 76], "unanticip": 7, "encount": [7, 14, 58, 75, 76], "state": [7, 8, 9, 10, 11, 12, 14, 31, 63, 69], "primal": [7, 9, 14, 34, 75], "fail": [7, 14, 15, 18, 20, 25, 29, 58, 71, 74, 75], "compilation_tim": 7, "took": [7, 75], "shallow": [7, 58], "copi": [7, 10, 12, 14, 20, 24, 31, 35, 63], "reassign": 7, "append": [7, 17, 18, 24, 30, 31, 33, 34, 40, 41, 44, 48, 51, 54, 55, 56, 57, 70, 74], "undefin": [7, 18], "behavior": [7, 66, 76], "suffix": 7, "inaccur": [7, 14, 75], "variou": [7, 19, 43], "metric": [7, 34, 75], "regard": [7, 8, 18, 63, 75], "num_scalar_vari": 7, "num_scalar_data": 7, "appar": 7, "num_scalar_eq_constr": 7, "num_scalar_leq_constr": 7, "max_data_dimens": 7, "longest": 7, "max_big_small_squar": 7, "big": [7, 76], "smaller": [7, 19, 24, 66, 75], "solver_nam": [7, 75], "solve_tim": [7, 51, 75], "setup_tim": [7, 51], "num_it": [7, 51, 75], "extra_stat": [7, 75], "miscellan": 7, "doubl": [7, 14], "setup": [7, 21, 33, 34, 75], "had": [7, 24, 57, 60], "go": [7, 14, 24, 30], "extra": [7, 14, 58, 60, 75], "typic": [7, 30, 34], "from_dict": 7, "attr": [7, 8, 51], "moder": [8, 76], "amount": [8, 14, 17, 35, 37, 43, 75, 76], "effort": [8, 14, 53, 76], "rewrit": [8, 24, 27, 29, 61, 70, 75, 76], "system": [8, 20, 22, 24, 29, 31, 33, 43, 44, 48, 53, 58, 60, 61, 63, 68, 75], "inde": 8, "sure": [8, 14, 74, 75], "flexibl": [8, 9, 17], "capabl": [8, 75], "preserv": [8, 72], "public": [8, 59, 76], "aspect": [8, 24, 30, 46], "notic": [8, 14, 42, 45, 55, 56, 57, 63, 70, 74, 75], "futur": [8, 18, 76], "releas": [8, 59, 76], "contributor": [8, 14, 63], "curiou": 8, "okai": 8, "contact": [8, 14], "direct": [8, 14, 18, 21, 24, 51, 63, 75], "care": [8, 44, 58], "forward": [8, 31, 70], "categori": [8, 76], "terminologi": 8, "classifi": [8, 53, 55, 70], "middl": [8, 20], "back": [8, 14, 21, 76], "simplifi": [8, 24], "wherea": [8, 31, 54], "mode": [8, 43], "breakdown": 8, "complex2r": 8, "cvxattr2constr": 8, "reduction_attribut": [8, 11], "dgp2dcp": 8, "canonicalize_expr": [8, 9, 10, 11], "evalparam": 8, "flipobject": 8, "dcp2cone": [8, 11], "canonicalize_tre": [8, 9, 10], "qp2symbolicqp": [8, 12], "dualiz": [8, 14, 75, 76], "slack": [8, 14, 75], "exchang": [8, 75], "opt_val": [8, 51], "primal_var": [8, 51], "dual_var": [8, 51], "miscellen": 8, "propag": [8, 14, 58], "actor": 8, "By": [8, 22, 24, 42, 43, 54, 66, 67, 72, 75], "proce": 8, "retriev": [8, 10, 11, 12, 75], "own": [8, 63, 71, 76], "proven": 8, "possibli": [8, 9], "__init__": [8, 14, 17], "inversedata": [8, 10, 11], "emit": 8, "previous": [8, 24, 76], "logic": 8, "singl": [8, 9, 13, 14, 24, 31, 54, 56, 69, 72], "1th": 8, "whehter": 8, "yield": [8, 46, 56], "start": [8, 13, 14, 18, 21, 24, 27, 31, 44, 60, 70, 72, 73, 76], "solving_chain": 8, "prepend": 8, "warm_start": [8, 75], "warm": [8, 24, 31, 44, 73, 76], "solver_chain": 8, "necessarili": [8, 57, 63, 67], "best": [9, 27, 33, 75], "piecewis": [9, 12, 25], "closer": [9, 14], "what": [9, 14, 19, 24, 59, 67, 69, 71, 73, 76], "befor": [9, 10, 11, 12, 14, 19, 24, 25, 70, 75, 76], "readi": 9, "disclaim": [9, 10, 11, 12, 63], "quad_obj": [9, 10], "minim": [9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 66, 67, 68, 69, 70, 71, 74, 75], "affine_abov": [9, 10], "path": [9, 10, 14, 27, 30, 48, 55, 57], "recurs": [9, 10], "qp2quad_form": 9, "qp2symbolic_qp": 9, "consist": [9, 12, 13, 14, 19, 21, 30, 31, 59, 63, 75, 76], "qp": [9, 12, 14, 24, 31, 44, 75, 76], "cone2con": 9, "affine2direct": 9, "easier": [9, 63, 76], "purpos": [9, 13, 14, 24, 63, 74], "pretend": 9, "paramconeprog": [9, 10], "apply_paramet": [9, 10, 12, 14], "format_constraint": [9, 14], "respons": [9, 20, 23, 63], "thing": [9, 24, 74], "k_dir": 9, "sever": [9, 14, 47, 49, 69, 75, 76], "accord": [9, 18, 70], "elementari": [9, 14], "appear": [9, 14, 58, 60, 61, 63, 70], "necessari": [9, 14, 42, 60], "strong": 9, "dualiti": [9, 13, 24], "hold": [9, 13, 33, 37, 39, 41, 45, 63, 66, 68, 69, 76], "feasibl": [9, 14, 18, 27, 33, 41, 51, 75], "written": [9, 15, 23, 24, 63, 68, 70, 72, 75], "agnost": 9, "consider": [9, 14, 42, 43], "static": [9, 12, 76], "inv_data": 9, "trivial": [9, 14, 31, 37, 39, 70], "enum": 9, "free": [9, 34, 51, 58, 63, 67, 70, 75], "fr": 9, "dual_exp": 9, "de": [9, 23], "subject": [9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 63, 70], "under": [9, 10, 12, 14, 20, 27, 42, 43, 63, 68, 69, 70, 71, 75, 76], "lift": [9, 11, 51], "constitu": 9, "impli": [9, 10, 12, 14, 55, 63, 66], "py": [9, 14, 24, 75], "expcon": [9, 14], "aff": 9, "dir": [9, 14], "k_aff": 9, "built": [9, 58, 59, 64, 70, 72, 75], "forth": [9, 14], "ad": [9, 14, 20, 35, 36, 56, 58, 59, 66, 67, 68, 75, 76], "yet": [9, 76], "intend": [9, 66, 70], "lead": [9, 56], "bool_idx": 9, "int_idx": 9, "orthant": 9, "remov": [9, 24, 30, 76], "copyright": [10, 12, 14, 63], "2013": [10, 12], "steven": [10, 12, 58, 59, 61, 63], "licens": [10, 12, 62, 67, 75], "apach": [10, 12, 14, 63, 67], "unless": [10, 12, 14, 63, 74], "law": [10, 12, 14, 51, 63], "agre": [10, 12, 14, 63], "AS": [10, 12, 14, 63], "basi": [10, 12, 14, 33, 63, 70, 75, 76], "warranti": [10, 12, 14, 63], "OR": [10, 12, 14, 63, 76], "condit": [10, 12, 14, 19, 27, 45, 56, 63, 68, 69, 71, 75], "OF": [10, 12, 14, 63], "kind": [10, 12, 14, 63], "languag": [10, 12, 14, 58, 59, 61, 63, 64, 74], "govern": [10, 12, 14, 63], "limit": [10, 12, 13, 14, 17, 18, 24, 25, 30, 43, 46, 63, 67, 71, 75], "conedim": [10, 12, 14], "constr_map": [10, 12, 14], "present": [10, 12, 14, 23, 69, 71, 76], "format": [10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 44, 63, 70, 75, 76], "eq_dim": 10, "exp_dim": 10, "leq_dim": 10, "p3d_dim": 10, "p3": 10, "psd_dim": 10, "soc_dim": 10, "conematrixstuf": 10, "matrixstuf": [10, 12], "ordered_constraint": 10, "stuf": 10, "stuff": 10, "stuffed_object": [10, 12], "extractor": [10, 12], "var_id_to_col": [10, 12], "param_id_to_col": [10, 12], "lower_bound": [10, 12], "upper_bound": [10, 12], "paramprob": [10, 12], "px": [10, 12, 15], "cone_constr1": 10, "a_1": [10, 12, 40, 45, 69], "b_1": [10, 12, 40], "cone_constrk": 10, "a_i": [10, 12, 14, 18, 22, 23, 30, 36, 37, 41, 45, 58, 69], "b_i": [10, 12, 14, 24, 36, 37, 40, 41, 58], "offset": [10, 12, 44, 57], "apply_param_jac": [10, 12], "delc": 10, "dela": [10, 12], "delb": [10, 12], "active_param": [10, 12], "jacobian": [10, 12, 70], "dparam": [10, 12], "id_to_param_valu": [10, 12], "zero_offset": [10, 12], "keep_zero": [10, 12], "explicit": [10, 12, 14, 67], "is_mixed_integ": [10, 12], "split_adjoint": [10, 12], "del_var": [10, 12], "adjoint": [10, 12, 42, 70], "split_solut": [10, 12], "sltn": [10, 12], "active_var": [10, 12], "split": [10, 12, 21, 23, 24, 27, 31, 34, 44, 75], "individu": [10, 12, 63], "2017": [10, 12, 34, 63], "akshai": [10, 59, 61], "agraw": [10, 59, 61], "robin": [10, 12, 59, 61], "verschueren": [10, 12, 59, 61], "regardless": [11, 67, 69], "wish": [11, 75], "cvx_attr2constr": 11, "reduce_bound": 11, "x1": [11, 69, 72], "x2": 11, "x3": 11, "monomi": [11, 45, 69, 70], "x_2": [11, 20, 44, 45, 69], "x_3": 11, "posynomi": [11, 43, 45, 69], "dgp_problem": 11, "gp2dcp": 11, "dcp_problem": 11, "canonicalize_param": 11, "subtre": 11, "eval_param": 11, "parametererror": 11, "flip_object": 11, "flip": [11, 13], "vice": [11, 19], "versa": [11, 19], "2016": [12, 58, 61], "jaehyun": [12, 59], "park": [12, 59], "paramquadprog": 12, "tx": [12, 19, 30, 36, 37, 39, 41], "equality_constr1": 12, "equality_constrk": 12, "delp": 12, "delq": 12, "qpmatrixstuf": 12, "fill": [12, 53], "quadform": 12, "exclus": [12, 63], "docstr": 12, "beyond": [13, 28, 66, 76], "conform": 13, "fundament": [13, 53, 58], "analysi": [13, 53, 67, 68, 69, 71, 73, 76], "extrem": 13, "fenchel": 13, "auxiliari": [13, 44], "standard_norm": 13, "rand": [13, 19, 22, 24, 26, 28, 31, 32, 38], "formal": [13, 72, 76], "supremum": 13, "sup": [13, 15], "wikipedia": 13, "__call__": 13, "pareto": [13, 58], "moreov": 13, "boundari": [13, 18, 19], "attain": 13, "weighted_sum": 13, "interpol": 13, "targets_and_prior": 13, "prioriti": [13, 14], "off_target": 13, "05": [13, 18, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 44, 48, 51, 70, 75], "penalti": [13, 31, 54, 56], "within": [13, 14, 22, 24, 27, 31, 41, 51, 63, 75], "trang": 13, "hard": [13, 22, 24, 30], "err_tol": 13, "tight": [13, 22, 24, 31], "heurist": [13, 24, 32, 70], "partial_optim": 13, "opt_var": 13, "dont_opt_var": 13, "partialproblem": 13, "stage": [13, 14, 24, 30], "graph": [13, 17, 24, 50, 64], "abs_x": 13, "entrywis": 13, "welcom": 14, "don": [14, 34, 63, 74, 75], "expert": [14, 53], "answer": 14, "discord": [14, 59], "discuss": [14, 24, 58, 59, 63, 66, 74, 75], "stackoverflow": [14, 58], "address": 14, "todo": [14, 18, 32], "typo": 14, "websit": [14, 45, 58, 75], "brows": [14, 59], "tracker": [14, 58, 59], "unassign": 14, "bug": [14, 58, 59, 76], "featur": [14, 18, 36, 55, 56, 57, 58, 59, 61, 70, 73], "request": [14, 58, 59, 69, 71], "polish": [14, 24, 31, 44], "librari": [14, 45, 47, 48, 49, 59, 64, 68, 69, 74], "align": [14, 31, 51], "ve": [14, 58, 76], "identifi": [14, 22, 63], "opportun": 14, "next": [14, 24, 28, 30, 42, 43, 44, 52, 55, 57, 70, 76], "conduct": [14, 20], "overal": 14, "guid": [14, 59, 76], "rest": [14, 55, 57, 76], "exhaust": [14, 59], "promin": [14, 63], "roughli": 14, "categor": 14, "medium": [14, 63], "larg": [14, 25, 31, 34, 45, 64, 67, 75], "scope": 14, "encourag": [14, 54, 56, 57, 58, 61, 76], "focu": 14, "join": [14, 59], "ll": [14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 68, 76], "happi": 14, "guidanc": 14, "advic": 14, "graphbla": 14, "compar": [14, 19, 24, 31, 42, 43, 56, 75], "scalar_product": [14, 76], "introduc": [14, 42, 45, 59, 66, 70, 71, 76], "qdldl": [14, 24, 31, 44], "choleski": 14, "post": [14, 35, 58], "ipopt": 14, "1223": 14, "serial": 14, "532": 14, "1333": 14, "1438": 14, "rust": [14, 64], "potenti": 14, "cvxcore": [14, 66, 76], "broadcast": [14, 21, 53, 68, 76], "break": [14, 24, 27, 30, 68], "fork": [14, 60], "repositori": [14, 60], "configur": [14, 18, 60, 63], "git": [14, 60], "offici": [14, 60, 75, 76], "repo": [14, 60], "remot": [14, 21], "upstream": [14, 75], "fetch": 14, "master": [14, 21], "track": [14, 53, 63], "official_mast": 14, "command": [14, 60, 67, 75], "pull": [14, 19, 69, 71], "sync": 14, "huge": 14, "merg": 14, "conflict": 14, "never": [14, 71, 75], "switch": [14, 75, 76], "checkout": 14, "resum": 14, "send": [14, 21], "adher": 14, "unittest": 14, "doesn": [14, 68, 75, 76], "onc": [14, 18, 51, 70], "member": 14, "team": [14, 24], "themselv": 14, "review": [14, 76], "complet": [14, 32, 40, 51, 53, 74, 75, 76], "trigger": 14, "continu": [14, 24, 54, 75, 76], "platform": 14, "commit": 14, "author": [14, 15, 27, 29, 35, 58, 61, 63], "ruff": 14, "navig": [14, 60], "pip": [14, 38, 50, 52, 60, 67], "abid": 14, "convent": [14, 76], "pre": [14, 22, 25, 26, 31, 75], "presenc": [14, 24, 31], "insuffici": 14, "live": [14, 19], "directori": [14, 17, 60], "framework": [14, 62, 76], "organ": 14, "basetest": 14, "base_test": 14, "test_": 14, "pytest": [14, 60], "cd": 14, "test_dgp": 14, "testdgp": 14, "test_product": 14, "caus": [14, 19, 24, 63, 75], "suppress": 14, "stdout": 14, "flag": [14, 68, 69, 71], "These": [14, 15, 24, 27, 43, 53, 61, 69, 72, 74, 75, 76], "airspe": 14, "veloc": [14, 31], "action": 14, "act": [14, 63], "parti": [14, 63], "lifeblood": 14, "grate": 14, "anyon": 14, "willing": 14, "volunt": 14, "warrant": 14, "coordin": [14, 31], "princip": 14, "outlin": 14, "forthcom": 14, "far": 14, "tri": 14, "cover": [14, 24, 30, 65, 66, 76], "essenti": 14, "spectacular": 14, "feedback": [14, 69, 71], "keep": [14, 24, 34, 58], "date": [14, 25, 63], "prompt": [14, 58], "codepath": 14, "conic_solv": [14, 75], "conicsolv": [14, 75], "awesom": 14, "awesomepi": 14, "awesome_conif": 14, "folder": 14, "manag": [14, 60, 63, 76], "interact": [14, 68, 69, 71], "six": 14, "import_solv": [14, 75], "easi": [14, 24, 76], "remain": [14, 19, 24, 55, 57, 63, 76], "goal": [14, 24, 30, 31, 37, 43, 45, 47, 48, 50, 55, 56, 57], "close": [14, 19, 24, 30, 33, 36, 42, 44, 58, 66, 76], "kept": 14, "short": [14, 59, 62, 76], "situat": [14, 76], "glpk": [14, 60, 64, 75], "orient": [14, 24, 53], "look": [14, 17, 18, 19, 24, 34, 68], "someth": 14, "gurobi": [14, 60, 64, 67, 75, 76], "nag": [14, 75], "nontrivi": 14, "properli": [14, 56], "moment": 14, "concret": [14, 76], "doteq": 14, "subset": [14, 24, 33, 34, 40], "k_e": 14, "pow": [14, 44, 75], "later": [14, 20, 24, 32], "now": [14, 18, 19, 24, 27, 29, 51, 70, 72, 75, 76], "powcone3d": [14, 75, 76], "exp_cone_ord": 14, "dure": [14, 75], "recoveri": 14, "step": [14, 16, 18, 20, 22, 27, 30, 31, 34, 35, 44, 60, 70, 75, 76], "understand": [14, 70], "correctli": [14, 58, 76], "cone_matrix_stuf": 14, "eq": 14, "equat": [14, 22, 29, 31, 42, 44, 45, 47, 49, 51, 75], "ineq": 14, "suppos": [14, 16, 17, 19, 21, 32, 39, 42], "good": [14, 19, 22, 32, 55, 57, 75], "idea": [14, 24, 44], "deliber": [14, 63], "decis": [14, 22, 24, 30, 61, 64, 75], "psd_format_mat": 14, "noth": [14, 63], "behav": [14, 68], "borrow": 14, "ident": [14, 24, 27, 34, 66], "consecut": 14, "p3d": 14, "tripl": 14, "nonlinear": [14, 38, 67], "permut": 14, "earlier": [14, 18, 76], "nativ": [14, 18, 32, 76], "previou": [14, 24, 75, 76], "statement": [14, 63, 71], "avoid": [14, 76], "introduct": [14, 59, 68], "unnecessari": 14, "therefor": [14, 51, 52, 70], "mention": 14, "lagrangian": [14, 16], "broken": 14, "m_1": 14, "m_6": 14, "mathcal": [14, 24, 34, 36, 37, 38, 39, 40, 41, 42, 44, 67, 75], "mu_1": 14, "mu_6": 14, "mu_i": [14, 43], "mu_2": 14, "m_2": 14, "k_i": [14, 21], "m_i": [14, 69, 72], "denot": [14, 15, 24, 27, 36, 40, 43, 44, 45, 47, 69, 70, 71, 72], "remark": [14, 75], "particularli": [14, 67], "comment": [14, 18, 60, 63], "thread": [14, 43, 75], "helper": 14, "util": [14, 29, 75], "isn": 14, "edit": [14, 60, 67], "content": [14, 63], "clear": [14, 24], "test_conic_solv": 14, "overwhelm": 14, "line": [14, 17, 18, 22, 23, 24, 30, 44, 51, 60, 67, 75], "solver_test_help": 14, "standardtestsdp": 14, "staticmethod": 14, "def": [14, 15, 17, 19, 20, 21, 22, 24, 27, 29, 30, 31, 32, 35, 42, 44, 54, 55, 56, 74, 75], "test_sdp_1min": 14, "sth": 14, "sdp_1": 14, "verify_object": 14, "digit": 14, "record": [14, 57, 67, 75], "check_primal_feas": 14, "check_complementar": 14, "check_dual_domain": 14, "standardtestsocp": 14, "test_socp_0": 14, "socp_0": 14, "verify_primal_valu": 14, "test_mi_socp_1": 14, "mi_socp_1": 14, "predefin": 14, "partli": [14, 60], "solvertesthelp": 14, "test_mosek_lp_1": 14, "standardtestlp": 14, "test_lp_1": 14, "basic": [14, 59, 65, 74, 75], "bf": [14, 34, 55, 57, 72, 75], "robert": [15, 27, 29, 35], "gower": [15, 27, 29, 35], "roger": [15, 27, 29, 35], "hill": [15, 27, 29, 35], "sami": [15, 27, 29, 35], "al": [15, 27, 29, 35], "izzi": [15, 27, 29, 35], "timothi": [15, 27, 29, 35], "pollington": [15, 27, 29, 35], "keith": [15, 27, 29, 35], "brigg": [15, 27, 29, 35], "vandenbergh": [15, 20, 27, 29, 32, 33, 35, 46, 48, 58, 59, 66], "exercis": [15, 24, 27, 29, 63], "57": 15, "207": 15, "memoryless": 15, "transit": [15, 76], "probabl": [15, 22, 24, 55, 58], "p_": [15, 29, 48], "x_j": [15, 24, 37, 69], "shannon": 15, "mutual": 15, "sup_x": 15, "y_i": [15, 32, 44, 55, 57, 72], "log_2y_i": 15, "log_2p_": 15, "minimis": [15, 27, 29, 35], "due": [15, 22, 30, 42, 70, 74, 76], "quit": [15, 56], "usr": [15, 27, 29, 35], "bin": [15, 27, 29, 35], "env": [15, 24, 27, 29, 35, 75], "python3": [15, 24, 27, 29, 35], "xlogi": 15, "channel_capac": 15, "sum_x": [15, 35], "\u2119": 15, "\u211d": 15, "log_2": [15, 29], "becom": [15, 17, 18, 30, 32, 33, 45, 76], "c_j": [15, 24, 37], "greater": [15, 43, 70, 71, 76], "nan": [15, 27, 29, 35, 75], "signal": [15, 22, 25, 27, 29, 48], "maximis": [15, 27, 29, 35], "els": [15, 18, 20, 24, 27, 28, 35, 43, 75], "pmatrix": 15, "75": [15, 24, 30], "set_printopt": [15, 27, 29, 35], "4g": [15, 27, 29, 35], "1887": 15, "mbox": [16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "augment": 16, "rho": [16, 21, 24, 31, 43, 44, 74, 75], "2_2": [16, 21, 22, 31], "g_": [16, 27, 48], "inf_x": 16, "ascent": 16, "lll": [16, 21, 44], "mathop": [16, 21, 34, 72], "rm": [16, 21, 57], "argmin": [16, 18, 21, 44, 55], "script": [16, 59, 69, 71, 76], "seed": [16, 18, 19, 22, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 52, 54, 55, 56, 57, 59, 70, 74, 75], "randn": [16, 19, 22, 24, 26, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 52, 54, 55, 56, 57, 59, 70, 74, 75], "resid": 16, "aug_lagr": 16, "5905035557463005": 16, "572761551213633": 16, "simpler": 17, "tradit": [17, 76], "embed": [17, 58, 59, 61, 64, 74], "flow": [17, 51], "edg": [17, 24, 30, 76], "explicitli": [17, 63, 67, 75, 76], "incid": 17, "enter": [17, 24, 42, 70], "leav": [17, 67, 75], "sink": [17, 24], "capac": [17, 35, 53], "frame": 17, "undirect": 17, "connect": [17, 24, 30], "in_nod": 17, "out_nod": 17, "edge_flow": 17, "node1": 17, "node2": 17, "accumul": [17, 76], "refram": 17, "electr": 17, "grid": [17, 18, 19, 20, 24, 30], "consum": 17, "station": 17, "energi": 17, "storag": 17, "facil": 17, "contribut": [17, 59, 63], "loss": [17, 21, 37, 44, 54, 56, 57, 63], "transmiss": 17, "seri": [17, 25, 33, 76], "judson": [18, 20, 23, 25, 26, 28, 32, 33, 59], "wilson": [18, 20, 23, 25, 26, 28, 32, 33, 59], "2014": [18, 20, 23, 25, 26, 28, 32, 33, 75], "adapt": [18, 19, 20, 23, 24, 25, 26, 28, 31, 32, 33, 44, 46, 48], "signific": [18, 32], "cvx": [18, 19, 20, 23, 25, 26, 28, 32, 33, 48, 64], "almir": [18, 23, 33, 48], "mutapc": [18, 23, 33, 48], "2006": [18, 20, 23, 33], "topic": [18, 20, 23, 25, 32, 33], "lectur": [18, 23, 24, 30], "ee364": [18, 23], "synthesi": 18, "lebret": 18, "unit": [18, 30, 32, 37, 51], "obei": 18, "sidelob": 18, "beam": 18, "theta_": 18, "tar": 18, "bw": 18, "occupi": [18, 24, 58], "angular": 18, "theta_b": 18, "theta": [18, 44, 68, 69], "t_": [18, 20], "sb": 18, "foral": [18, 30, 68, 69], "notin": [18, 40], "gain": [18, 27, 48], "sideband": 18, "threshold": [18, 22, 32, 33, 44, 48], "shade": 18, "coeffici": [18, 19, 23, 51, 54, 55, 57], "spec": [18, 23], "refin": [18, 75], "counterpart": 18, "uniform": [18, 24], "array_geometri": 18, "2d_random": 18, "1d_uniform_lin": 18, "2d_uniform_lattic": 18, "lambda_wl": 18, "wavelength": 18, "theta_tar": 18, "min_sidelob": 18, "db": [18, 23, 42], "max_half_beam": 18, "50": [18, 19, 20, 25, 31, 33, 34, 44, 54, 55, 56, 63, 75], "half": 18, "randomli": [18, 28, 30, 34, 55, 57], "locat": [18, 24, 30, 31, 51], "repeat": [18, 26, 27, 28, 30, 32, 33, 35, 70], "experi": [18, 32, 33], "uniformli": 18, "36": [18, 20, 33], "loc": [18, 19, 23, 33, 35, 54, 55, 56, 57], "inter": 18, "space": [18, 33, 46, 67, 75], "elif": 18, "ie": [18, 45], "360": 18, "co": [18, 19], "180": 18, "sin": 18, "ind_closest": 18, "atar": 18, "halfbeam_bot": 18, "halfbeam_top": 18, "width": [18, 20, 24, 46, 51], "sampl": [18, 20, 23, 32, 44], "angl": [18, 23], "degre": [18, 75], "resolut": 18, "until": [18, 27, 30, 56], "uncertainti": [18, 22], "halfbeam_cur": 18, "ceil": [18, 71], "stopband": 18, "ind": [18, 20, 31], "squeez": [18, 44], "logical_or": 18, "bj": 18, "atar_r": 18, "atar_i": 18, "neg_atar_i": 18, "atar_ri": 18, "as_r": 18, "as_i": 18, "neg_as_i": 18, "as_ri": 18, "as_ri_top": 18, "as_ri_bot": 18, "realones_ri": 18, "w_ri": 18, "as_ri_row": 18, "cvxopt": [18, 20, 25, 26, 32, 33, 34, 58, 60, 64, 67, 75, 76], "degress": 18, "halfbeam": 18, "optimum": [18, 24], "nois": [18, 22, 27, 29, 30, 31, 44, 48, 56], "hens": 18, "26": [18, 20, 28, 31, 32], "6616084212553195": 18, "matplotlib": [18, 19, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 44, 50, 51, 54, 55, 56, 57, 70, 74], "pyplot": [18, 19, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 44, 50, 51, 54, 55, 56, 57, 70, 74], "plt": [18, 19, 20, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 44, 50, 51, 54, 55, 56, 57, 70, 74], "inlin": [18, 19, 20, 23, 25, 28, 32, 33, 34, 35, 44, 51, 54, 55, 56, 57], "ipython": [18, 19, 20, 23, 25, 28, 32, 33, 58], "rc": [18, 20, 23, 25, 27, 28, 32, 33, 70, 74], "usetex": [18, 20, 23, 25, 28, 32, 33, 70, 74], "font": [18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 35, 70, 74], "famili": [18, 20, 23, 25, 28, 32, 33, 64, 70, 74], "serif": [18, 20, 23, 25, 28, 32, 33, 70, 74], "figur": [18, 19, 20, 23, 24, 25, 30, 32, 33, 44, 68, 70, 74], "figsiz": [18, 19, 20, 22, 23, 24, 25, 30, 31, 32, 33, 34, 70, 74], "scatter": [18, 21], "facecolor": 18, "edgecolor": [18, 24], "titl": [18, 20, 22, 23, 32, 35, 54, 56, 58, 61, 63, 74], "fontsiz": [18, 20, 32, 33, 54, 55, 56, 57, 70, 74], "tight_layout": [18, 33, 74], "w_im": 18, "a_r": [18, 23], "neg_a_i": 18, "a_ri": 18, "dot": [18, 19, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 54, 56, 57, 72], "ymin": [18, 24, 30], "ymax": [18, 24, 30], "40": [18, 20, 33, 38], "arang": [18, 19, 23, 25, 29, 35], "log10": [18, 23], "xlabel": [18, 19, 20, 23, 25, 28, 33, 35, 44, 54, 55, 56, 57, 70, 74], "ylabel": [18, 19, 20, 23, 25, 28, 33, 35, 44, 55, 70, 74], "mag": 18, "ylim": [18, 20, 23, 33, 35], "zerodb": 18, "dby": 18, "xlim": [18, 20, 23, 33, 35], "1f": [18, 70], "lobe": 18, "center": [18, 19, 24], "theta_1": 18, "theta_2": 18, "55": [18, 24, 30, 31], "experiment": [19, 76], "measur": [19, 22, 31, 36, 44], "lifespan": 19, "mice": 19, "portion": 19, "durat": 19, "studi": [19, 42, 43], "deal": 19, "likelihood": [19, 22, 55], "estim": [19, 22, 24, 25, 31, 39, 44, 53, 54, 56], "mle": 19, "difficult": 19, "well": [19, 20, 24, 30, 31, 33, 56, 67, 76], "overcom": 19, "challeng": [19, 67], "homework": 19, "101": [19, 20, 43], "cours": [19, 62, 76], "notat": 19, "epsilon": [19, 27, 52], "sigma": [19, 22, 24, 27, 31, 39, 40, 44, 48, 54, 56, 57], "underset": 19, "observ": [19, 31, 54, 56, 75], "fulli": [19, 58], "practic": [19, 56, 76], "200": [19, 22, 24, 34], "c_true": [19, 44], "argsort": 19, "y_order": 19, "x_order": 19, "y_censor": 19, "plot": [19, 20, 22, 24, 28, 30, 31, 35, 44, 50, 51, 54, 55, 56, 57, 70, 74], "plot_fit": 19, "fit_label": 19, "bo": 19, "label": [19, 20, 23, 24, 31, 33, 35, 44, 48, 54, 55, 56, 57, 70], "ro": [19, 30, 31], "legend": [19, 22, 23, 33, 35, 44, 54, 55, 56, 57, 70], "linalg": [19, 20, 24, 30, 32, 41, 70], "lstsq": 19, "c_ol": 19, "rcond": 19, "fit_ol": 19, "systemat": 19, "overestim": 19, "red": [19, 24, 30, 34], "cyan": 19, "blue": [19, 30, 34, 68], "exert": 19, "lot": [19, 24], "leverag": 19, "down": [19, 68, 76], "trendlin": 19, "maintain": [19, 31, 58, 59, 76], "tractabl": [19, 22], "throw": [19, 58, 74], "awai": [19, 75], "dataset": [19, 36, 44, 56], "accomplish": [19, 75], "c_ols_uncensor": 19, "fit_ols_uncensor": 19, "bad_predict": 19, "color": [19, 24, 44], "orang": [19, 44], "marker": 19, "o": [19, 24, 30, 34, 67, 72, 75], "lw": [19, 35], "vastli": 19, "unbias": 19, "glare": 19, "arrang": 19, "predict": [19, 24, 36, 42, 43, 53, 56, 70], "though": [19, 34, 70], "awar": [19, 67], "x_uncensor": 19, "c_cvx": 19, "fit_cvx": 19, "qualit": [19, 54], "longer": [19, 55, 57, 59, 76], "inconsist": [19, 76], "But": [19, 24, 68], "job": [19, 24, 34, 51], "euclidean": [19, 67, 72], "c_": [19, 20], "2f": [19, 24], "49": [19, 20], "advent": 19, "robust": [19, 20, 41, 53, 75], "entireti": 19, "lieven": 20, "vanderbergh": 20, "argyri": [20, 28], "zymni": [20, 28], "2005": [20, 22], "michael": 20, "grant": [20, 63], "cosmet": 20, "el": 20, "gamal": 20, "wire": 20, "transistor": 20, "circuit": 20, "topologi": [20, 24], "dissip": 20, "domin": 20, "per": 20, "thu": [20, 24, 29, 31, 33, 35], "segment": [20, 30, 74], "le": [20, 23, 32], "w_": [20, 29, 31, 43], "capacit": 20, "beta_i": [20, 29, 55, 57], "alpha_i": [20, 29, 35], "c_0": 20, "c_1": 20, "x_m": [20, 49], "c_m": 20, "sdp": [20, 40, 67, 75, 76], "simple_step": 20, "dt": 20, "expm": 20, "bd": 20, "ey": [20, 32, 44, 47, 49], "dimxdim": 20, "rowwis": 20, "columnwis": 20, "twice": 20, "xi": [20, 21, 74], "g0": 20, "c0": 20, "7": [20, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 43, 44, 46, 51, 60, 67, 74, 75, 76], "wmax": 20, "cc": 20, "gg": 20, "matlab": [20, 64], "zo13": 20, "zo24": 20, "pn13": 20, "pn24": 20, "driver": 20, "eas": 20, "tradeoff": 20, "npt": 20, "delai": [20, 23, 43], "linspac": [20, 23, 24, 30, 31, 50, 51], "150": 20, "xdelai": 20, "100": [20, 24, 33, 34, 43, 44, 46, 54, 55, 56, 57, 67, 75], "xnpt": 20, "area": [20, 46, 51], "xarea": 20, "revisit": 20, "gather": [20, 21], "tmax": 20, "xt": 20, "produc": [20, 25, 44, 66, 70, 75], "slower": [20, 56, 75], "kkt": [20, 75, 76], "kktsolver": [20, 58, 75], "optimal_inaccur": [20, 28, 74], "chop": 20, "inv": [20, 32], "500": [20, 25, 34], "2000": [20, 22, 67, 75], "indmax": 20, "indmin": 20, "amin": 20, "jmax": 20, "jmin": 20, "tthre": 20, "ginvc": 20, "tdom": 20, "eig": 20, "elmor": 20, "amax": 20, "asarrai": 20, "92": 20, "88": 20, "96": 20, "600": [20, 24, 34], "fastest": 20, "slowest": [20, 54], "isfinit": 20, "52": 20, "04081632653061": 20, "54": 20, "08163265306123": 20, "12244897959184": 20, "58": [20, 34], "16326530612245": 20, "20408163265306": 20, "62": [20, 29], "244897959183675": 20, "64": 20, "28571428571429": 20, "66": [20, 34, 46, 68], "3265306122449": 20, "68": 20, "36734693877551": 20, "70": 20, "40816326530611": 20, "72": 20, "44897959183673": 20, "74": 20, "48979591836735": 20, "76": 20, "53061224489795": 20, "57142857142857": 20, "80": [20, 54, 75], "61224489795919": 20, "82": 20, "65306122448979": 20, "84": 20, "6938775510204": 20, "86": [20, 39], "73469387755102": 20, "77551020408163": 20, "81632653061224": 20, "85714285714286": 20, "94": 20, "89795918367346": 20, "93877551020408": 20, "98": 20, "9795918367347": 20, "0204081632653": 20, "27": [20, 23, 28, 31], "103": 20, "06122448979592": 20, "28": [20, 25, 28, 31, 33], "105": [20, 43], "10204081632654": 20, "29": [20, 28, 31], "107": [20, 43], "14285714285714": 20, "109": 20, "18367346938776": 20, "31": 20, "111": [20, 24, 30], "22448979591837": 20, "32": 20, "113": [20, 43], "26530612244898": 20, "33": [20, 33], "115": 20, "3061224489796": 20, "117": 20, "34693877551021": 20, "35": [20, 24, 30, 51], "119": 20, "38775510204081": 20, "121": 20, "42857142857143": 20, "37": [20, 31], "46938775510205": 20, "38": 20, "125": 20, "51020408163265": 20, "39": [20, 39], "127": 20, "55102040816327": 20, "129": 20, "59183673469389": 20, "41": [20, 31], "131": 20, "6326530612245": 20, "42": [20, 61], "133": [20, 35], "67346938775512": 20, "43": 20, "135": 20, "71428571428572": 20, "44": [20, 31], "137": 20, "75510204081633": 20, "139": 20, "79591836734693": 20, "46": 20, "141": 20, "83673469387756": 20, "47": 20, "143": 20, "87755102040816": 20, "48": [20, 33], "145": [20, 35], "9183673469388": 20, "147": 20, "9591836734694": 20, "65284441": 20, "4391586": 20, "52378143": 20, "47092764": 20, "2363529": 20, "99999993": 20, "85353862": 20, "99999992": 20, "93601078": 20, "56994586": 20, "92325575": 20, "29557654": 20, "80041338": 20, "99999998": 20, "99999997": 20, "41300012": 20, "13553757": 20, "26699524": 20, "67049218": 20, "88916807": 20, "96487539e": 20, "01": [20, 22, 24, 25, 26, 28, 29, 31, 34, 43, 44, 52, 74, 75], "40591789e": 20, "70591442e": 20, "79376843e": 20, "27429285e": 20, "07446433e": 20, "02": [20, 22, 24, 25, 26, 28, 30, 31, 34, 44, 75], "38430105e": 20, "02136471e": 20, "07": [20, 22, 25, 26, 28, 31, 34, 44, 51, 75], "59913722e": 20, "28906472e": 20, "05807467e": 20, "09": [20, 22, 24, 25, 26, 29, 31, 45, 51, 75], "16285450e": 20, "91561390e": 20, "48052913e": 20, "58096913e": 20, "82528741e": 20, "85708568e": 20, "75578696e": 20, "39862772e": 20, "38639181e": 20, "2687881": 20, "04368684": 20, "17122095": 20, "133796": 20, "07360396": 20, "41346231": 20, "08016135": 20, "30642705": 20, "2224136": 20, "1484946": 20, "25755998": 20, "08016077": 20, "11200259": 20, "38352317": 20, "28159768": 20, "13439419": 20, "04368697": 20, "02445701": 20, "24083502": 20, "24534599": 20, "53896782e": 20, "18600578e": 20, "75218556e": 20, "19196383e": 20, "57176577e": 20, "30752726e": 20, "56673760e": 20, "35065528e": 20, "96797753e": 20, "03852376e": 20, "35404466e": 20, "12219313e": 20, "22938358e": 20, "91865186e": 20, "51304362e": 20, "31975762e": 20, "50790152e": 20, "39421076e": 20, "33247519e": 20, "27680128e": 20, "f_i": [21, 45], "fit": [21, 36, 53, 55, 57, 63], "train": [21, 44, 54, 55, 56, 57], "contrast": 21, "global": 21, "admm": 21, "xbar": 21, "prox": 21, "proxim": [21, 75], "_i": 21, "overlin": 21, "subproblem": [21, 71], "worker": 21, "parallel": [21, 51, 54, 74], "averag": [21, 43, 49, 57], "u_i": [21, 29, 41], "multiprocess": [21, 74, 75], "pipe": 21, "f_list": 21, "run_work": 21, "loop": [21, 27], "recv": 21, "proc": 21, "run_process": 21, "termin": [21, 63, 67, 75], "sensor": [22, 31], "samar": 22, "sikandar": 22, "dimitri": 22, "gorinevski": [22, 25], "stephen": [22, 28, 58, 59, 61], "european": 22, "confer": 22, "cdc": 22, "ecc": 22, "44th": 22, "ieee": 22, "lbrace": [22, 24, 30, 31], "rbrace": [22, 24, 30, 31], "occurr": 22, "signatur": 22, "v_j": 22, "gaussian": [22, 23, 31, 53, 56, 76], "guess": [22, 28, 34, 75], "compress": 22, "ell": [22, 43, 55, 72], "nonconvex": [22, 30, 64], "relax": [22, 24, 33, 75], "ml": 22, "nearest": 22, "ratio": [22, 27, 29, 43, 44, 46, 48, 50, 51, 71], "That": [22, 24, 54, 60], "snr": 22, "x_true": [22, 31], "astyp": 22, "line2d": [22, 24, 30, 44, 51], "0x11ae42518": 22, "0x11aee9630": 22, "tau": [22, 30, 31, 34, 75], "const": 22, "x_rml": 22, "x_rnd": 22, "embotech": [22, 31], "gmbh": [22, 31], "zurich": [22, 31, 75], "switzerland": [22, 31], "2012": [22, 31, 34, 75], "pcost": [22, 25, 26, 31, 75], "dcost": [22, 25, 26, 31, 75], "gap": [22, 25, 26, 31, 34, 75], "dre": [22, 25, 26, 31, 75], "mu": [22, 24, 31, 43, 75], "ir": [22, 31, 75], "bt": [22, 31], "343e": 22, "03": [22, 24, 25, 26, 28, 31, 34, 44, 75], "862e": 22, "5e": [22, 25, 26, 31, 44, 75], "04": [22, 24, 25, 26, 28, 31, 34, 44, 75], "00": [22, 24, 25, 26, 28, 29, 31, 34, 44, 52, 75], "814e": 22, "580e": 22, "8e": [22, 25, 26, 31, 75], "6e": [22, 25, 26, 31, 43], "8500": 22, "079e": 22, "428e": 22, "4e": [22, 25, 26, 31, 75], "7544": 22, "7e": [22, 25, 31, 43, 75], "321e": 22, "030e": 22, "3e": [22, 25, 26, 31, 43, 75], "3122": 22, "074e": 22, "9e": [22, 25, 31, 75], "7839": 22, "121e": 22, "072e": 22, "3859": 22, "898e": 22, "060e": 22, "06": [22, 24, 25, 28, 31, 34, 44, 51, 75], "5780": 22, "778e": 22, "711e": 22, "9890": [22, 31], "307e": 22, "143e": 22, "5528": 22, "607e": 22, "286e": 22, "8303": 22, "741e": 22, "557e": 22, "6242": 22, "834e": 22, "749e": 22, "8043": 22, "888e": 22, "861e": 22, "9175": 22, "909e": 22, "902e": 22, "8198": 22, "914e": 22, "912e": 22, "8581": 22, "916e": 22, "9004": 22, "8174": 22, "8917": 22, "8588": 22, "9309": 22, "8768": 22, "9089": 22, "8362": 22, "feastol": [22, 31, 75], "reltol": [22, 31, 75], "runtim": [22, 31, 75], "538894": 22, "191": 22, "6347201927456": 22, "cpu": [22, 31], "51": 22, "sy": [22, 31, 32, 34, 75], "291": 22, "wall": [22, 24, 31, 46], "false_po": 22, "logical_and": 22, "false_neg": 22, "plotx": 22, "filenam": [22, 31, 75], "rcparam": [22, 24, 31, 35], "fig": [22, 24, 30, 31, 34, 44], "subplot": [22, 30, 31, 32, 34, 74], "sharex": [22, 31], "sharei": [22, 31], "enumer": [22, 24, 30, 31], "set_titl": [22, 31, 34], "set_ylim": 22, "savefig": [22, 31], "bbox_inch": [22, 31], "frequenc": 23, "h_": 23, "judg": [23, 31], "socp": [23, 41, 67, 75], "impuls": 23, "zeroth": 23, "thumb": 23, "chenei": 23, "theori": [23, 24, 35, 63], "book": [23, 24, 58, 59], "hde": 23, "phase": [23, 75], "uncom": 23, "hdes_r": 23, "hdes_i": 23, "chebyshev": 23, "equivel": 23, "successfulli": [23, 74], "4999999999999996": 23, "repons": 23, "stem": [23, 60, 67], "freq": 23, "vari": [24, 31], "tabl": [24, 69, 71, 75], "combinator": 24, "shortest": 24, "dijkstra": 24, "s_algorithm": 24, "ell_1": [24, 54], "ee364b": [24, 30], "l1_ext_slid": 24, "__": 24, "explor": 24, "move": [24, 31, 76], "him": 24, "cycl": 24, "evas": 24, "p_j": [24, 27], "undetect": 24, "detect": [24, 53, 76], "event": [24, 63, 75], "he": 24, "resourc": 24, "Their": 24, "chanc": [24, 76], "amen": 24, "realli": 24, "hopefulli": 24, "won": [24, 70], "confus": [24, 58, 72], "hi": [24, 30], "face": 24, "pick": [24, 30], "star": [24, 30, 36, 37, 38, 39, 41], "remaind": 24, "analyz": [24, 67], "cell": [24, 28, 52], "notebook": [24, 30, 42, 45, 47, 49, 50, 52, 54, 56, 58, 69, 70, 71], "config": [24, 54, 55, 56, 57], "inlinebackend": [24, 54, 55, 56, 57], "figure_format": [24, 54, 55, 56, 57], "svg": [24, 54, 55, 56, 57], "retina": 24, "networkx": 24, "nx": 24, "formgraph": 24, "eta": [24, 42], "dummynod": 24, "perterb": 24, "insid": [24, 29, 30], "pos2": 24, "dummi": 24, "exit": 24, "random_geometric_graph": 24, "cross": [24, 63], "intersect": [24, 30], "remove_edg": 24, "digraph": 24, "add_edg": 24, "showpath": 24, "edgeprob": 24, "visiblenod": 24, "gnode": 24, "rnode": 24, "edgeprobd": 24, "hidden": 24, "green": [24, 30, 34], "black": [24, 34], "add_subplot": [24, 30], "number_of_nod": 24, "draw": 24, "regular": [24, 25, 75], "interior": [24, 75], "draw_networkx_nod": 24, "nodelist": 24, "node_color": 24, "node_s": 24, "zip": [24, 47], "color2": 24, "mess": 24, "edge2ind": 24, "ind2edg": 24, "displai": [24, 33, 34, 63, 75], "visibleedg": 24, "edgelist": 24, "isinst": 24, "number_of_edg": 24, "transpar": 24, "draw_networkx_edg": 24, "edge_color": 24, "edge_cmap": 24, "cm": [24, 34], "rdylgn": 24, "arrow": 24, "edge_vmin": 24, "edge_vmax": 24, "visibl": [24, 34], "visiblepath": 24, "path_pair": 24, "path_color": 24, "colorbar": 24, "optpath": 24, "bring": [24, 76], "pair": [24, 44, 48, 75], "shortest_path": 24, "astar_path": 24, "foo": 24, "zeros_lik": 24, "p1": [24, 30, 72], "p2": [24, 30], "xmin": [24, 30], "xmax": [24, 30], "rectangl": [24, 30, 51], "xy": [24, 30, 42, 49, 69, 71], "sight": [24, 30], "getguardeffect": 24, "guardidx": 24, "evadeprob": 24, "edgecent": 24, "numguard": 24, "edgev": 24, "gid": 24, "get_a": 24, "e2": 24, "thwart": 24, "certain": [24, 27, 51, 67, 76], "firstli": 24, "similarli": [24, 43, 67, 71, 72], "turn": [24, 51], "still": [24, 45, 67], "network": [24, 43], "irregular": 24, "a_j": 24, "corner": 24, "anaconda3": 24, "lib": 24, "site": 24, "nx_pylab": 24, "611": 24, "matplotlibdeprecationwarn": 24, "cb": 24, "is_numlik": 24, "incidence_matrix": 24, "toarrai": 24, "count": [24, 67], "v0": [24, 31, 44], "bartolomeo": [24, 31, 44, 59], "stellato": [24, 31, 44, 59], "goran": [24, 31, 44], "banjac": [24, 31, 44], "univers": [24, 31, 34, 44, 75], "oxford": [24, 31, 44], "2018": [24, 31, 61], "354": 24, "808": 24, "nnz": [24, 31, 33, 34, 44, 75], "1416": 24, "eps_ab": [24, 31, 44, 75], "0e": [24, 31, 44, 75], "eps_rel": [24, 31, 44, 75], "eps_prim_inf": [24, 31, 44], "eps_dual_inf": [24, 31, 44], "00e": [24, 31, 34, 44, 75], "4000": [24, 31], "check_termin": [24, 31, 44], "scaled_termin": [24, 31, 44], "pri": [24, 31, 34, 44, 75], "dua": [24, 31, 34, 44, 75], "9458e": 24, "97e": [24, 34, 43], "10e": [24, 34], "0606e": 24, "47e": [24, 34], "64e": [24, 43, 44, 75], "35e": [24, 34, 43], "unsuccess": 24, "0606": 24, "15e": [24, 34], "09e": [24, 34, 43], "flatnonzero": 24, "3f": 24, "341943e": 24, "634": 24, "theoret": 24, "343747e": 24, "budget": [24, 37], "personnel": 24, "problemat": 24, "chapter": 24, "r_j": 24, "yearli": 24, "naiv": 24, "against": [24, 27, 63, 76], "spend": [24, 36], "br": 24, "nu": 24, "454": 24, "1240": 24, "2478": 24, "3084e": 24, "54e": [24, 34], "59e": [24, 34, 43], "2269e": 24, "28e": [24, 31], "58e": [24, 34, 43], "06e": [24, 44], "2692": 24, "05e": 24, "131035e": 24, "29759913": 24, "87": 24, "576x432": 24, "_subplot": 24, "axessubplot": 24, "0xd19325278": 24, "8977e": 24, "71e": [24, 34, 43], "14e": [24, 31, 34], "0447e": 24, "16e": [24, 34, 43], "89e": 24, "66e": [24, 43], "325": 24, "0607e": 24, "79e": [24, 34], "46e": [24, 34], "95e": [24, 34], "6072": 24, "08e": [24, 34, 43], "37e": [24, 34, 43, 44], "123036e": 24, "again": 24, "553365e": 24, "whom": [24, 63], "put": [24, 35], "bit": [24, 29], "harder": 24, "forc": [24, 31, 32, 33], "evenli": 24, "nearbi": 24, "demonstr": [24, 30, 70], "highlight": 24, "light": 24, "profil": 24, "anywher": [24, 67], "visual": [24, 60, 68], "shown": [24, 68, 74], "65": [24, 30, 51], "rect": [24, 30], "fc": [24, 30], "add_patch": [24, 30], "reweight": 24, "set_size_inch": 24, "448": 24, "1305": 24, "27688": 24, "5225e": 24, "24e": [24, 31, 34, 43, 75], "50e": [24, 34], "8653e": 24, "33e": 24, "96e": [24, 34], "98e": 24, "8653": 24, "13e": 24, "7726e": 24, "23e": [24, 34], "8639e": 24, "36e": [24, 43], "400": [24, 34], "9265e": 24, "92e": [24, 34, 75], "8962e": 24, "74e": [24, 34, 43], "61e": 24, "800": 24, "8931e": 24, "31e": 24, "8566e": 24, "39e": [24, 34, 43], "56e": [24, 43, 44], "1200": 24, "8689e": 24, "1225": 24, "8471e": 24, "94e": [24, 34], "93e": 24, "30e": [24, 34, 44], "4712": 24, "86e": [24, 75], "0xd1b50d438": 24, "path_ind": 24, "213215e": 24, "kwangmoo": 25, "koh": 25, "2007": 25, "kim": [25, 46, 48], "l_1": [25, 27], "l1_trend_filt": 25, "aris": [25, 35, 39, 63, 64], "varieti": [25, 65, 76], "_1": [25, 33, 54, 55, 57, 68, 72, 74], "bmatrix": [25, 31, 42, 47, 49, 75], "l1_tf": 25, "load": [25, 34, 43], "price": 25, "loadtxt": 25, "snp500": 25, "txt": 25, "rb": 25, "delimit": 25, "skiprow": 25, "spdiag": 25, "vlambda": 25, "converg": [25, 27, 28, 33, 75], "did": [25, 28, 33, 75, 76], "0000e": [25, 26, 31, 44], "2350e": 25, "5374e": 25, "9086e": 25, "3346e": 25, "9403e": 25, "4110e": 25, "5979e": 25, "1278e": 25, "4154e": 25, "4522e": 25, "0480e": 25, "0710e": 25, "9603e": 25, "9825e": 25, "0529e": 25, "0542e": 25, "1994e": 25, "2004e": 25, "2689e": 25, "2693e": 25, "3728e": 25, "3729e": 25, "3802e": 25, "3803e": 25, "3965e": 25, "3998e": 25, "3999e": 25, "4011e": 25, "4013e": 25, "4014e": 25, "4017e": 25, "4015e": 25, "4014300716775199": 25, "linewidth": 25, "jo\u00ebll": 26, "skaf": [26, 28, 32], "2008": [26, 32], "tmp": 26, "nthe": [26, 36, 37, 39], "8736e": 26, "0720e": 26, "9687e": 26, "4688e": 26, "5883e": 26, "4595e": 26, "4889e": 26, "4763e": 26, "4816e": 26, "4804e": 26, "4809e": 26, "480901486350394": 26, "43483319": 26, "66111715": 26, "49201039": 26, "36030618": 26, "38416629": 26, "30283658": 26, "41730232": 26, "79107794": 26, "76667302": 26, "38292365": 26, "2479328": 26, "50416987": 26, "68053832": 26, "67163958": 26, "13877259": 26, "5248668": 26, "08418897": 26, "56927148": 26, "50000248": 26, "78291311": 26, "196": 27, "intefer": 27, "plu": [27, 55], "sinr": [27, 48], "transmitt": [27, 35, 48], "transmit": [27, 29], "receiv": [27, 29, 48, 63], "s_i": [27, 48], "ii": [27, 48, 63, 75], "interef": 27, "i_i": 27, "ik": [27, 48], "p_k": [27, 48], "sigma_i": [27, 48], "gamma_i": 27, "partit": [27, 42], "nonoverlap": 27, "k_1": 27, "k_m": 27, "share": [27, 59, 63], "p_l": 27, "k_l": 27, "iii": [27, 63], "rewritten": [27, 29, 41, 70, 76], "bisect": [27, 51, 71], "l_0": 27, "u_0": 27, "alpha_0": 27, "u_1": 27, "alpha_1": 27, "u_n": 27, "l_n": 27, "desir": [27, 32, 58, 74, 75], "maxmin_sinr": 27, "p_max": [27, 48], "p_receiv": 27, "group_max": 27, "\u03c3": 27, "interfer": [27, 48], "num_group": 27, "normalis": 27, "group_norm": 27, "optimis": [27, 29, 35], "1e4": 27, "generalis": 27, "\u03b1": [27, 29, 35], "li": 27, "algortithm": 27, "maxloop": 27, "1e7": 27, "finish": 27, "midpoint": 27, "atleast_1d": 27, "reach": [27, 30, 67, 75], "\u03b5": 27, "sublevel": [27, 71], "satur": 27, "148": 27, "joell": [28, 32], "yx": 28, "_f": 28, "y_init": 28, "iter_num": 28, "At": [28, 30, 69, 70, 71, 76], "NOT": 28, "odd": 28, "eg": 28, "766300564135502": 28, "5840356930600721": 28, "3356679970549085": 28, "18670276027770083": 28, "12819921698143966": 28, "09295501592922492": 28, "06766021043574907": 28, "04958204907945361": 28, "03897402158866238": 28, "02979328283505179": 28, "022938564327729952": 28, "021943924920767337": 28, "01810297853945281": 28, "014551161988556204": 28, "014039687334395924": 28, "009354606824469416": 28, "008643141637584189": 28, "007278100007476402": 28, "008486679700021057": 28, "008827511916396866": 28, "008396764193205366": 28, "005265185332845983": 28, "006931929503816392": 28, "007356156596477946": 28, "0039053948996930054": 28, "003989885269615319": 28, "002920361405226024": 28, "007779246694466739": 28, "007339011292898449": 28, "005008539285258121": 28, "323426": 28, "11061189": 28, "69137835": 28, "20020115": 28, "13216889": 28, "5980743": 28, "64965406": 28, "340611": 28, "69871738": 28, "78278448": 28, "73721109": 28, "40464204": 28, "90898877": 28, "60774132": 28, "53717253": 28, "62647405": 28, "76242265": 28, "41151492": 28, "8048194": 28, "20313124": 28, "4071438": 28, "10269406": 28, "75323063": 28, "18928983": 28, "23428169": 28, "60364688": 28, "63792853": 28, "40855006": 28, "57257432": 28, "17227344": 28, "3905141": 28, "33367163": 28, "07723947": 28, "67735654": 28, "33039096": 28, "42003169": 28, "22641711": 28, "21470465": 28, "47350799": 28, "84931787": 28, "42153652": 28, "13598552": 28, "00816457": 28, "11463462": 28, "17914429": 28, "69942578": 28, "90353699": 28, "45664487": 28, "81023916": 28, "09668578": 28, "60813803": 28, "23214532": 28, "73741086": 28, "3148874": 28, "27589039": 28, "40755835": 28, "31904948": 28, "3469129": 28, "34256526": 28, "76924618": 28, "90607895": 28, "6632877": 28, "25412229": 28, "81696721": 28, "87218892": 28, "50032884": 28, "245879": 28, "25079329": 28, "25017792": 28, "72155621": 28, "5691922": 28, "47359672": 28, "76518996": 28, "66268312": 28, "43746574": 28, "72486628": 28, "97409333": 28, "39239642": 28, "09234807": 28, "16325748": 28, "18723548": 28, "00282008": 28, "41532595": 28, "03836298": 28, "90382914": 28, "38460446": 28, "213473": 28, "23641422": 28, "32784402": 28, "27179726": 28, "75789915": 28, "75119989": 28, "99502166": 28, "65444815": 28, "56073096": 28, "341146": 28, "02555143": 28, "24273668": 28, "01035919": 28, "49427978": 28, "56475742e": 28, "42102372e": 28, "40426641e": 28, "02845111e": 28, "38002833e": 28, "36189366e": 28, "27831861e": 28, "28165827e": 28, "60609403e": 28, "34595403e": 28, "54834858e": 28, "37954560e": 28, "01726231e": 28, "96879041e": 28, "74736667e": 28, "72955779e": 28, "53749151e": 28, "14934798e": 28, "81276972e": 28, "26647247e": 28, "93952558e": 28, "50946872e": 28, "18853643e": 28, "85961318e": 28, "96701863e": 28, "26183347e": 28, "41639937e": 28, "71711699e": 28, "33393633e": 28, "55176129e": 28, "89263105e": 28, "20725095e": 28, "56036398e": 28, "24033457e": 28, "38302416e": 28, "09810836e": 28, "55780427e": 28, "03636918e": 28, "08549910e": 28, "91844947e": 28, "31578328e": 28, "75528332e": 28, "93543168e": 28, "10037225e": 28, "65884776e": 28, "26650967e": 28, "53761974e": 28, "52855369e": 28, "43132832e": 28, "47569255e": 28, "07015116e": 28, "25961964e": 28, "59511553e": 28, "26808607e": 28, "98124301e": 28, "62801718e": 28, "53757673e": 28, "88661317e": 28, "64559055e": 28, "43675625e": 28, "72908811e": 28, "03553498e": 28, "45229205e": 28, "10121868e": 28, "93621271e": 28, "12383803e": 28, "45085312e": 28, "25155585e": 28, "84272390e": 28, "94988511e": 28, "41086863e": 28, "70049131e": 28, "73427259e": 28, "50933223e": 28, "38007474e": 28, "51575697e": 28, "99473425e": 28, "39362252e": 28, "06840502e": 28, "22844259e": 28, "70906925e": 28, "46340550e": 28, "04256418e": 28, "63290841e": 28, "39889787e": 28, "65220031e": 28, "22742919e": 28, "60875098e": 28, "41601146e": 28, "72448408e": 28, "44108256e": 28, "62667224e": 28, "26354249e": 28, "23656013e": 28, "81220987e": 28, "57729003e": 28, "90739234e": 28, "81123997e": 28, "15606388e": 28, "43189790e": 28, "02157264e": 28, "23117764e": 28, "79950842e": 28, "74317402e": 28, "61768644e": 28, "28680186e": 28, "62394448e": 28, "76277321e": 28, "85227596e": 28, "60481823e": 28, "33027425e": 28, "21455250e": 28, "17040399e": 28, "56606195e": 28, "41256203e": 28, "01386736e": 28, "36342995e": 28, "73587325e": 28, "22429324e": 28, "04432888e": 28, "35846517e": 28, "46121871e": 28, "93720663e": 28, "38806481e": 28, "42363429e": 28, "36215640e": 28, "31633730e": 28, "52108618e": 28, "23620331e": 28, "42078084e": 28, "62860853e": 28, "83780003e": 28, "20542830e": 28, "49712163e": 28, "31334078e": 28, "78805144e": 28, "46798183e": 28, "03546983e": 28, "79256197e": 28, "81320754e": 28, "22557723e": 28, "31892711e": 28, "34719938e": 28, "01388769e": 28, "52745774e": 28, "12014739e": 28, "42548761e": 28, "17321003e": 28, "50760383e": 28, "01455643e": 28, "46202248e": 28, "61714835e": 28, "15005890e": 28, "85452470e": 28, "39872783e": 28, "59000367e": 28, "24749082e": 28, "69461803e": 28, "16622183e": 28, "20910778e": 28, "15561552e": 28, "28864368e": 28, "77288000e": 28, "10264071e": 28, "38713553e": 28, "17730381e": 28, "05892579e": 28, "69449092e": 28, "71225020e": 28, "13410340e": 28, "57913703e": 28, "21168134e": 28, "04695033e": 28, "48187018e": 28, "38037868e": 28, "45409129e": 28, "34145488e": 28, "47289692e": 28, "98184939e": 28, "09549810e": 28, "51365483e": 28, "32683206e": 28, "26345269e": 28, "01647636e": 28, "72529426e": 28, "10472383e": 28, "48674297e": 28, "54468161e": 28, "92202367e": 28, "42249517e": 28, "63514531e": 28, "59800828e": 28, "08957766e": 28, "01954949e": 28, "41048252e": 28, "06257705e": 28, "57094132e": 28, "64204427e": 28, "26930797e": 28, "63755883e": 28, "210": 29, "central": 29, "messag": [29, 75, 76], "w_i": [29, 30, 33, 43], "tot": 29, "rate": [29, 35, 43], "r_i": 29, "corrupt": [29, 34, 56], "white": [29, 34], "beta_ip_i": 29, "simplest": 29, "itself": 29, "although": [29, 75, 76], "prohibit": 29, "utilis": 29, "kullback": 29, "leibler": 29, "diverg": 29, "optimal_pow": 29, "a_val": 29, "b_val": 29, "p_tot": 29, "w_tot": 29, "\u03b2": 29, "451": 29, "151e": 29, "708e": 29, "756e": 29, "788e": [29, 75], "000e": [29, 31, 75], "091e": 29, "955e": 29, "908e": [29, 31], "193e": 29, "slide": [30, 65], "tackl": 30, "protect": 30, "guard": 30, "discrit": 30, "coverag": 30, "secur": 30, "least": [30, 31, 38, 43, 44, 53, 54, 56, 59, 63, 69, 70, 71, 74, 75], "alloc": [30, 33, 35, 39, 53], "induc": 30, "incentiv": 30, "toward": [30, 56, 76], "obstruct": 30, "form_path": 30, "pold": 30, "form_grid": 30, "guard_set": 30, "num": [30, 51], "pert": 30, "inrect": 30, "remove_guard": 30, "p_evad": 30, "minval": 30, "get_guard_effect": 30, "evade_func": 30, "guard_effect": 30, "detect_p": 30, "95": [30, 75], "85": [30, 32], "0x105d17cc0": 30, "increasingli": 30, "num_guard": 30, "xsol": 30, "27091799207174": 30, "placement": 30, "yellow": 30, "markers": 30, "0xb1853f1d0": 30, "pinpoint": 31, "high": [31, 71, 75, 76], "noisi": [31, 75], "dynam": 31, "outlier": 31, "x_t": 31, "ax_t": 31, "bw_t": 31, "y_t": 31, "cx_t": 31, "v_t": 31, "w_t": 31, "drive": [31, 54, 56], "drift": 31, "tune": [31, 32, 54, 56], "algebra": 31, "y_": [31, 44, 72], "ax_": 31, "bw_": 31, "vestigi": 31, "concis": 31, "influenc": 31, "degrad": 31, "phi_": 31, "penal": [31, 56], "linearli": [31, 54, 55], "ball": [31, 41], "harshli": 31, "damp": 31, "recurr": 31, "subsect": 31, "acceler": [31, 34, 75], "v_": [31, 57], "plot_stat": 31, "trajectori": 31, "set_ylabel": 31, "yaxi": 31, "tick_right": 31, "set_label_posit": 31, "set_xlabel": 31, "plot_posit": 31, "traj": 31, "cloud": 31, "timestep": 31, "delt": 31, "endpoint": 31, "retstep": 31, "x_0": 31, "w_true": 31, "rkf1": 31, "distort": 31, "kf": 31, "rkf2": 31, "8004": 31, "6000": 31, "22000": 31, "1057e": 31, "57e": [31, 34], "27e": 31, "01e": 31, "plsh": [31, 44], "11e": [31, 43], "78e": [31, 34, 75], "success": [31, 44], "11057": 31, "3550": 31, "70e": [31, 34], "354957764113": 31, "598": 31, "rkf3": 31, "923e": 31, "090e": 31, "360e": 31, "8051": 31, "188e": 31, "134e": 31, "4259": 31, "956e": 31, "5830": 31, "881e": 31, "880e": 31, "7189": 31, "572e": 31, "5464": 31, "986e": 31, "985e": 31, "5716": 31, "262e": 31, "6007": 31, "425e": 31, "5871": 31, "601e": 31, "6383": 31, "728e": 31, "727e": 31, "7925": 31, "759e": 31, "5191": 31, "824e": 31, "860e": 31, "6740": 31, "864e": 31, "2982": 31, "876e": 31, "889e": 31, "7740": 31, "899e": 31, "9702": 31, "901e": 31, "6771": 31, "903e": 31, "9383": 31, "905e": 31, "8982": 31, "906e": 31, "9342": 31, "907e": 31, "8457": 31, "9013": 31, "9207": 31, "9009": 31, "9058": 31, "129066": 31, "39077": 31, "76954636933": 31, "3min": 31, "yy": 32, "s_": 32, "y_j": 32, "condition": 32, "y_1": [32, 44], "y_n": 32, "drawn": 32, "prior": 32, "knowledg": [32, 66], "todens": 32, "sparsen": 32, "strue": 32, "y_sampl": 32, "sqrtm": [32, 70], "cov": 32, "empti": [32, 34], "ss": 32, "logdet": 32, "comprehens": 32, "r_hat": 32, "167608186713004": 32, "545759632606043": 32, "989407069609157": 32, "spy": 32, "432x288": 32, "tropp": 33, "preceq": 33, "rao": 33, "kreutz": 33, "delgado": 33, "portfolio": [33, 39, 53], "transact": 33, "lobo": 33, "fazel": 33, "x0": [33, 37, 41], "x_l1": 33, "cardin": 33, "divers": 33, "nnz_l1": 33, "582394099513873": 33, "num_run": 33, "nnzs_log": 33, "x_log": 33, "linestyl": [33, 44], "intens": 34, "orig": 34, "255": 34, "pixel": 34, "reconstruct": [34, 55, 70, 74], "u_": 34, "ell_2": [34, 36, 41, 56], "u_orig": 34, "imread": 34, "loki512": 34, "png": 34, "u_corr": 34, "loki512_corrupt": 34, "imshow": 34, "cmap": 34, "grai": [34, 44], "v2": 34, "brendan": [34, 75], "donoghu": [34, 75], "lin": [34, 75], "indirect": [34, 63, 75], "1554199": 34, "cg": [34, 75], "tol": [34, 75], "5000": [34, 67], "acceleration_lookback": [34, 44, 75], "rho_x": 34, "523265": 34, "1045507": 34, "262144": 34, "783363": 34, "blk": [34, 75], "261121": 34, "kap": [34, 75], "19e": 34, "21e": [34, 43], "51e": [34, 75], "38e": 34, "69e": 34, "82e": [34, 43], "83e": [34, 43, 75], "12e": [34, 75], "20e": 34, "300": 34, "77e": [34, 43, 44], "75e": [34, 44], "65e": 34, "85e": 34, "07e": 34, "81e": 34, "45e": 34, "48e": 34, "700": 34, "49e": 34, "40e": 34, "720": 34, "04e": 34, "55e": [34, 43], "avg": [34, 75], "41e": [34, 75], "42e": 34, "dist": [34, 75], "1720e": 34, "7180e": 34, "9097e": 34, "0439e": 34, "2388e": 34, "8544e": 34, "11044": 34, "2661": 34, "2813": 34, "28989542425": 34, "magnifi": 34, "factor": [34, 53, 75], "img_diff": 34, "rgb": 34, "discard": [34, 49], "loki512color": 34, "pointer": 34, "523264": 34, "785408": 34, "1047552": 34, "3630814": 34, "1047553": 34, "2614279": 34, "786432": 34, "1827847": 34, "18e": 34, "02e": [34, 43], "34e": 34, "53e": [34, 43], "32e": 34, "52e": 34, "87e": 34, "60e": [34, 75], "43e": [34, 43], "760": 34, "03e": 34, "99e": [34, 43], "29e": [34, 43], "72e": [34, 44], "8769e": 34, "1246e": 34, "2851e": 34, "0269e": 34, "7005e": 34, "4293e": 34, "11465": 34, "6528": 34, "5971": 34, "652787130613": 34, "field": [34, 63, 66, 67, 74, 75, 76], "rec_arr": 34, "clip": 34, "511": 34, "classic": 35, "channel": [35, 53], "floor": [35, 46, 71], "baselin": 35, "straightforward": [35, 66, 68], "water_fil": 35, "ith": 35, "\u03b1_i": 35, "boldsymbol": 35, "achiev": [35, 52, 74, 75], "bucket": 35, "863": 35, "533": 35, "333": 35, "illustr": [35, 56, 70], "flat": 35, "pylab": 35, "xtick": 35, "seek": 36, "005909828287484": 36, "17492418": 36, "38102551": 36, "34732251": 36, "0173098": 36, "0845784": 36, "08134019": 36, "293119": 36, "27019762": 36, "17493179": 36, "23953449": 36, "64097935": 36, "41633637": 36, "12799688": 36, "1063942": 36, "32158411": 36, "6468679280023557": 36, "lose": 37, "profit": 37, "exceed": 37, "star_i": [37, 39], "suggest": [37, 39, 41, 55, 57], "s0": 37, "lamb0": 37, "220912604467838": 37, "10131657": 37, "16370661": 37, "89711643": 37, "03228613": 37, "60662428": 37, "12655967": 37, "12985839": 37, "88200333": 37, "49089264": 37, "89851057": 37, "61175641": 37, "52817175": 37, "07296862": 37, "3015387": 37, "7612069": 37, "24937038": 37, "06014071": 37, "3224172": 37, "38405435": 37, "miqp": 38, "scip": [38, 60, 67, 75, 76], "pyscipopt": 38, "conda": [38, 60], "forg": [38, 60], "66000322824753": 38, "tpx": 39, "gx": 39, "financ": [39, 59], "stock": 39, "covari": [39, 40, 53], "balanc": [39, 75], "g_i": [39, 45], "h_i": 39, "89141585569918": 39, "68244521": 39, "29769913": 39, "38772183": 39, "79986015": 39, "18270433": 39, "20911897": 39, "50993526": 39, "76683701": 39, "45770675": 39, "78589638": 39, "45538054": 39, "67365045": 39, "79927156": 39, "54115873": 39, "cx": [40, 72], "a_ix": [40, 41], "a_p": 40, "b_p": 40, "tild": [40, 45], "sigma_": 40, "654348003008652": 40, "6080571": 40, "59770202": 40, "69575904": 40, "22228637": 40, "24689205": 40, "39679396": 40, "c_i": [41, 44], "d_i": [41, 43], "n_i": [41, 69, 72], "textrm": 41, "soc_constraint": 41, "582695716265503": 41, "40303325": 41, "4194569": 41, "69146656": 41, "26922215": 41, "30825472": 41, "70834842": 41, "19313706": 41, "64153496": 41, "47698583": 41, "66581033": 41, "61662526": 41, "35370661": 41, "02327185": 41, "04253095": 41, "06243588": 41, "49886837": 41, "35283078": 41, "14301082": 41, "16539699": 41, "22027817": 41, "15440264": 41, "06571645": 41, "86510445": 41, "114638": 41, "449291": 41, "37810251": 41, "6144058": 41, "11377797": 41, "xyz": 42, "xz": 42, "yz": 42, "objective_fn": [42, 43, 44, 45, 47, 54, 56, 69, 71], "acord": 42, "onlin": [42, 58, 67], "5612147353889386": 42, "31496200373359456": 42, "36892055859991446": 42, "3_": 42, "saw": [42, 54], "5612": 42, "3150": 42, "3690": 42, "mathsf": 42, "da": 42, "dc": 42, "x_hat": 42, "y_hat": 42, "z_hat": 42, "5f": 42, "55729": 42, "55734": 42, "31783": 42, "37179": 42, "37175": 42, "fairli": 42, "circ": 42, "nabla": [42, 44], "subtract": [42, 44, 66], "dalpha": 42, "27513": 42, "22709": 42, "22942": 42, "servic": [43, 63], "markovian": 43, "queue": 43, "item": [43, 44], "wait": 43, "serv": 43, "packet": 43, "buffer": [43, 75], "latenc": 43, "llcp": [43, 44, 45, 69], "arriv": 43, "poisson": 43, "ell_i": 43, "traffic": 43, "occup": 43, "q_i": 43, "meant": [43, 44, 45, 69], "q_": 43, "mu_": 43, "lam": 43, "w_max": 43, "d_max": 43, "q_max": 43, "lam_min": 43, "mu_max": 43, "lq": 43, "dens": [43, 66, 75], "457106781186705": 43, "32842713": 43, "67157287": 43, "82842712": 43, "17157287": 43, "60355339": 43, "4267767": 43, "takeawai": [43, 75], "highli": 43, "especi": 43, "3g": 43, "213": 43, "411": 43, "927": 43, "458": 43, "229": 43, "466": 43, "661": 43, "0727": 43, "716": 43, "00996": 43, "245": 43, "122": 43, "282": 43, "76e": [43, 75], "334": 43, "0611": 43, "195": 43, "197": 43, "mu_valu": 43, "lam_valu": 43, "lam_pr": 43, "mu_pr": 43, "percent": [43, 54, 63], "_old_valu": 43, "lam_actu": 43, "mu_actu": 43, "32203282": 43, "77228841": 43, "07166961": 43, "94304296": 43, "99504983": 43, "99504965": 43, "87148458": 43, "10213353": 43, "newcommand": 44, "ascend": 44, "y_2": 44, "y_m": 44, "phi": 44, "hat": [44, 51, 55, 57], "z_i": [44, 55, 57], "i1": 44, "i2": 44, "emphas": [44, 70], "descent": 44, "effici": [44, 67, 70], "layer": [44, 61, 64, 70], "taken": [44, 72], "clamp": 44, "slightli": [44, 67], "shane": [44, 61], "barratt": [44, 61], "pytorch": [44, 64, 70], "cvxpylay": [44, 64, 76], "torch": 44, "set_default_tensor_typ": 44, "doubletensor": 44, "n_val": 44, "manual_se": 44, "243": 44, "multivariate_norm": 44, "multivariatenorm": 44, "lognorm": 44, "batch": 44, "a_tru": 44, "generate_data": [44, 54, 56], "num_point": 44, "latent": 44, "input_cp": 44, "train_input": 44, "train_output": 44, "0x12b367cd0": 44, "val_input": 44, "val_output": 44, "0x12da7e410": 44, "log_c": 44, "inputs_np": 44, "log_outputs_np": 44, "log_inputs_np": 44, "cp_pred": 44, "lstq_problem": 44, "2019": [44, 61], "1210": 44, "23000": 44, "time_limit": [44, 75], "22e": 44, "0014e": 44, "17e": 44, "68e": 44, "0100": 44, "010014212812318733": 44, "lstsq_val_pr": 44, "inp": 44, "pred": 44, "a_param": 44, "c_param": 44, "x_slack": 44, "x_param": 44, "a_tch": 44, "requires_grad_": 44, "c_tch": 44, "train_loss": 44, "val_loss": 44, "lam1": 44, "lam2": 44, "sgd": 44, "lr": 44, "epoch": 44, "solver_arg": 44, "no_grad": 44, "val_pr": 44, "4f": 44, "zero_grad": 44, "0018": 44, "0014": 44, "0017": 44, "0016": 44, "train_preds_tch": 44, "train_pr": 44, "detach": 44, "val_preds_tch": 44, "teal": 44, "subseteq": [45, 69], "said": [45, 69, 70], "log_log_curvatur": [45, 69], "var0": 45, "var1": 45, "param2": 45, "param3": 45, "cx_1": [45, 69], "a_2": [45, 69], "a_n": [45, 69], "monotonicti": 45, "expr_1": [45, 69], "expr_2": [45, 69], "expr_n": [45, 69], "expri": 45, "expr_i": 45, "mark": [45, 47, 63, 68, 69, 72], "colloqui": [45, 69, 71], "f_0": 45, "9999999926890524": 45, "9999999989968756": 45, "9999999529045318": 45, "000000020895385": 45, "1111111199586956": 45, "94877846244994e": 45, "1111111217156332": 45, "11111112214962586": 45, "forget": 45, "hassibi": [46, 48], "height": [46, 51], "depth": [46, 59, 69, 71], "hw": 46, "hd": 46, "wd": 46, "hwd": 46, "flr": 46, "a_wal": 46, "a_flr": 46, "wall_area": 46, "flr_area": 46, "hw_ratio": 46, "dw_ratio": 46, "77": 46, "45966630736292": 46, "7459666715289766": 46, "872983364643079": 46, "581988871583608": 46, "83": [46, 61], "8333333206334043": 46, "6666666801983365": 46, "minu": [47, 49], "omega": [47, 49], "pf": [47, 69], "known_value_indic": 47, "known_valu": 47, "702374203221372": 47, "63616907": 47, "49991744": 47, "37774148": 47, "14221476": 47, "commun": [48, 53, 59, 63, 67], "trasmitt": 48, "trasmit": 48, "p_2": 48, "p_min": 48, "sinr_min": 48, "s_p": 48, "signal_pow": 48, "inverse_sinr": 48, "9615384629119621": 48, "18653846": 48, "16730769": 48, "23461538": 48, "19615385": 48, "17692308": 48, "criterion": 49, "mn": [49, 69, 72], "x_iy_j": 49, "x_1x_2": 49, "outer_product": 49, "relative_devi": 49, "7763568394002505e": 49, "84375": 49, "43389831": 49, "82440678": 49, "89999999": 49, "07999999": 49, "89637009": 49, "38893346": 49, "86838428": 49, "11561063": 49, "0569071": 49, "1196602": 49, "henc": [50, 71], "upgrad": [50, 52, 76], "quasiconcav": [50, 71], "quasilinear": [50, 51, 71], "concave_fractional_fn": [50, 71], "4288821220397949": [50, 71], "50000165": 50, "triangl": 51, "wedg": 51, "hyperson": [51, 53], "drag": 51, "hypotenus": 51, "c_d": 51, "c_l": 51, "pressur": 51, "perpendicular": 51, "bodi": 51, "newtonian": 51, "sine": 51, "whet": 51, "c_p": 51, "elsewher": [51, 70], "stream": 51, "simplic": 51, "int_0": 51, "_x": 51, "_y": 51, "chord": 51, "surfac": 51, "plug": 51, "201": 51, "0x7f571d7bfdd8": 51, "payload": 51, "abl": [51, 68, 74, 76], "prepar": [51, 63], "var30766": 51, "var30793": 51, "var30747": 51, "var30779": 51, "param30811": 51, "000000": 51, "500000": 51, "30766": 51, "28425055": 51, "30793": 51, "32048066": 51, "30747": 51, "9203698369509382": 51, "30779": 51, "86287821": 51, "30764": 51, "184352986830617e": 51, "30775": 51, "68139086e": 51, "11799720e": 51, "85059567e": 51, "30788": 51, "73308751e": 51, "50722737e": 51, "55220021e": 51, "30802": 51, "04979217e": 51, "43109122e": 51, "68754271e": 51, "30835": 51, "4165742899966837e": 51, "0109e": 51, "4997e": 51, "125000": 51, "156250": 51, "140625": 51, "145508": 51, "146484": 51, "145996": 51, "01067238": 51, "14440604": 51, "9895144829793": 51, "97914383": 51, "2610785752467482e": 51, "37367039e": 51, "73702792e": 51, "37322961e": 51, "50627898e": 51, "58286953e": 51, "50619494e": 51, "77053008e": 51, "45051237e": 51, "20683981e": 51, "948014872712083e": 51, "000114922": 51, "6457e": 51, "145874": 51, "145905": 51, "145889": 51, "145897": 51, "1458979": 51, "854107648695203": 51, "9895238539767502": 51, "14436946495363565": 51, "verifi": [51, 68, 71], "inscrib": 51, "lambda1": 51, "lambda2": 51, "lambda3": 51, "pt1": 51, "pt2": 51, "pt3": 51, "pt4": 51, "04947620645689951": 51, "0390003355948896": 51, "15158793820131744": 51, "0072184732476817896": 51, "mse": [52, 54, 56], "x_star": 52, "And": 52, "00926009328813662": 52, "58366030e": 52, "38434327e": 52, "10714108e": 52, "44811159e": 52, "14622208e": 52, "51283929e": 52, "62931941e": 52, "16358584e": 52, "78132907e": 52, "76314786e": 52, "44712856": 52, "2245077": 52, "40349164": 52, "59357852": 52, "09491185": 52, "16938243": 52, "74055645": 52, "9537006": 52, "26621851": 52, "03261455": 52, "analys": 53, "ipynb": 53, "worst": 53, "risk": [53, 63, 67], "advertis": 53, "paint": 53, "volum": [53, 61], "box": [53, 59, 68, 75], "rank": 53, "queu": 53, "ridg": [53, 54], "lasso": [53, 74], "svm": [53, 57], "quantil": 53, "cryptocurr": 53, "entrop": 53, "gini": 53, "kurtosi": 53, "relativist": 53, "consensu": 53, "interdict": 53, "catch": 53, "smuggler": 53, "antenna": 53, "fault": 53, "filter": 53, "censor": 53, "trend": 53, "parad": 53, "rout": 53, "bandwidth": 53, "wireless": 53, "nba": 53, "game": 53, "win": 53, "kalman": 53, "vehicl": 53, "clock": 53, "mesh": 53, "water": 53, "travel": 53, "salesman": 53, "shrinkag": [54, 56], "hyperparamet": [54, 56], "decompos": [54, 56], "loss_fn": [54, 56], "lambd": [54, 55, 56, 57], "relationship": [54, 58], "densiti": [54, 57], "beta_star": [54, 56], "x_train": [54, 56], "y_train": [54, 56], "x_test": [54, 55, 56, 57], "y_test": [54, 55, 56, 57], "lambd_valu": [54, 56], "logspac": [54, 55, 56, 57, 70, 74], "train_error": [54, 55, 56, 57], "test_error": [54, 55, 56, 57], "beta_valu": [54, 56], "generaliz": 54, "plot_train_test_error": [54, 56], "xscale": [54, 55, 56, 57, 74], "driven": 54, "decai": 54, "latter": 54, "shrink": [54, 56, 57], "plot_regularization_path": [54, 56], "num_coeff": [54, 56], "wi": [54, 55, 56, 57], "posterior": 55, "beta_": [55, 57], "sigmoid": 55, "beta_tru": [55, 57], "log_likelihood": 55, "score": 55, "trial": [55, 57, 67], "lambda_v": [55, 57], "beta_v": [55, 57], "versu": [55, 57], "0x108adedd8": 55, "techniqu": 56, "unadorn": 56, "hope": 56, "aid": 56, "interpet": 56, "tend": 56, "vanilla": 56, "ill": [56, 71, 75], "higher": [56, 75], "bia": 56, "world": [56, 59, 74], "pm": 57, "outcom": 57, "hing": 57, "simultan": 57, "__future__": 57, "reg": 57, "mail": [58, 63], "extens": [58, 60, 64, 75], "background": [58, 59], "visit": [58, 65, 68, 75], "__version__": 58, "robust_kktsolv": 58, "frontier": 58, "admittedli": 58, "cryptic": 58, "mimic": 58, "deep": 58, "deepcopi": 58, "modul": [58, 59, 66, 76], "leaf": [58, 67], "recreat": 58, "concept": 58, "behind": 58, "publish": [58, 61], "bibtex": [58, 61], "citat": 58, "articl": [58, 61], "ython": [58, 61], "journal": [58, 61], "research": [58, 59, 61], "url": 58, "cvxpy_pap": 58, "year": [58, 59, 61, 76], "convex optim": 59, "open sourc": 59, "everyon": 59, "lagrang": [59, 66], "tour": 59, "clarabel": [59, 60, 64, 75, 76], "scientist": 59, "engin": 59, "student": [59, 67], "chat": 59, "develop": [59, 60, 61, 65, 67, 75, 76], "rilei": 59, "murrai": 59, "philipp": 59, "schiel": 59, "peopl": 59, "eric": 59, "chu": 59, "enzo": 59, "busseti": 59, "aj": 59, "friend": 59, "chri": 59, "dembia": 59, "parth": 59, "nobel": 59, "appreci": 59, "drastic": 59, "cvxpygen": [59, 64], "complementari": 59, "everyth": [59, 76], "linux": 60, "maco": 60, "window": 60, "isol": 60, "virtualenv": 60, "environ": [60, 75], "instruct": 60, "download": 60, "studio": 60, "tool": [60, 76], "xcode": 60, "activ": [60, 67, 75], "virtual": 60, "cbc": [60, 67, 75], "glop": [60, 75, 76], "pdlp": [60, 75, 76], "xpress": [60, 64, 67, 75, 76], "cvxpy_env": 60, "strongli": [60, 76], "recommend": [60, 63, 66, 67, 70, 76], "fresh": 60, "alongsid": [60, 63], "clone": 60, "newli": 60, "mint": 60, "top": [60, 67], "codespac": 60, "preconfigur": 60, "devcontain": 60, "click": 60, "button": 60, "appl": 60, "m1": 60, "troubl": 60, "pyproject": 60, "toml": 60, "newer": 60, "cmake": 60, "homebrew": 60, "wheel": 60, "pyarg": 60, "accompani": [61, 69, 71, 76], "jmlr": 61, "mloss": 61, "jcd": 61, "diamond2016cvxpi": 61, "agrawal2018rewrit": 61, "agrawal2019dgp": 61, "letter": 61, "springer": 61, "berlin": 61, "heidelberg": 61, "961": 61, "976": 61, "agrawal2020dqcp": 61, "2020": 61, "inproceed": 61, "agrawal2019differenti": 61, "amo": 61, "brandon": 61, "kolter": 61, "zico": 61, "booktitl": 61, "neural": 61, "9558": 61, "9570": 61, "agrawal2020differenti": 61, "arxiv": 61, "archiveprefix": 61, "eprint": 61, "2004": [61, 63], "12553": 61, "primaryclass": 61, "oc": 61, "cite": 62, "januari": 63, "AND": 63, "FOR": 63, "reproduct": 63, "shall": 63, "licensor": 63, "owner": 63, "entiti": 63, "legal": 63, "contract": 63, "ownership": 63, "fifti": 63, "outstand": 63, "benefici": 63, "translat": 63, "media": 63, "authorship": 63, "attach": 63, "appendix": 63, "editori": 63, "revis": 63, "annot": 63, "elabor": 63, "whole": 63, "mere": 63, "bind": 63, "intention": 63, "submit": 63, "inclus": 63, "behalf": 63, "electron": 63, "verbal": 63, "sent": 63, "exclud": 63, "conspicu": 63, "Not": [63, 66], "incorpor": [63, 67], "herebi": 63, "perpetu": 63, "worldwid": 63, "charg": 63, "royalti": 63, "irrevoc": 63, "reproduc": 63, "publicli": 63, "sublicens": 63, "patent": 63, "sell": 63, "transfer": 63, "claim": 63, "infring": 63, "alon": [63, 76], "institut": 63, "litig": 63, "counterclaim": 63, "lawsuit": 63, "alleg": 63, "constitut": 63, "contributori": 63, "redistribut": 63, "meet": 63, "recipi": 63, "retain": 63, "trademark": 63, "pertain": 63, "readabl": 63, "wherev": 63, "addendum": 63, "constru": 63, "compli": 63, "submiss": 63, "notwithstand": 63, "herein": 63, "supersed": 63, "agreement": 63, "customari": 63, "merchant": 63, "sole": 63, "liabil": 63, "tort": 63, "neglig": 63, "grossli": 63, "liabl": 63, "damag": 63, "incident": 63, "consequenti": 63, "charact": 63, "inabl": 63, "goodwil": 63, "stoppag": 63, "failur": 63, "malfunct": 63, "commerci": [63, 64, 67], "advis": 63, "fee": 63, "indemn": 63, "oblig": 63, "indemnifi": 63, "defend": 63, "harmless": 63, "incur": 63, "boilerpl": 63, "bracket": 63, "syntax": [63, 69, 72, 76], "descript": 63, "identif": 63, "archiv": 63, "ecosystem": 64, "tensorflow": [64, 70], "dccp": 64, "dmcp": 64, "multi": 64, "ncvx": 64, "osmm": 64, "stochast": 64, "snapvx": 64, "jl": 64, "julia": 64, "cvxr": 64, "gpkit": 64, "pico": 64, "friendli": 64, "proxqp": [64, 75, 76], "teach": 65, "explain": [65, 68, 69, 71, 74], "home": 65, "overview": [65, 71], "unfamiliar": 66, "47610300459e": 66, "00025244976": 66, "999999986374": 66, "complementar": 66, "tighten": 66, "expr1": [66, 67, 68, 69, 72], "expr2": [66, 67, 68, 69, 72], "prob1": [66, 68], "prob2": [66, 68, 74], "metadata": 66, "resembl": [66, 76], "scipy_canon_backend": 66, "pure": [66, 67], "fast": 66, "0d": [67, 76], "variant": 67, "cheap": 67, "decomposit": [67, 75], "symmetri": 67, "advantag": [67, 75, 76], "benefit": [67, 75, 76], "fine": 67, "grain": 67, "downsid": 67, "postiv": 67, "constr1": 67, "constr2": 67, "glpk_mi_": 67, "cbc_": 67, "scip_": 67, "cvxopt_": 67, "glpk_mi": [67, 75], "ecos_bb": [67, 76], "polici": [67, 76], "recur": 67, "quickli": [67, 70], "cplex_": 67, "gurobi_": 67, "xpress_": 67, "mosek_": 67, "copt_": 67, "cplex": [67, 75], "academia": 67, "faculti": 67, "academ": 67, "registr": 67, "exce": [67, 75], "copt": [67, 75, 76], "is_real": 67, "is_complex": 67, "is_imag": 67, "subexpress": [67, 68], "arithmet": [67, 68, 69, 73], "69": 68, "ban": 68, "opposit": [68, 74, 76], "conclus": 68, "_n": 68, "walk": [68, 70], "certifi": 68, "solvabl": [68, 69, 71], "prob3": [68, 74], "prob4": 68, "ggp": 69, "9999999938309496": 69, "9999999989682057": 69, "999999974180587": 69, "0000000108569758": 69, "is_log_log_const": 69, "summar": 69, "expr_": 69, "incr": [69, 72], "min_": [69, 72], "decr": [69, 72], "x11": [69, 72], "x1q": [69, 72], "xp1": [69, 72], "xpq": [69, 72], "n_j": [69, 72], "ddot": [69, 72], "nn": [69, 72], "xk": [69, 72], "cach": [70, 75], "substanti": [70, 74, 76], "likewis": 70, "forbid": 70, "dsl": 70, "p_sqrt": 70, "quotient": 70, "p_tild": 70, "analogu": 70, "complaint": 70, "gamma_v": [70, 74], "new_problem_tim": 70, "new_problem": 70, "meaning": 70, "usag": 70, "1g": 70, "imposs": 70, "introductori": 70, "thorough": 71, "49999737143004713": 71, "648717724845007": 71, "mistakenli": 71, "is_quasiconvex": 71, "is_quasiconcav": 71, "is_quasilinear": 71, "e_1": 71, "e_2": 71, "e_n": 71, "e_i": 71, "fn": 71, "infix": [71, 72, 73], "dist_ratio": 71, "gen_lambda_max": 71, "bx": 71, "condition_numb": 71, "unlucki": 71, "histor": 72, "deprec": 72, "adopt": 72, "dom": 72, "semi": [72, 74], "nuclear": 72, "expr_list": 72, "expr3": 72, "expr_sum": 72, "col_sum": 72, "row_sum": 72, "cdf": [72, 76], "highest": 72, "conserv": 72, "1q": 72, "y_k": 72, "bmod": 72, "lfloor": 72, "rfloor": 72, "_tri": 72, "status": 73, "repeatedli": [73, 74, 76], "999999999761": 74, "00000000001": 74, "19961841702e": 74, "00000000006": 74, "unbounded_inaccur": 74, "infeasible_inaccur": 74, "alias": 74, "infeasible_or_unbound": 74, "rare": [74, 76], "14133859146": 74, "11480673e": 74, "30625742e": 74, "34643668e": 74, "24976681e": 74, "79039542e": 74, "sq_penalti": 74, "l1_penalti": 74, "x_valu": 74, "211": 74, "212": 74, "pool": 74, "get_x": 74, "gamma_valu": 74, "requries_grad": 75, "mip": 75, "daqp": 75, "piqp": [75, 76], "sdpa": [75, 76], "multiprecis": 75, "epsilondash": 75, "epsilonstar": 75, "manual": [75, 76], "pose": 75, "v1": 75, "powconend": [75, 76], "installed_solv": 75, "progress": 75, "debug": 75, "solver_verbos": 75, "domahidi": 75, "laboratori": 75, "eth": 75, "451e": 75, "125e": 75, "7857": 75, "839e": 75, "9829": 75, "828e": 75, "829e": 75, "9899": 75, "000121": 75, "82842708233": 75, "solverstat": 75, "iinfitem": 75, "intpnt_it": 75, "liinfitem": 75, "simplex_it": 75, "mio_num_relax": 75, "mio_intpnt_it": 75, "mio_simplex_it": 75, "doc": 75, "latest": 75, "pythonapi": 75, "exploit": 75, "reus": 75, "use_indirect": 75, "2500": 75, "90e": 75, "9223e": 75, "1168e": 75, "6446e": 75, "8284": 75, "8285": 75, "82837896975": 75, "000": 75, "mu_eq": 75, "mu_in": 75, "abstol_inacc": 75, "reltol_inacc": 75, "feastol_inacc": 75, "unsupport": 75, "primal_tol": 75, "dual_tol": 75, "oler": 75, "zero_tol": 75, "pivot_tol": 75, "ldl": 75, "stabil": [75, 76], "progress_tol": 75, "cycle_tol": 75, "iter_limit": 75, "fval_bound": 75, "1e30": 75, "eps_prox": 75, "null": 75, "procedur": 75, "eta_prox": 75, "time_limit_sec": 75, "parameters_proto": 75, "ortool": 75, "parameters_pb2": 75, "glopparamet": 75, "protocol": 75, "msk_dpar_basis_tol_x": 75, "msk_ipar_num_thread": 75, "save_fil": 75, "prevent": 75, "accept_unknown": 75, "arbitrarili": 75, "bad": 75, "simplex": 75, "mio": 75, "tolerance_param": 75, "mosek_conif": 75, "preced": 75, "elimin": 75, "old": 75, "msk_ipar_intpnt_solve_form": 75, "msk_solve_du": 75, "ldl2": 75, "qr": 75, "chol": 75, "chol2": 75, "presolv": 75, "redund": 75, "held": 75, "maxiter": 75, "lambdastar": 75, "0e2": 75, "omegastar": 75, "search": 75, "lowerbound": 75, "0e5": 75, "upperbound": 75, "betastar": 75, "betabar": 75, "gammastar": 75, "issymmetr": 75, "isdimac": 75, "dimac": 75, "numthread": 75, "cpu_count": 75, "domainmethod": 75, "rangemethod": 75, "decomp": 75, "frvmethod": 75, "pivot": 75, "zeropoint": 75, "lu": 75, "anderson": 75, "precondit": 75, "sytem": 75, "use_quad_obj": 75, "cut": 75, "cgl": 75, "seem": 75, "buggi": 75, "alldifferentcut": 75, "redsplitcut": 75, "landpcut": 75, "preprocesscut": 75, "gomorycut": 75, "mircut": 75, "mircuts2": 75, "twomircut": 75, "residualcapacitycut": 75, "knapsackcut": 75, "flowcovercut": 75, "cliquecut": 75, "liftprojectcut": 75, "oddholecut": 75, "probingcut": 75, "simpleroundingcut": 75, "cutgennam": 75, "integertoler": 75, "deem": 75, "maximumsecond": 75, "maximumnod": 75, "maximumsolut": 75, "evalut": 75, "numberthread": 75, "allowablegap": 75, "allowablefractiongap": 75, "allowablepercentagegap": 75, "percentag": 75, "cplex_param": 75, "cpx_param_advind": 75, "assist": 75, "cpx_param_datacheck": 75, "datacheck": 75, "cplex_filenam": 75, "sav": 75, "mp": 75, "export": 75, "reoptim": 75, "Its": 75, "nag_param": 75, "lpipm": 75, "scip_param": 75, "scipy_opt": 75, "ipm": 75, "solvers_pb2": 75, "primaldualhybridgradientparam": 75, "passag": 75, "save_ii": 75, "irreduc": 75, "iiss": 75, "write_mp": 75, "maxtim": 75, "fico": [75, 76], "250": 75, "prototyp": 75, "tailor": 75, "child": 75, "qp_solver": 75, "qpsolver": 75, "osqp_qpif": 75, "custom_osqp": 75, "mip_cap": 75, "oppos": 75, "mi_supported_constraint": 75, "supported_constraint": 75, "revers": 76, "chronolog": 76, "pack": 76, "plan": 76, "monolith": 76, "pyodid": 76, "wasm": 76, "addedd": 76, "powerconend": 76, "clearer": 76, "finiteset": 76, "relentrconequad": 76, "oprelentrconequad": 76, "piec": 76, "gsoc": 76, "benchmark": 76, "increment": 76, "minor": 76, "past": 76, "rewrot": 76, "openmp": 76, "multithread": 76, "operand": 76, "builtin": 76, "supersc": 76, "incompat": 76, "fall": 76, "runtimeerror": 76, "0xe": 76, "0xd": 76, "dive": 76, "modular": 76, "unifi": 76, "treatment": 76, "semidef": 76, "byond": 76, "gave": 76, "nd": 76, "renam": 76, "mul_elemwis": 76, "max_entri": 76, "sum_entri": 76, "max_elemwis": 76, "min_elemwis": 76}, "objects": {"": [[67, 0, 1, "", "Leaf"], [75, 0, 1, "", "solve"]], "cvxpy": [[7, 1, 1, "", "Maximize"], [7, 1, 1, "", "Minimize"], [7, 1, 1, "", "Problem"], [3, 1, 1, "", "abs"], [2, 0, 1, "", "bmat"], [2, 1, 1, "", "conj"], [2, 1, 1, "", "convolve"], [2, 1, 1, "", "cumsum"], [2, 0, 1, "", "diag"], [2, 0, 1, "", "diff"], [3, 1, 1, "", "entr"], [3, 1, 1, "", "exp"], [2, 0, 1, "", "hstack"], [3, 1, 1, "", "huber"], [2, 1, 1, "", "imag"], [3, 0, 1, "", "inv_pos"], [3, 1, 1, "", "kl_div"], [2, 1, 1, "", "kron"], [3, 1, 1, "", "log"], [3, 1, 1, "", "log1p"], [3, 1, 1, "", "log_normcdf"], [3, 1, 1, "", "loggamma"], [3, 1, 1, "", "logistic"], [2, 0, 1, "", "matmul"], [3, 1, 1, "", "maximum"], [3, 0, 1, "", "minimum"], [2, 1, 1, "", "multiply"], [3, 0, 1, "", "neg"], [2, 0, 1, "", "outer"], [2, 0, 1, "", "partial_trace"], [2, 0, 1, "", "partial_transpose"], [3, 0, 1, "", "pos"], [3, 1, 1, "", "power"], [2, 0, 1, "", "real"], [3, 1, 1, "", "rel_entr"], [2, 1, 1, "", "reshape"], [3, 0, 1, "", "scalene"], [3, 0, 1, "", "sqrt"], [3, 0, 1, "", "square"], [2, 0, 1, "", "sum"], [2, 1, 1, "", "trace"], [2, 1, 1, "", "transpose"], [2, 1, 1, "", "upper_tri"], [2, 0, 1, "", "vdot"], [2, 0, 1, "", "vec"], [4, 1, 1, "", "von_neumann_entr"], [2, 0, 1, "", "vstack"], [3, 1, 1, "", "xexp"]], "cvxpy.Maximize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Minimize": [[7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"]], "cvxpy.Problem": [[7, 2, 1, "", "atoms"], [7, 2, 1, "", "backward"], [7, 3, 1, "", "compilation_time"], [7, 2, 1, "", "constants"], [7, 3, 1, "", "constraints"], [7, 2, 1, "", "derivative"], [7, 2, 1, "", "get_problem_data"], [7, 2, 1, "", "is_dcp"], [7, 2, 1, "", "is_dgp"], [7, 2, 1, "", "is_dpp"], [7, 2, 1, "", "is_dqcp"], [7, 2, 1, "", "is_qp"], [7, 3, 1, "", "objective"], [7, 2, 1, "", "parameters"], [7, 2, 1, "", "register_solve"], [7, 3, 1, "", "size_metrics"], [7, 2, 1, "", "solve"], [7, 3, 1, "", "solver_stats"], [7, 3, 1, "", "status"], [7, 2, 1, "", "unpack_results"], [7, 3, 1, "", "value"], [7, 2, 1, "", "variables"]], "cvxpy.atoms.affine.add_expr": [[2, 1, 1, "", "AddExpression"]], "cvxpy.atoms.affine.binary_operators": [[2, 1, 1, "", "DivExpression"], [2, 1, 1, "", "MulExpression"]], "cvxpy.atoms.affine.index": [[2, 1, 1, "", "index"]], "cvxpy.atoms.affine.promote": [[2, 0, 1, "", "promote"]], "cvxpy.atoms.affine.unary_operators": [[2, 1, 1, "", "NegExpression"]], "cvxpy.atoms.affine.upper_tri": [[2, 0, 1, "", "vec_to_upper_tri"]], "cvxpy.atoms.affine.wraps": [[2, 1, 1, "", "psd_wrap"]], "cvxpy.atoms.atom": [[1, 1, 1, "", "Atom"]], "cvxpy.atoms.atom.Atom": [[1, 3, 1, "", "domain"], [1, 3, 1, "", "grad"], [1, 2, 1, "", "is_atom_affine"], [1, 2, 1, "", "is_atom_concave"], [1, 2, 1, "", "is_atom_convex"], [1, 2, 1, "", "is_atom_log_log_affine"], [1, 2, 1, "", "is_atom_log_log_concave"], [1, 2, 1, "", "is_atom_log_log_convex"], [1, 2, 1, "", "is_decr"], [1, 2, 1, "", "is_incr"]], "cvxpy.atoms.cummax": [[4, 1, 1, "", "cummax"]], "cvxpy.atoms.dotsort": [[4, 1, 1, "", "dotsort"]], "cvxpy.atoms.eye_minus_inv": [[4, 1, 1, "", "eye_minus_inv"], [4, 0, 1, "", "resolvent"]], "cvxpy.atoms.geo_mean": [[4, 1, 1, "", "geo_mean"]], "cvxpy.atoms.geo_mean.geo_mean": [[4, 4, 1, "", "approx_error"], [4, 4, 1, "", "w"]], "cvxpy.atoms.gmatmul": [[4, 1, 1, "", "gmatmul"]], "cvxpy.atoms.harmonic_mean": [[4, 0, 1, "", "harmonic_mean"]], "cvxpy.atoms.inv_prod": [[4, 0, 1, "", "inv_prod"]], "cvxpy.atoms.lambda_max": [[4, 1, 1, "", "lambda_max"]], "cvxpy.atoms.lambda_min": [[4, 0, 1, "", "lambda_min"]], "cvxpy.atoms.lambda_sum_largest": [[4, 0, 1, "", "lambda_sum_largest"]], "cvxpy.atoms.lambda_sum_smallest": [[4, 0, 1, "", "lambda_sum_smallest"]], "cvxpy.atoms.log_det": [[4, 1, 1, "", "log_det"]], "cvxpy.atoms.log_sum_exp": [[4, 1, 1, "", "log_sum_exp"]], "cvxpy.atoms.matrix_frac": [[4, 0, 1, "", "matrix_frac"]], "cvxpy.atoms.max": [[4, 1, 1, "", "max"]], "cvxpy.atoms.min": [[4, 0, 1, "", "min"]], "cvxpy.atoms.mixed_norm": [[4, 0, 1, "", "mixed_norm"]], "cvxpy.atoms.norm": [[4, 0, 1, "", "norm"], [4, 0, 1, "", "norm2"]], "cvxpy.atoms.norm1": [[4, 1, 1, "", "norm1"]], "cvxpy.atoms": [[4, 1, 1, "", "norm_inf"], [4, 1, 1, "", "one_minus_pos"]], "cvxpy.atoms.norm_nuc": [[4, 1, 1, "", "normNuc"]], "cvxpy.atoms.one_minus_pos": [[4, 0, 1, "", "diff_pos"]], "cvxpy.atoms.perspective": [[4, 1, 1, "", "perspective"]], "cvxpy.atoms.pf_eigenvalue": [[4, 1, 1, "", "pf_eigenvalue"]], "cvxpy.atoms.pnorm": [[4, 1, 1, "", "Pnorm"], [4, 0, 1, "", "pnorm"]], "cvxpy.atoms.prod": [[4, 0, 1, "", "prod"]], "cvxpy.atoms.ptp": [[4, 0, 1, "", "ptp"]], "cvxpy.atoms.quad_form": [[4, 0, 1, "", "quad_form"]], "cvxpy.atoms.quad_over_lin": [[4, 1, 1, "", "quad_over_lin"]], "cvxpy.atoms.sigma_max": [[4, 1, 1, "", "sigma_max"]], "cvxpy.atoms.stats": [[2, 0, 1, "", "mean"], [4, 0, 1, "", "std"], [4, 0, 1, "", "var"]], "cvxpy.atoms.sum_largest": [[4, 1, 1, "", "sum_largest"]], "cvxpy.atoms.sum_smallest": [[4, 0, 1, "", "sum_smallest"]], "cvxpy.atoms.sum_squares": [[4, 0, 1, "", "sum_squares"]], "cvxpy.atoms.suppfunc": [[4, 1, 1, "", "SuppFuncAtom"]], "cvxpy.atoms.total_variation": [[4, 0, 1, "", "tv"]], "cvxpy.atoms.tr_inv": [[4, 0, 1, "", "tr_inv"]], "cvxpy.constraints.constraint": [[5, 1, 1, "", "Constraint"]], "cvxpy.constraints.constraint.Constraint": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential": [[5, 1, 1, "", "ExpCone"], [5, 1, 1, "", "OpRelEntrConeQuad"], [5, 1, 1, "", "RelEntrConeQuad"]], "cvxpy.constraints.exponential.ExpCone": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.exponential.OpRelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.exponential.RelEntrConeQuad": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"]], "cvxpy.constraints.finite_set": [[5, 1, 1, "", "FiniteSet"]], "cvxpy.constraints.finite_set.FiniteSet": [[5, 3, 1, "", "ineq_form"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.nonpos": [[5, 1, 1, "", "NonPos"]], "cvxpy.constraints.nonpos.NonPos": [[5, 3, 1, "", "dual_value"], [5, 2, 1, "", "is_dcp"], [5, 3, 1, "", "shape"], [5, 3, 1, "", "size"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power": [[5, 1, 1, "", "PowCone3D"], [5, 1, 1, "", "PowConeND"]], "cvxpy.constraints.power.PowCone3D": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.power.PowConeND": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.psd": [[5, 1, 1, "", "PSD"]], "cvxpy.constraints.psd.PSD": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.second_order": [[5, 1, 1, "", "SOC"]], "cvxpy.constraints.second_order.SOC": [[5, 4, 1, "", "X"], [5, 4, 1, "", "axis"], [5, 2, 1, "", "is_dcp"], [5, 4, 1, "", "t"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.constraints.zero": [[5, 1, 1, "", "Zero"]], "cvxpy.constraints.zero.Zero": [[5, 2, 1, "", "is_dcp"], [5, 2, 1, "", "value"], [5, 2, 1, "", "violation"]], "cvxpy.cumsum": [[2, 4, 1, "", "axis"], [2, 4, 1, "", "expr"]], "cvxpy.expressions.constants": [[6, 1, 1, "", "Constant"]], "cvxpy.expressions.constants.Constant": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.constants.callback_param": [[6, 1, 1, "", "CallbackParam"]], "cvxpy.expressions.constants.callback_param.CallbackParam": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.constants.parameter": [[6, 1, 1, "", "Parameter"]], "cvxpy.expressions.constants.parameter.Parameter": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.expression": [[6, 1, 1, "", "Expression"]], "cvxpy.expressions.expression.Expression": [[6, 3, 1, "", "T"], [6, 2, 1, "", "__add__"], [6, 2, 1, "", "__div__"], [6, 2, 1, "", "__eq__"], [6, 2, 1, "", "__ge__"], [6, 2, 1, "", "__le__"], [6, 2, 1, "", "__lshift__"], [6, 2, 1, "", "__matmul__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__pow__"], [6, 2, 1, "", "__radd__"], [6, 2, 1, "", "__rdiv__"], [6, 2, 1, "", "__rlshift__"], [6, 2, 1, "", "__rmatmul__"], [6, 2, 1, "", "__rmul__"], [6, 2, 1, "", "__rrshift__"], [6, 2, 1, "", "__rshift__"], [6, 2, 1, "", "__rsub__"], [6, 2, 1, "", "__rtruediv__"], [6, 2, 1, "", "__sub__"], [6, 2, 1, "", "__truediv__"], [6, 3, 1, "", "curvature"], [6, 3, 1, "", "domain"], [6, 3, 1, "", "grad"], [6, 2, 1, "", "is_affine"], [6, 2, 1, "", "is_concave"], [6, 2, 1, "", "is_constant"], [6, 2, 1, "", "is_convex"], [6, 2, 1, "", "is_dcp"], [6, 2, 1, "", "is_dgp"], [6, 2, 1, "", "is_dpp"], [6, 2, 1, "", "is_dqcp"], [6, 2, 1, "", "is_log_log_affine"], [6, 2, 1, "", "is_log_log_concave"], [6, 2, 1, "", "is_log_log_convex"], [6, 2, 1, "", "is_nonneg"], [6, 2, 1, "", "is_nonpos"], [6, 2, 1, "", "is_zero"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "sign"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.leaf": [[6, 1, 1, "", "Leaf"]], "cvxpy.expressions.leaf.Leaf": [[6, 3, 1, "", "T"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.expressions.variable": [[6, 1, 1, "", "Variable"]], "cvxpy.expressions.variable.Variable": [[6, 3, 1, "", "T"], [6, 2, 1, "", "name"], [6, 3, 1, "", "ndim"], [6, 2, 1, "", "project"], [6, 2, 1, "", "project_and_assign"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"], [6, 3, 1, "", "value"]], "cvxpy.problems.problem": [[7, 1, 1, "", "SizeMetrics"], [7, 1, 1, "", "SolverStats"]], "cvxpy.problems.problem.SizeMetrics": [[7, 4, 1, "", "max_big_small_squared"], [7, 4, 1, "", "max_data_dimension"], [7, 4, 1, "", "num_scalar_data"], [7, 4, 1, "", "num_scalar_eq_constr"], [7, 4, 1, "", "num_scalar_leq_constr"], [7, 4, 1, "", "num_scalar_variables"]], "cvxpy.problems.problem.SolverStats": [[7, 4, 1, "id0", "extra_stats"], [7, 2, 1, "", "from_dict"], [7, 4, 1, "id1", "num_iters"], [7, 4, 1, "id2", "setup_time"], [7, 4, 1, "id3", "solve_time"], [7, 4, 1, "id4", "solver_name"]], "cvxpy.reductions.chain": [[8, 1, 1, "", "Chain"]], "cvxpy.reductions.chain.Chain": [[8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 4, 1, "", "reductions"]], "cvxpy.reductions.complex2real.complex2real": [[11, 1, 1, "", "Complex2Real"]], "cvxpy.reductions.complex2real.complex2real.Complex2Real": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct": [[9, 1, 1, "", "Dualize"], [9, 1, 1, "", "Slacks"]], "cvxpy.reductions.cone2cone.affine2direct.Dualize": [[9, 2, 1, "", "invert"]], "cvxpy.reductions.cone2cone.affine2direct.Slacks": [[9, 2, 1, "", "apply"]], "cvxpy.reductions.cvx_attr2constr": [[11, 1, 1, "", "CvxAttr2Constr"]], "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"], [11, 2, 1, "", "reduction_attributes"]], "cvxpy.reductions": [[10, 5, 0, "-", "dcp2cone"], [12, 5, 0, "-", "qp2quad_form"]], "cvxpy.reductions.dcp2cone": [[10, 5, 0, "-", "cone_matrix_stuffing"], [10, 5, 0, "-", "dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, 1, 1, "", "ConeDims"], [10, 1, 1, "", "ConeMatrixStuffing"], [10, 1, 1, "", "ParamConeProg"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims": [[10, 4, 1, "", "EQ_DIM"], [10, 4, 1, "", "EXP_DIM"], [10, 4, 1, "", "LEQ_DIM"], [10, 4, 1, "", "P3D_DIM"], [10, 4, 1, "", "PSD_DIM"], [10, 4, 1, "", "SOC_DIM"], [10, 4, 1, "", "exp"], [10, 4, 1, "", "nonneg"], [10, 4, 1, "", "psd"], [10, 4, 1, "", "soc"], [10, 4, 1, "", "zero"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing": [[10, 4, 1, "", "CONSTRAINTS"], [10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "invert"], [10, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg": [[10, 2, 1, "", "apply_param_jac"], [10, 2, 1, "", "apply_parameters"], [10, 2, 1, "", "is_mixed_integer"], [10, 2, 1, "", "split_adjoint"], [10, 2, 1, "", "split_solution"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, 1, 1, "", "Dcp2Cone"]], "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone": [[10, 2, 1, "", "accepts"], [10, 2, 1, "", "apply"], [10, 2, 1, "", "canonicalize_expr"], [10, 2, 1, "", "canonicalize_tree"]], "cvxpy.reductions.dgp2dcp.dgp2dcp": [[11, 1, 1, "", "Dgp2Dcp"]], "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "canonicalize_expr"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.eval_params": [[11, 1, 1, "", "EvalParams"]], "cvxpy.reductions.eval_params.EvalParams": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.flip_objective": [[11, 1, 1, "", "FlipObjective"]], "cvxpy.reductions.flip_objective.FlipObjective": [[11, 2, 1, "", "accepts"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "invert"]], "cvxpy.reductions.qp2quad_form": [[12, 5, 0, "-", "qp2symbolic_qp"], [12, 5, 0, "-", "qp_matrix_stuffing"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, 1, 1, "", "Qp2SymbolicQp"], [12, 0, 1, "", "accepts"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, 1, 1, "", "ConeDims"], [12, 1, 1, "", "ParamQuadProg"], [12, 1, 1, "", "QpMatrixStuffing"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims": [[12, 4, 1, "", "exp"], [12, 4, 1, "", "nonpos"], [12, 4, 1, "", "psd"], [12, 4, 1, "", "soc"], [12, 4, 1, "", "zero"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg": [[12, 2, 1, "", "apply_param_jac"], [12, 2, 1, "", "apply_parameters"], [12, 2, 1, "", "is_mixed_integer"], [12, 2, 1, "", "split_adjoint"], [12, 2, 1, "", "split_solution"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing": [[12, 2, 1, "", "accepts"], [12, 2, 1, "", "apply"], [12, 2, 1, "", "invert"], [12, 2, 1, "", "stuffed_objective"]], "cvxpy.reductions.reduction": [[8, 1, 1, "", "Reduction"]], "cvxpy.reductions.reduction.Reduction": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "accepts"], [8, 2, 1, "", "apply"], [8, 2, 1, "", "invert"], [8, 2, 1, "", "reduce"], [8, 2, 1, "", "retrieve"]], "cvxpy.reductions.solution": [[8, 1, 1, "", "Solution"]], "cvxpy.reductions.solution.Solution": [[8, 4, 1, "", "attr"], [8, 4, 1, "", "dual_vars"], [8, 4, 1, "", "opt_val"], [8, 4, 1, "", "primal_vars"], [8, 4, 1, "", "status"]], "cvxpy.reductions.solvers.solving_chain": [[8, 1, 1, "", "SolvingChain"]], "cvxpy.reductions.solvers.solving_chain.SolvingChain": [[8, 2, 1, "", "prepend"], [8, 4, 1, "", "reductions"], [8, 2, 1, "", "solve"], [8, 2, 1, "", "solve_via_data"], [8, 4, 1, "", "solver"]], "cvxpy.transforms": [[13, 1, 1, "", "indicator"], [13, 2, 1, "", "linearize"]], "cvxpy.transforms.partial_optimize": [[13, 2, 1, "", "partial_optimize"]], "cvxpy.transforms.scalarize": [[13, 2, 1, "", "log_sum_exp"], [13, 2, 1, "", "max"], [13, 2, 1, "", "targets_and_priorities"], [13, 2, 1, "", "weighted_sum"]], "cvxpy.transforms.suppfunc": [[13, 1, 1, "", "SuppFunc"]], "cvxpy.transforms.suppfunc.SuppFunc": [[13, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:module"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "module", "Python module"]}, "titleterms": {"api": 0, "document": 0, "atom": [1, 2, 3, 4, 45, 69, 71, 72, 76], "represent": 1, "affin": 2, "addexpress": 2, "mulexpress": 2, "divexpress": 2, "bmat": 2, "conj": 2, "convolv": 2, "cumsum": 2, "diag": 2, "diff": 2, "hstack": 2, "imag": [2, 34], "index": [2, 72], "kron": 2, "matmul": 2, "mean": 2, "multipli": [2, 16], "outer": 2, "partial_trac": 2, "partial_transpos": 2, "promot": 2, "psd_wrap": 2, "real": 2, "reshap": 2, "vdot": 2, "sum": 2, "trace": 2, "transpos": [2, 69, 72], "negexpress": 2, "upper_tri": 2, "vec": 2, "vec_to_upper_tri": 2, "vstack": 2, "cvxpy": [3, 10, 12, 14, 58, 59, 61, 65, 74, 76], "elementwis": [3, 69, 72], "packag": [3, 10, 12, 20], "ab": 3, "entr": 3, "exp": 3, "huber": 3, "inv_po": 3, "kl_div": 3, "log": [3, 33, 45, 69], "log_normcdf": 3, "log1p": 3, "loggamma": 3, "logist": [3, 55], "maximum": 3, "minimum": [3, 52], "neg": 3, "po": 3, "power": [3, 27, 29, 48, 69, 72], "rel_entr": 3, "scalen": 3, "sqrt": 3, "squar": [3, 36, 52], "xexp": 3, "other": [4, 13, 74], "cummax": 4, "diff_po": 4, "dotsort": 4, "eye_minus_inv": 4, "geo_mean": 4, "gmatmul": 4, "harmonic_mean": 4, "inv_prod": 4, "lambda_max": 4, "lambda_min": 4, "lambda_sum_largest": 4, "lambda_sum_smallest": 4, "log_det": 4, "log_sum_exp": 4, "matrix_frac": 4, "max": [4, 24], "min": [4, 24], "mixed_norm": 4, "norm": [4, 33], "norm1": 4, "norm2": 4, "norm_inf": 4, "normnuc": 4, "one_minus_po": 4, "perspect": 4, "pf_eigenvalu": 4, "pnorm": 4, "ptp": 4, "prod": 4, "quad_form": 4, "quad_over_lin": 4, "resolv": 4, "sigma_max": 4, "std": 4, "sum_largest": 4, "sum_smallest": 4, "sum_squar": 4, "suppfuncatom": 4, "tr_inv": 4, "tv": 4, "var": 4, "von_neumann_entr": 4, "constraint": [5, 19, 58, 67, 74, 76], "nonpo": [5, 76], "zero": 5, "psd": 5, "soc": 5, "expcon": 5, "relentrconequad": 5, "powcone3d": 5, "powconend": 5, "finiteset": 5, "oprelentrconequad": 5, "express": [6, 58, 67, 68], "leaf": 6, "variabl": [6, 14, 32, 58, 66], "paramet": [6, 74], "constant": 6, "callbackparam": 6, "problem": [7, 18, 20, 22, 23, 25, 26, 28, 30, 31, 32, 33, 45, 58, 66, 68, 69, 70, 71, 74], "minim": [7, 18, 28], "maxim": [7, 26, 46], "sizemetr": 7, "solverstat": 7, "reduct": [8, 9, 10, 11, 12, 76], "disclaim": 8, "type": 8, "core": 8, "class": 8, "solut": [8, 9, 22, 33, 42], "chain": 8, "solvingchain": 8, "back": 9, "end": [9, 11], "dcp2cone": [9, 10], "qp2symbolicqp": 9, "dualiz": 9, "usag": 9, "assumpt": 9, "addit": [9, 60], "note": 9, "detail": 9, "requir": 9, "format": 9, "primal_var": 9, "slack": 9, "subpackag": [10, 12], "submodul": [10, 12], "cone_matrix_stuf": 10, "modul": [10, 12], "content": [10, 12], "middl": 11, "complex2r": 11, "cvxattr2constr": 11, "dgp2dcp": 11, "evalparam": 11, "flipobject": 11, "qp2quad_form": 12, "qp2symbolic_qp": 12, "qp_matrix_stuf": 12, "transform": [13, 24, 66, 76], "suppfunc": 13, "scalar": [13, 69, 72], "contribut": 14, "wishlist": 14, "gener": [14, 18, 19, 20, 26, 28, 32, 33, 44, 54, 56, 76], "principl": 14, "develop": 14, "environ": 14, "checklist": 14, "licens": [14, 63], "code": 14, "style": 14, "write": [14, 54, 56], "unit": 14, "test": [14, 60], "run": [14, 60], "benchmark": 14, "solver": [14, 58, 60, 64, 75, 76], "interfac": [14, 76], "conic": 14, "": [14, 24, 58], "form": [14, 66], "an": [14, 18, 23, 72], "altern": [14, 28], "dual": [14, 66], "regist": 14, "capac": 15, "commun": [15, 27, 35], "channel": [15, 29], "exampl": [15, 22, 24, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 53, 57, 68], "method": [16, 75], "object": [17, 24, 54, 56, 58], "orient": 17, "convex": [17, 58, 68], "optim": [17, 21, 29, 30, 50, 51, 58], "beamwidth": 18, "arrai": 18, "arbitrari": 18, "2": [18, 45, 58, 68, 76], "d": 18, "geometri": 18, "introduct": [18, 20, 23, 25, 26, 28, 32, 33], "specif": 18, "data": [18, 19, 20, 23, 26, 28, 31, 32, 33, 44, 54, 56], "antenna": 18, "select": [18, 54], "solv": [18, 20, 23, 24, 25, 26, 32, 45, 70, 71, 75], "us": [18, 19, 58], "bisect": 18, "algorithm": 18, "result": [18, 20, 23, 25, 28, 32, 33], "plot": [18, 23, 25, 32, 33], "fit": [19, 44, 54, 56], "censor": 19, "setup": [19, 20], "regular": [19, 54, 55, 56, 57], "ol": 19, "uncensor": 19, "take": [19, 58], "account": 19, "conclus": 19, "size": 20, "clock": 20, "mesh": 20, "import": 20, "helper": [20, 24, 31], "function": [20, 24, 31, 45, 54, 56, 58, 69, 72], "displai": 20, "consensu": 21, "fault": 22, "detect": 22, "topic": [22, 24, 30], "refer": [22, 24, 30, 45], "statement": [22, 30, 31], "approach": 22, "recoveri": [22, 31], "evalu": [22, 54, 56, 58], "chebychev": 23, "design": [23, 43, 51], "fir": 23, "filter": [23, 25, 31], "given": 23, "desir": 23, "h": 23, "omega": 23, "initi": 23, "minimax": 23, "todo": 24, "alloc": [24, 29], "interdict": 24, "effort": 24, "catch": 24, "smuggler": 24, "mathemat": 24, "formul": [24, 25, 26, 30], "game": 24, "path": [24, 54, 56], "secur": 24, "guard": 24, "placement": 24, "multipl": [24, 58], "sourc": 24, "destin": 24, "build": 24, "ell_1": [25, 30, 33, 55, 57], "trend": 25, "entropi": 26, "assign": 27, "wireless": 27, "system": [27, 76], "nonneg": [28, 49], "matrix": [28, 47, 49, 58, 69, 72], "factor": [28, 49], "perform": 28, "output": [28, 75], "bandwidth": 29, "gaussian": [29, 32], "parad": 30, "rout": 30, "relax": 30, "iter": [30, 33], "weight": 30, "heurist": [30, 33], "robust": 31, "kalman": 31, "vehicl": 31, "track": 31, "1d": 31, "model": [31, 54, 56, 64], "simul": 31, "spars": [32, 33, 58], "covari": 32, "estim": 32, "sever": 32, "alpha": 32, "valu": [32, 58, 67], "comput": 33, "set": [33, 75], "linear": [33, 37], "inequ": 33, "total": 34, "variat": 34, "paint": 34, "grayscal": 34, "color": 34, "water": 35, "fill": 35, "least": [36, 52], "program": [37, 38, 39, 40, 41, 45, 53, 67, 68, 69, 70, 71, 75], "mix": [38, 67], "integ": [38, 67], "quadrat": [38, 39], "semidefinit": [40, 58, 67], "second": 41, "order": 41, "cone": 41, "deriv": [42, 53], "fundament": [42, 45], "map": 42, "sensit": [42, 70], "analysi": [42, 43, 70], "gradient": [42, 70], "queu": 43, "sensitv": 43, "perturb": 43, "structur": 44, "predict": 44, "monomi": 44, "each": 44, "compon": 44, "dgp": [45, 69], "1": [45, 59, 68, 76], "curvatur": [45, 68, 69, 71], "from": 45, "geometr": [45, 53, 69, 75], "ruleset": [45, 70], "3": [45, 76], "4": [45, 76], "next": 45, "step": 45, "volum": 46, "box": 46, "perron": 47, "frobeniu": 47, "complet": 47, "control": 48, "rank": 49, "one": 49, "fraction": 50, "aerospac": 51, "via": 51, "quasiconvex": [51, 53, 71], "length": 52, "basic": 53, "disciplin": [53, 68, 69, 70, 71, 75], "machin": [53, 54, 56, 57], "learn": [53, 54, 56, 58], "financ": 53, "advanc": [53, 66, 67], "applic": 53, "lasso": 54, "regress": [54, 55, 56], "featur": [54, 66, 75, 76], "ridg": 56, "support": [57, 58, 60], "vector": [57, 69, 72, 74], "classifi": 57, "faq": 58, "where": 58, "can": 58, "i": [58, 70, 74], "get": [58, 66], "help": 58, "more": 58, "about": 58, "how": 58, "do": 58, "know": 58, "which": 58, "version": 58, "m": 58, "what": [58, 70, 74], "dcperror": 58, "except": 58, "find": 58, "dcp": [58, 68], "error": 58, "solvererror": 58, "doe": 58, "ar": 58, "differ": 58, "between": 58, "cannot": 58, "truth": 58, "numpi": [58, 76], "scipi": 58, "matric": [58, 67, 74], "constrain": 58, "posit": 58, "creat": 58, "special": 58, "properti": 58, "boolean": 58, "symmetr": 58, "ha": 58, "than": 58, "dimens": 58, "copi": 58, "why": 58, "so": 58, "long": 58, "compil": 58, "my": 58, "work": 58, "cite": [58, 61], "welcom": 59, "5": [59, 76], "instal": 60, "suit": 60, "resourc": 62, "relat": 64, "project": 64, "framework": 64, "short": 65, "cours": 65, "arithmet": 66, "standard": 66, "canonic": 66, "backend": 66, "attribut": [67, 76], "complex": 67, "sign": 68, "rule": [68, 69, 71], "infix": [68, 69], "oper": [68, 69, 72], "parametr": 70, "dpp": 70, "The": 70, "repeatedli": 70, "composit": 71, "dqcp": 71, "slice": 72, "clarif": 72, "along": 72, "axi": 72, "user": 73, "guid": 73, "chang": [74, 76], "infeas": 74, "unbound": 74, "status": 74, "option": 75, "choos": 75, "view": 75, "stat": 75, "warm": 75, "start": 75, "custom": 75, "eco": 76, "deprec": 76, "new": 76, "conv": 76, "improv": 76, "highlight": 76, "break": 76, "bugfix": 76, "known": 76, "issu": 76, "notabl": 76, "patch": 76, "sinc": 76, "0": 76, "overview": 76, "compat": 76}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Atoms": [[1, "atoms"], [45, "atoms"]], "Representation of atoms": [[1, "representation-of-atoms"]], "Atom": [[1, "atom"]], "Affine Atoms": [[2, "affine-atoms"]], "AddExpression": [[2, "addexpression"]], "MulExpression": [[2, "mulexpression"]], "DivExpression": [[2, "divexpression"]], "bmat": [[2, "bmat"]], "conj": [[2, "conj"]], "convolve": [[2, "convolve"]], "cumsum": [[2, "cumsum"]], "diag": [[2, "diag"]], "diff": [[2, "diff"]], "hstack": [[2, "hstack"]], "imag": [[2, "imag"]], "index": [[2, "index"]], "kron": [[2, "kron"]], "matmul": [[2, "matmul"]], "mean": [[2, "mean"]], "multiply": [[2, "multiply"]], "outer": [[2, "outer"]], "partial_trace": [[2, "partial-trace"]], "partial_transpose": [[2, "partial-transpose"]], "promote": [[2, "promote"]], "psd_wrap": [[2, "psd-wrap"]], "real": [[2, "real"]], "reshape": [[2, "reshape"]], "vdot": [[2, "vdot"]], "sum": [[2, "sum"]], "trace": [[2, "trace"]], "transpose": [[2, "transpose"]], "NegExpression": [[2, "negexpression"]], "upper_tri": [[2, "upper-tri"]], "vec": [[2, "vec"]], "vec_to_upper_tri": [[2, "vec-to-upper-tri"]], "vstack": [[2, "vstack"]], "cvxpy.atoms.elementwise package": [[3, "cvxpy-atoms-elementwise-package"]], "abs": [[3, "abs"]], "entr": [[3, "entr"]], "exp": [[3, "exp"]], "huber": [[3, "huber"]], "inv_pos": [[3, "inv-pos"]], "kl_div": [[3, "kl-div"]], "log": [[3, "log"]], "log_normcdf": [[3, "log-normcdf"]], "log1p": [[3, "log1p"]], "loggamma": [[3, "loggamma"]], "logistic": [[3, "logistic"]], "maximum": [[3, "maximum"]], "minimum": [[3, "minimum"]], "neg": [[3, "neg"]], "pos": [[3, "pos"]], "power": [[3, "power"]], "rel_entr": [[3, "rel-entr"]], "scalene": [[3, "scalene"]], "sqrt": [[3, "sqrt"]], "square": [[3, "square"]], "xexp": [[3, "xexp"]], "Other Atoms": [[4, "other-atoms"]], "cummax": [[4, "cummax"]], "diff_pos": [[4, "diff-pos"]], "dotsort": [[4, "dotsort"]], "eye_minus_inv": [[4, "eye-minus-inv"]], "geo_mean": [[4, "geo-mean"]], "gmatmul": [[4, "gmatmul"]], "harmonic_mean": [[4, "harmonic-mean"]], "inv_prod": [[4, "inv-prod"]], "lambda_max": [[4, "lambda-max"]], "lambda_min": [[4, "lambda-min"]], "lambda_sum_largest": [[4, "lambda-sum-largest"]], "lambda_sum_smallest": [[4, "lambda-sum-smallest"]], "log_det": [[4, "log-det"]], "log_sum_exp": [[4, "log-sum-exp"]], "matrix_frac": [[4, "matrix-frac"]], "max": [[4, "max"]], "min": [[4, "min"]], "mixed_norm": [[4, "mixed-norm"]], "norm": [[4, "norm"]], "norm1": [[4, "norm1"]], "norm2": [[4, "norm2"]], "norm_inf": [[4, "norm-inf"]], "normNuc": [[4, "normnuc"]], "one_minus_pos": [[4, "one-minus-pos"]], "perspective": [[4, "perspective"]], "pf_eigenvalue": [[4, "pf-eigenvalue"]], "pnorm": [[4, "pnorm"]], "Pnorm": [[4, "id26"]], "ptp": [[4, "ptp"]], "prod": [[4, "prod"]], "quad_form": [[4, "quad-form"]], "quad_over_lin": [[4, "quad-over-lin"]], "resolvent": [[4, "resolvent"]], "sigma_max": [[4, "sigma-max"]], "std": [[4, "std"]], "sum_largest": [[4, "sum-largest"]], "sum_smallest": [[4, "sum-smallest"]], "sum_squares": [[4, "sum-squares"]], "SuppFuncAtom": [[4, "suppfuncatom"]], "tr_inv": [[4, "tr-inv"]], "tv": [[4, "tv"]], "var": [[4, "var"]], "von_neumann_entr": [[4, "von-neumann-entr"]], "Constraints": [[5, "constraints"], [74, "constraints"]], "Constraint": [[5, "constraint"]], "NonPos": [[5, "nonpos"]], "Zero": [[5, "zero"]], "PSD": [[5, "psd"]], "SOC": [[5, "soc"]], "ExpCone": [[5, "expcone"]], "RelEntrConeQuad": [[5, "relentrconequad"]], "PowCone3D": [[5, "powcone3d"]], "PowConeND": [[5, "powconend"]], "FiniteSet": [[5, "finiteset"]], "OpRelEntrConeQuad": [[5, "oprelentrconequad"]], "Expressions": [[6, "expressions"], [68, "expressions"]], "Expression": [[6, "expression"]], "Leaf": [[6, "leaf"]], "Variable": [[6, "variable"]], "Parameter": [[6, "parameter"]], "Constant": [[6, "constant"]], "CallbackParam": [[6, "callbackparam"]], "Problems": [[7, "problems"]], "Minimize": [[7, "minimize"]], "Maximize": [[7, "maximize"]], "Problem": [[7, "problem"]], "SizeMetrics": [[7, "sizemetrics"]], "SolverStats": [[7, "solverstats"]], "Reductions": [[8, "reductions"], [76, "reductions"]], "Disclaimer": [[8, "disclaimer"]], "Types of Reductions": [[8, "types-of-reductions"]], "Core classes": [[8, "core-classes"]], "Solution": [[8, "solution"]], "Reduction": [[8, "reduction"]], "Chain": [[8, "chain"]], "SolvingChain": [[8, "solvingchain"]], "Back-End Reductions": [[9, "back-end-reductions"]], "Dcp2Cone": [[9, "dcp2cone"]], "Qp2SymbolicQp": [[9, "qp2symbolicqp"]], "Dualize": [[9, "dualize"]], "Usage": [[9, "usage"]], "Assumptions": [[9, "assumptions"], [9, "id1"]], "Additional notes": [[9, "additional-notes"]], "Details on required formatting of solution.primal_vars": [[9, "details-on-required-formatting-of-solution-primal-vars"]], "Slacks": [[9, "slacks"]], "cvxpy.reductions.dcp2cone package": [[10, "cvxpy-reductions-dcp2cone-package"]], "Subpackages": [[10, "subpackages"], [12, "subpackages"]], "Submodules": [[10, "submodules"], [12, "submodules"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing module": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone module": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "Module contents": [[10, "module-cvxpy.reductions.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"]], "Middle-End Reductions": [[11, "middle-end-reductions"]], "Complex2Real": [[11, "complex2real"]], "CvxAttr2Constr": [[11, "cvxattr2constr"]], "Dgp2Dcp": [[11, "dgp2dcp"]], "EvalParams": [[11, "evalparams"]], "FlipObjective": [[11, "flipobjective"]], "cvxpy.reductions.qp2quad_form package": [[12, "cvxpy-reductions-qp2quad-form-package"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp module": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing module": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "Transforms": [[13, "transforms"], [66, "transforms"], [76, "transforms"]], "SuppFunc": [[13, "suppfunc"]], "Scalarize": [[13, "scalarize"]], "Other": [[13, "other"]], "Contributing": [[14, "contributing"]], "Wishlist": [[14, "wishlist"]], "General principles": [[14, "general-principles"]], "Development environment": [[14, "development-environment"]], "Contribution checklist": [[14, "contribution-checklist"]], "License": [[14, "license"], [63, "license"]], "Code style": [[14, "code-style"]], "Writing unit tests": [[14, "writing-unit-tests"]], "Running unit tests": [[14, "running-unit-tests"]], "Benchmarks": [[14, "benchmarks"]], "Solver interfaces": [[14, "solver-interfaces"], [76, "solver-interfaces"], [76, "id5"]], "Conic solvers": [[14, "conic-solvers"]], "CVXPY\u2019s conic form": [[14, "cvxpy-s-conic-form"]], "An alternative conic form": [[14, "an-alternative-conic-form"]], "Dual variables": [[14, "dual-variables"], [66, "dual-variables"]], "Registering a solver": [[14, "registering-a-solver"]], "Writing tests": [[14, "writing-tests"]], "Capacity of a Communication Channel": [[15, "capacity-of-a-communication-channel"]], "Example": [[15, "example"], [22, "example"], [27, "example"], [29, "example"], [30, "example"], [35, "example"], [36, "example"], [37, "example"], [38, "example"], [39, "example"], [40, "example"], [41, "example"], [57, "example"]], "Method of multipliers": [[16, "method-of-multipliers"]], "Object Oriented Convex Optimization": [[17, "object-oriented-convex-optimization"]], "Minimize beamwidth of an array with arbitrary 2-D geometry": [[18, "minimize-beamwidth-of-an-array-with-arbitrary-2-d-geometry"]], "Introduction": [[18, "introduction"], [20, "introduction"], [23, "introduction"], [25, "introduction"], [26, "introduction"], [28, "introduction"], [32, "introduction"], [33, "introduction"]], "Problem specification and data": [[18, "problem-specification-and-data"]], "Antenna array selection": [[18, "antenna-array-selection"]], "Data generation": [[18, "data-generation"], [44, "data-generation"]], "Solve using bisection algorithm": [[18, "solve-using-bisection-algorithm"]], "Result plots": [[18, "result-plots"], [23, "result-plots"], [32, "result-plots"], [33, "result-plots"]], "Fitting censored data": [[19, "fitting-censored-data"]], "Setup": [[19, "setup"]], "Data Generation": [[19, "data-generation"]], "Regular OLS": [[19, "regular-ols"]], "OLS using uncensored data": [[19, "ols-using-uncensored-data"]], "Using constraints to take into account of censored data": [[19, "using-constraints-to-take-into-account-of-censored-data"]], "Conclusion": [[19, "conclusion"]], "Sizing of clock meshes": [[20, "sizing-of-clock-meshes"]], "Import and setup packages": [[20, "import-and-setup-packages"]], "Helper functions": [[20, "helper-functions"], [24, "helper-functions"]], "Generate problem data": [[20, "generate-problem-data"], [26, "generate-problem-data"], [28, "generate-problem-data"], [32, "generate-problem-data"], [33, "generate-problem-data"]], "Solve problem and display results": [[20, "solve-problem-and-display-results"]], "Consensus optimization": [[21, "consensus-optimization"]], "Fault detection": [[22, "fault-detection"]], "Topic references": [[22, "topic-references"], [24, "topic-references"], [30, "topic-references"]], "Problem statement": [[22, "problem-statement"], [30, "problem-statement"], [31, "problem-statement"]], "Solution approach": [[22, "solution-approach"]], "Recovery": [[22, "recovery"]], "Evaluation": [[22, "evaluation"]], "Chebychev design of an FIR filter given a desired H(\\omega)": [[23, "chebychev-design-of-an-fir-filter-given-a-desired-h-omega"]], "Initialize problem data": [[23, "initialize-problem-data"]], "Solve the minimax (Chebychev) design problem": [[23, "solve-the-minimax-chebychev-design-problem"]], "TODO": [[24, "todo"], [24, "id1"]], "Allocating interdiction effort to catch a smuggler": [[24, "allocating-interdiction-effort-to-catch-a-smuggler"]], "Transformations and mathematical formulation": [[24, "transformations-and-mathematical-formulation"]], "Min/max game": [[24, "min-max-game"]], "Smuggler\u2019s objective": [[24, "smuggler-s-objective"]], "Smuggler\u2019s path example": [[24, "smuggler-s-path-example"]], "Security\u2019s objective": [[24, "security-s-objective"]], "Security example": [[24, "security-example"]], "Guard placement example": [[24, "guard-placement-example"]], "Multiple sources and destinations": [[24, "multiple-sources-and-destinations"]], "Guards": [[24, "guards"]], "Buildings": [[24, "buildings"]], "Example to solve": [[24, "example-to-solve"]], "\\ell_1 trend filtering": [[25, "ell-1-trend-filtering"]], "Formulate and solve problem": [[25, "formulate-and-solve-problem"], [26, "formulate-and-solve-problem"]], "Results plot": [[25, "results-plot"]], "Entropy maximization": [[26, "entropy-maximization"]], "Power Assignment in a Wireless Communication System": [[27, "power-assignment-in-a-wireless-communication-system"]], "Nonnegative matrix factorization": [[28, "nonnegative-matrix-factorization"]], "Perform alternating minimization": [[28, "perform-alternating-minimization"]], "Output results": [[28, "output-results"]], "Optimal Power and Bandwidth Allocation in a Gaussian Channel": [[29, "optimal-power-and-bandwidth-allocation-in-a-gaussian-channel"]], "Optimal parade route": [[30, "optimal-parade-route"]], "Optimization formulation": [[30, "optimization-formulation"]], "Relaxation": [[30, "relaxation"]], "Iterated weighted \\ell_1 heuristic": [[30, "iterated-weighted-ell-1-heuristic"]], "Robust Kalman filtering for vehicle tracking": [[31, "robust-kalman-filtering-for-vehicle-tracking"]], "Kalman filtering": [[31, "kalman-filtering"]], "Robust Kalman filtering": [[31, "robust-kalman-filtering"]], "Vehicle tracking example": [[31, "vehicle-tracking-example"]], "1D Model": [[31, "d-model"]], "Helper Functions": [[31, "helper-functions"]], "Problem Data": [[31, "problem-data"]], "Simulation": [[31, "simulation"]], "Kalman filtering recovery": [[31, "kalman-filtering-recovery"]], "Robust Kalman filtering recovery": [[31, "robust-kalman-filtering-recovery"]], "Sparse covariance estimation for Gaussian variables": [[32, "sparse-covariance-estimation-for-gaussian-variables"]], "Solve for several \\alpha values": [[32, "solve-for-several-alpha-values"]], "Computing a sparse solution of a set of linear inequalities": [[33, "computing-a-sparse-solution-of-a-set-of-linear-inequalities"]], "\\ell_1-norm heuristic": [[33, "ell-1-norm-heuristic"]], "Iterative log heuristic": [[33, "iterative-log-heuristic"]], "Total variation in-painting": [[34, "total-variation-in-painting"]], "Grayscale Images": [[34, "grayscale-images"]], "Color Images": [[34, "color-images"]], "Water Filling in Communications": [[35, "water-filling-in-communications"]], "Least-squares": [[36, "least-squares"]], "Linear program": [[37, "linear-program"]], "Mixed-integer quadratic program": [[38, "mixed-integer-quadratic-program"]], "Quadratic program": [[39, "quadratic-program"]], "Semidefinite program": [[40, "semidefinite-program"]], "Second-order cone program": [[41, "second-order-cone-program"]], "Derivatives fundamentals": [[42, "derivatives-fundamentals"]], "Solution map": [[42, "solution-map"]], "Sensitivity analysis": [[42, "sensitivity-analysis"]], "Gradient": [[42, "gradient"]], "Queuing design": [[43, "queuing-design"]], "Sensitvities": [[43, "sensitvities"]], "Perturbation analysis": [[43, "perturbation-analysis"]], "Structured prediction": [[44, "structured-prediction"]], "Monomial fit to each component": [[44, "monomial-fit-to-each-component"]], "Fitting": [[44, "fitting"]], "DGP fundamentals": [[45, "dgp-fundamentals"]], "1. Log-log curvature": [[45, "log-log-curvature"]], "Functions from geometric programming": [[45, "functions-from-geometric-programming"]], "2. Log-log curvature ruleset": [[45, "log-log-curvature-ruleset"]], "3. DGP problems": [[45, "dgp-problems"]], "Solving DGP problems": [[45, "solving-dgp-problems"]], "4. Next steps": [[45, "next-steps"]], "References": [[45, "references"]], "Maximizing the volume of a box": [[46, "maximizing-the-volume-of-a-box"]], "Perron-Frobenius matrix completion": [[47, "perron-frobenius-matrix-completion"]], "Power control": [[48, "power-control"]], "Rank-one nonnegative matrix factorization": [[49, "rank-one-nonnegative-matrix-factorization"]], "Fractional optimization": [[50, "fractional-optimization"]], "Aerospace Design via Quasiconvex Optimization": [[51, "aerospace-design-via-quasiconvex-optimization"]], "Minimum-length least squares": [[52, "minimum-length-least-squares"]], "Examples": [[53, "examples"]], "Basic examples": [[53, "basic-examples"]], "Disciplined geometric programming": [[53, "disciplined-geometric-programming"]], "Disciplined quasiconvex programming": [[53, "disciplined-quasiconvex-programming"]], "Derivatives": [[53, "derivatives"]], "Machine learning": [[53, "machine-learning"]], "Finance": [[53, "finance"]], "Advanced": [[53, "advanced"]], "Advanced Applications": [[53, "advanced-applications"]], "Machine Learning: Lasso Regression": [[54, "machine-learning-lasso-regression"]], "Writing the objective function": [[54, "writing-the-objective-function"], [56, "writing-the-objective-function"]], "Generating data": [[54, "generating-data"], [56, "generating-data"]], "Fitting the model": [[54, "fitting-the-model"], [56, "fitting-the-model"]], "Evaluating the model": [[54, "evaluating-the-model"], [56, "evaluating-the-model"]], "Regularization path and feature selection": [[54, "regularization-path-and-feature-selection"]], "Logistic regression with \\ell_1 regularization": [[55, "logistic-regression-with-ell-1-regularization"]], "Machine Learning: Ridge Regression": [[56, "machine-learning-ridge-regression"]], "Regularization path": [[56, "regularization-path"]], "Support vector machine classifier with \\ell_1-regularization": [[57, "support-vector-machine-classifier-with-ell-1-regularization"]], "FAQ": [[58, "faq"]], "Where can I get help with CVXPY?": [[58, "where-can-i-get-help-with-cvxpy"]], "Where can I learn more about convex optimization?": [[58, "where-can-i-learn-more-about-convex-optimization"]], "How do I know which version of CVXPY I\u2019m using?": [[58, "how-do-i-know-which-version-of-cvxpy-i-m-using"]], "What do I do if I get a DCPError exception?": [[58, "what-do-i-do-if-i-get-a-dcperror-exception"]], "How do I find DCP errors?": [[58, "how-do-i-find-dcp-errors"]], "What do I do if I get a SolverError exception?": [[58, "what-do-i-do-if-i-get-a-solvererror-exception"]], "What solvers does CVXPY support?": [[58, "what-solvers-does-cvxpy-support"]], "What are the differences between CVXPY\u2019s solvers?": [[58, "what-are-the-differences-between-cvxpy-s-solvers"]], "What do I do if I get \u201cException: Cannot evaluate the truth value of a constraint\u201d?": [[58, "what-do-i-do-if-i-get-exception-cannot-evaluate-the-truth-value-of-a-constraint"]], "Can I use NumPy functions on CVXPY objects?": [[58, "can-i-use-numpy-functions-on-cvxpy-objects"]], "Can I use SciPy sparse matrices with CVXPY?": [[58, "can-i-use-scipy-sparse-matrices-with-cvxpy"]], "How do I constrain a CVXPY matrix expression to be positive semidefinite?": [[58, "how-do-i-constrain-a-cvxpy-matrix-expression-to-be-positive-semidefinite"]], "How do I create variables with special properties, such as boolean or symmetric variables?": [[58, "how-do-i-create-variables-with-special-properties-such-as-boolean-or-symmetric-variables"]], "How do I create a variable that has multiple special properties, such as boolean and symmetric?": [[58, "how-do-i-create-a-variable-that-has-multiple-special-properties-such-as-boolean-and-symmetric"]], "How do I create variables with more than 2 dimensions?": [[58, "how-do-i-create-variables-with-more-than-2-dimensions"]], "Can I copy CVXPY expressions?": [[58, "can-i-copy-cvxpy-expressions"]], "Why does it take so long to compile my Problem?": [[58, "why-does-it-take-so-long-to-compile-my-problem"]], "How does CVXPY work?": [[58, "how-does-cvxpy-work"]], "How do I cite CVXPY?": [[58, "how-do-i-cite-cvxpy"]], "Welcome to CVXPY 1.5": [[59, "welcome-to-cvxpy-1-5"]], "Install": [[60, "install"]], "Install with Additional Solver Support": [[60, "install-with-additional-solver-support"]], "Running the test suite": [[60, "running-the-test-suite"]], "Citing CVXPY": [[61, "citing-cvxpy"]], "Resources": [[62, "resources"]], "Related Projects": [[64, "related-projects"]], "Modeling frameworks": [[64, "modeling-frameworks"]], "Solvers": [[64, "solvers"]], "CVXPY Short Course": [[65, "cvxpy-short-course"]], "Advanced Features": [[66, "advanced-features"]], "Problem arithmetic": [[66, "problem-arithmetic"]], "Getting the standard form": [[66, "getting-the-standard-form"]], "Canonicalization backends": [[66, "canonicalization-backends"]], "Advanced Constraints": [[67, "advanced-constraints"]], "Attributes": [[67, "attributes"], [76, "attributes"]], "Semidefinite matrices": [[67, "semidefinite-matrices"]], "Mixed-integer programs": [[67, "mixed-integer-programs"]], "Complex valued expressions": [[67, "complex-valued-expressions"]], "Disciplined Convex Programming": [[68, "disciplined-convex-programming"]], "Sign": [[68, "sign"]], "Curvature": [[68, "curvature"], [71, "curvature"]], "Curvature rules": [[68, "curvature-rules"]], "Infix operators": [[68, "infix-operators"], [69, "infix-operators"]], "Example 1": [[68, "example-1"]], "Example 2": [[68, "example-2"]], "DCP problems": [[68, "dcp-problems"]], "Disciplined Geometric Programming": [[69, "disciplined-geometric-programming"]], "Log-log curvature": [[69, "log-log-curvature"]], "Log-log curvature rules": [[69, "log-log-curvature-rules"]], "DGP problems": [[69, "dgp-problems"]], "DGP atoms": [[69, "dgp-atoms"]], "Transpose": [[69, "transpose"], [72, "transpose"]], "Power": [[69, "power"], [72, "power"]], "Scalar functions": [[69, "scalar-functions"], [72, "scalar-functions"]], "Elementwise functions": [[69, "elementwise-functions"], [72, "elementwise-functions"]], "Vector/matrix functions": [[69, "vector-matrix-functions"], [72, "vector-matrix-functions"]], "Disciplined Parametrized Programming": [[70, "disciplined-parametrized-programming"]], "What is DPP?": [[70, "what-is-dpp"]], "The DPP ruleset": [[70, "the-dpp-ruleset"]], "Repeatedly solving a DPP problem": [[70, "repeatedly-solving-a-dpp-problem"]], "Sensitivity analysis and gradients": [[70, "sensitivity-analysis-and-gradients"]], "Disciplined Quasiconvex Programming": [[71, "disciplined-quasiconvex-programming"]], "Composition rules": [[71, "composition-rules"]], "DQCP problems": [[71, "dqcp-problems"]], "DQCP atoms": [[71, "dqcp-atoms"]], "Solving DQCP problems": [[71, "solving-dqcp-problems"]], "Atomic Functions": [[72, "atomic-functions"]], "Operators": [[72, "operators"]], "Indexing and slicing": [[72, "indexing-and-slicing"]], "Clarifications for scalar functions": [[72, "clarifications-for-scalar-functions"]], "Functions along an axis": [[72, "functions-along-an-axis"]], "Clarifications on elementwise functions": [[72, "clarifications-on-elementwise-functions"]], "Clarifications on vector and matrix functions": [[72, "clarifications-on-vector-and-matrix-functions"]], "User Guide": [[73, "user-guide"]], "What is CVXPY?": [[74, "what-is-cvxpy"]], "Changing the problem": [[74, "changing-the-problem"]], "Infeasible and unbounded problems": [[74, "infeasible-and-unbounded-problems"]], "Other problem statuses": [[74, "other-problem-statuses"]], "Vectors and matrices": [[74, "vectors-and-matrices"]], "Parameters": [[74, "parameters"]], "Solver Features": [[75, "solver-features"]], "Solve method options": [[75, "solve-method-options"]], "Choosing a solver": [[75, "choosing-a-solver"]], "Viewing solver output": [[75, "viewing-solver-output"]], "Solving disciplined geometric programs": [[75, "solving-disciplined-geometric-programs"]], "Solver stats": [[75, "solver-stats"]], "Warm start": [[75, "warm-start"]], "Setting solver options": [[75, "setting-solver-options"]], "Custom Solvers": [[75, "custom-solvers"]], "Changes to CVXPY": [[76, "changes-to-cvxpy"]], "CVXPY 1.5": [[76, "cvxpy-1-5"]], "ECOS deprecation": [[76, "ecos-deprecation"], [76, "id2"]], "New features": [[76, "new-features"], [76, "id1"]], "CVXPY 1.4": [[76, "cvxpy-1-4"]], "conv deprecation": [[76, "conv-deprecation"]], "NonPos deprecation": [[76, "nonpos-deprecation"]], "CVXPY 1.3": [[76, "cvxpy-1-3"]], "Constraints and atoms": [[76, "constraints-and-atoms"], [76, "id4"]], "General system improvements": [[76, "general-system-improvements"], [76, "id6"]], "CVXPY 1.2": [[76, "cvxpy-1-2"]], "CVXPY 1.1": [[76, "cvxpy-1-1"]], "Highlights": [[76, "highlights"]], "New atoms and transforms": [[76, "new-atoms-and-transforms"]], "Breaking changes": [[76, "breaking-changes"]], "Bugfixes": [[76, "bugfixes"]], "Known issues": [[76, "known-issues"]], "Notable patches since CVXPY 1.1.0": [[76, "notable-patches-since-cvxpy-1-1-0"]], "CVXPY 1.0": [[76, "cvxpy-1-0"]], "Overview": [[76, "overview"]], "NumPy Compatibility": [[76, "numpy-compatibility"]]}, "indexentries": {"atom (class in cvxpy.atoms.atom)": [[1, "cvxpy.atoms.atom.Atom"]], "domain (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.domain"]], "grad (cvxpy.atoms.atom.atom property)": [[1, "cvxpy.atoms.atom.Atom.grad"]], "is_atom_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_affine"]], "is_atom_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_concave"]], "is_atom_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_convex"]], "is_atom_log_log_affine() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_affine"]], "is_atom_log_log_concave() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_concave"]], "is_atom_log_log_convex() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_atom_log_log_convex"]], "is_decr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_decr"]], "is_incr() (cvxpy.atoms.atom.atom method)": [[1, "cvxpy.atoms.atom.Atom.is_incr"]], "addexpression (class in cvxpy.atoms.affine.add_expr)": [[2, "cvxpy.atoms.affine.add_expr.AddExpression"]], "divexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.DivExpression"]], "mulexpression (class in cvxpy.atoms.affine.binary_operators)": [[2, "cvxpy.atoms.affine.binary_operators.MulExpression"]], "negexpression (class in cvxpy.atoms.affine.unary_operators)": [[2, "cvxpy.atoms.affine.unary_operators.NegExpression"]], "axis (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.axis"]], "bmat() (in module cvxpy)": [[2, "cvxpy.bmat"]], "conj (class in cvxpy)": [[2, "cvxpy.conj"]], "convolve (class in cvxpy)": [[2, "cvxpy.convolve"]], "cumsum (class in cvxpy)": [[2, "cvxpy.cumsum"]], "diag() (in module cvxpy)": [[2, "cvxpy.diag"]], "diff() (in module cvxpy)": [[2, "cvxpy.diff"]], "expr (cvxpy.cumsum attribute)": [[2, "cvxpy.cumsum.expr"]], "hstack() (in module cvxpy)": [[2, "cvxpy.hstack"]], "imag (class in cvxpy)": [[2, "cvxpy.imag"]], "index (class in cvxpy.atoms.affine.index)": [[2, "cvxpy.atoms.affine.index.index"]], "kron (class in cvxpy)": [[2, "cvxpy.kron"]], "matmul() (in module cvxpy)": [[2, "cvxpy.matmul"]], "mean() (in module cvxpy.atoms.stats)": [[2, "cvxpy.atoms.stats.mean"]], "multiply (class in cvxpy)": [[2, "cvxpy.multiply"]], "outer() (in module cvxpy)": [[2, "cvxpy.outer"]], "partial_trace() (in module cvxpy)": [[2, "cvxpy.partial_trace"]], "partial_transpose() (in module cvxpy)": [[2, "cvxpy.partial_transpose"]], "promote() (in module cvxpy.atoms.affine.promote)": [[2, "cvxpy.atoms.affine.promote.promote"]], "psd_wrap (class in cvxpy.atoms.affine.wraps)": [[2, "cvxpy.atoms.affine.wraps.psd_wrap"]], "real() (in module cvxpy)": [[2, "cvxpy.real"]], "reshape (class in cvxpy)": [[2, "cvxpy.reshape"]], "sum() (in module cvxpy)": [[2, "cvxpy.sum"]], "trace (class in cvxpy)": [[2, "cvxpy.trace"]], "transpose (class in cvxpy)": [[2, "cvxpy.transpose"]], "upper_tri (class in cvxpy)": [[2, "cvxpy.upper_tri"]], "vdot() (in module cvxpy)": [[2, "cvxpy.vdot"]], "vec() (in module cvxpy)": [[2, "cvxpy.vec"]], "vec_to_upper_tri() (in module cvxpy.atoms.affine.upper_tri)": [[2, "cvxpy.atoms.affine.upper_tri.vec_to_upper_tri"]], "vstack() (in module cvxpy)": [[2, "cvxpy.vstack"]], "abs (class in cvxpy)": [[3, "cvxpy.abs"]], "entr (class in cvxpy)": [[3, "cvxpy.entr"]], "exp (class in cvxpy)": [[3, "cvxpy.exp"]], "huber (class in cvxpy)": [[3, "cvxpy.huber"]], "inv_pos() (in module cvxpy)": [[3, "cvxpy.inv_pos"]], "kl_div (class in cvxpy)": [[3, "cvxpy.kl_div"]], "log (class in cvxpy)": [[3, "cvxpy.log"]], "log1p (class in cvxpy)": [[3, "cvxpy.log1p"]], "log_normcdf (class in cvxpy)": [[3, "cvxpy.log_normcdf"]], "loggamma (class in cvxpy)": [[3, "cvxpy.loggamma"]], "logistic (class in cvxpy)": [[3, "cvxpy.logistic"]], "maximum (class in cvxpy)": [[3, "cvxpy.maximum"]], "minimum() (in module cvxpy)": [[3, "cvxpy.minimum"]], "neg() (in module cvxpy)": [[3, "cvxpy.neg"]], "pos() (in module cvxpy)": [[3, "cvxpy.pos"]], "power (class in cvxpy)": [[3, "cvxpy.power"]], "rel_entr (class in cvxpy)": [[3, "cvxpy.rel_entr"]], "scalene() (in module cvxpy)": [[3, "cvxpy.scalene"]], "sqrt() (in module cvxpy)": [[3, "cvxpy.sqrt"]], "square() (in module cvxpy)": [[3, "cvxpy.square"]], "xexp (class in cvxpy)": [[3, "cvxpy.xexp"]], "pnorm (class in cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.Pnorm"]], "suppfuncatom (class in cvxpy.atoms.suppfunc)": [[4, "cvxpy.atoms.suppfunc.SuppFuncAtom"]], "approx_error (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.approx_error"]], "cummax (class in cvxpy.atoms.cummax)": [[4, "cvxpy.atoms.cummax.cummax"]], "diff_pos() (in module cvxpy.atoms.one_minus_pos)": [[4, "cvxpy.atoms.one_minus_pos.diff_pos"]], "dotsort (class in cvxpy.atoms.dotsort)": [[4, "cvxpy.atoms.dotsort.dotsort"]], "eye_minus_inv (class in cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.eye_minus_inv"]], "geo_mean (class in cvxpy.atoms.geo_mean)": [[4, "cvxpy.atoms.geo_mean.geo_mean"]], "gmatmul (class in cvxpy.atoms.gmatmul)": [[4, "cvxpy.atoms.gmatmul.gmatmul"]], "harmonic_mean() (in module cvxpy.atoms.harmonic_mean)": [[4, "cvxpy.atoms.harmonic_mean.harmonic_mean"]], "inv_prod() (in module cvxpy.atoms.inv_prod)": [[4, "cvxpy.atoms.inv_prod.inv_prod"]], "lambda_max (class in cvxpy.atoms.lambda_max)": [[4, "cvxpy.atoms.lambda_max.lambda_max"]], "lambda_min() (in module cvxpy.atoms.lambda_min)": [[4, "cvxpy.atoms.lambda_min.lambda_min"]], "lambda_sum_largest() (in module cvxpy.atoms.lambda_sum_largest)": [[4, "cvxpy.atoms.lambda_sum_largest.lambda_sum_largest"]], "lambda_sum_smallest() (in module cvxpy.atoms.lambda_sum_smallest)": [[4, "cvxpy.atoms.lambda_sum_smallest.lambda_sum_smallest"]], "log_det (class in cvxpy.atoms.log_det)": [[4, "cvxpy.atoms.log_det.log_det"]], "log_sum_exp (class in cvxpy.atoms.log_sum_exp)": [[4, "cvxpy.atoms.log_sum_exp.log_sum_exp"]], "matrix_frac() (in module cvxpy.atoms.matrix_frac)": [[4, "cvxpy.atoms.matrix_frac.matrix_frac"]], "max (class in cvxpy.atoms.max)": [[4, "cvxpy.atoms.max.max"]], "min() (in module cvxpy.atoms.min)": [[4, "cvxpy.atoms.min.min"]], "mixed_norm() (in module cvxpy.atoms.mixed_norm)": [[4, "cvxpy.atoms.mixed_norm.mixed_norm"]], "norm() (in module cvxpy.atoms.norm)": [[4, "cvxpy.atoms.norm.norm"]], "norm1 (class in cvxpy.atoms.norm1)": [[4, "cvxpy.atoms.norm1.norm1"]], "norm2() (in module cvxpy.atoms.norm)": [[4, "cvxpy.atoms.norm.norm2"]], "normnuc (class in cvxpy.atoms.norm_nuc)": [[4, "cvxpy.atoms.norm_nuc.normNuc"]], "norm_inf (class in cvxpy.atoms)": [[4, "cvxpy.atoms.norm_inf"]], "one_minus_pos (class in cvxpy.atoms)": [[4, "cvxpy.atoms.one_minus_pos"]], "perspective (class in cvxpy.atoms.perspective)": [[4, "cvxpy.atoms.perspective.perspective"]], "pf_eigenvalue (class in cvxpy.atoms.pf_eigenvalue)": [[4, "cvxpy.atoms.pf_eigenvalue.pf_eigenvalue"]], "pnorm() (in module cvxpy.atoms.pnorm)": [[4, "cvxpy.atoms.pnorm.pnorm"]], "prod() (in module cvxpy.atoms.prod)": [[4, "cvxpy.atoms.prod.prod"]], "ptp() (in module cvxpy.atoms.ptp)": [[4, "cvxpy.atoms.ptp.ptp"]], "quad_form() (in module cvxpy.atoms.quad_form)": [[4, "cvxpy.atoms.quad_form.quad_form"]], "quad_over_lin (class in cvxpy.atoms.quad_over_lin)": [[4, "cvxpy.atoms.quad_over_lin.quad_over_lin"]], "resolvent() (in module cvxpy.atoms.eye_minus_inv)": [[4, "cvxpy.atoms.eye_minus_inv.resolvent"]], "sigma_max (class in cvxpy.atoms.sigma_max)": [[4, "cvxpy.atoms.sigma_max.sigma_max"]], "std() (in module cvxpy.atoms.stats)": [[4, "cvxpy.atoms.stats.std"]], "sum_largest (class in cvxpy.atoms.sum_largest)": [[4, "cvxpy.atoms.sum_largest.sum_largest"]], "sum_smallest() (in module cvxpy.atoms.sum_smallest)": [[4, "cvxpy.atoms.sum_smallest.sum_smallest"]], "sum_squares() (in module cvxpy.atoms.sum_squares)": [[4, "cvxpy.atoms.sum_squares.sum_squares"]], "tr_inv() (in module cvxpy.atoms.tr_inv)": [[4, "cvxpy.atoms.tr_inv.tr_inv"]], "tv() (in module cvxpy.atoms.total_variation)": [[4, "cvxpy.atoms.total_variation.tv"]], "var() (in module cvxpy.atoms.stats)": [[4, "cvxpy.atoms.stats.var"]], "von_neumann_entr (class in cvxpy)": [[4, "cvxpy.von_neumann_entr"]], "w (cvxpy.atoms.geo_mean.geo_mean attribute)": [[4, "cvxpy.atoms.geo_mean.geo_mean.w"]], "constraint (class in cvxpy.constraints.constraint)": [[5, "cvxpy.constraints.constraint.Constraint"]], "expcone (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.ExpCone"]], "finiteset (class in cvxpy.constraints.finite_set)": [[5, "cvxpy.constraints.finite_set.FiniteSet"]], "nonpos (class in cvxpy.constraints.nonpos)": [[5, "cvxpy.constraints.nonpos.NonPos"]], "oprelentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad"]], "psd (class in cvxpy.constraints.psd)": [[5, "cvxpy.constraints.psd.PSD"]], "powcone3d (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowCone3D"]], "powconend (class in cvxpy.constraints.power)": [[5, "cvxpy.constraints.power.PowConeND"]], "relentrconequad (class in cvxpy.constraints.exponential)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad"]], "soc (class in cvxpy.constraints.second_order)": [[5, "cvxpy.constraints.second_order.SOC"]], "x (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.X"]], "zero (class in cvxpy.constraints.zero)": [[5, "cvxpy.constraints.zero.Zero"]], "axis (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.axis"]], "dual_value (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.dual_value"]], "ineq_form (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.ineq_form"]], "is_dcp() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.is_dcp"]], "is_dcp() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.is_dcp"]], "is_dcp() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.is_dcp"]], "is_dcp() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.is_dcp"]], "is_dcp() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.is_dcp"]], "is_dcp() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.is_dcp"]], "is_dcp() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.is_dcp"]], "shape (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.shape"]], "shape (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.shape"]], "size (cvxpy.constraints.finite_set.finiteset property)": [[5, "cvxpy.constraints.finite_set.FiniteSet.size"]], "size (cvxpy.constraints.nonpos.nonpos property)": [[5, "cvxpy.constraints.nonpos.NonPos.size"]], "t (cvxpy.constraints.second_order.soc attribute)": [[5, "cvxpy.constraints.second_order.SOC.t"]], "value() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.value"]], "value() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.value"]], "value() (cvxpy.constraints.exponential.oprelentrconequad method)": [[5, "cvxpy.constraints.exponential.OpRelEntrConeQuad.value"]], "value() (cvxpy.constraints.exponential.relentrconequad method)": [[5, "cvxpy.constraints.exponential.RelEntrConeQuad.value"]], "value() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.value"]], "value() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.value"]], "value() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.value"]], "value() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.value"]], "value() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.value"]], "value() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.value"]], "violation() (cvxpy.constraints.constraint.constraint method)": [[5, "cvxpy.constraints.constraint.Constraint.violation"]], "violation() (cvxpy.constraints.exponential.expcone method)": [[5, "cvxpy.constraints.exponential.ExpCone.violation"]], "violation() (cvxpy.constraints.finite_set.finiteset method)": [[5, "cvxpy.constraints.finite_set.FiniteSet.violation"]], "violation() (cvxpy.constraints.nonpos.nonpos method)": [[5, "cvxpy.constraints.nonpos.NonPos.violation"]], "violation() (cvxpy.constraints.power.powcone3d method)": [[5, "cvxpy.constraints.power.PowCone3D.violation"]], "violation() (cvxpy.constraints.power.powconend method)": [[5, "cvxpy.constraints.power.PowConeND.violation"]], "violation() (cvxpy.constraints.psd.psd method)": [[5, "cvxpy.constraints.psd.PSD.violation"]], "violation() (cvxpy.constraints.second_order.soc method)": [[5, "cvxpy.constraints.second_order.SOC.violation"]], "violation() (cvxpy.constraints.zero.zero method)": [[5, "cvxpy.constraints.zero.Zero.violation"]], "callbackparam (class in cvxpy.expressions.constants.callback_param)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam"]], "constant (class in cvxpy.expressions.constants)": [[6, "cvxpy.expressions.constants.Constant"]], "expression (class in cvxpy.expressions.expression)": [[6, "cvxpy.expressions.expression.Expression"]], "leaf (class in cvxpy.expressions.leaf)": [[6, "cvxpy.expressions.leaf.Leaf"]], "parameter (class in cvxpy.expressions.constants.parameter)": [[6, "cvxpy.expressions.constants.parameter.Parameter"]], "t (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.T"]], "t (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.T"]], "t (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.T"]], "t (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.T"]], "t (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.T"]], "t (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.T"]], "variable (class in cvxpy.expressions.variable)": [[6, "cvxpy.expressions.variable.Variable"]], "__add__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__add__"]], "__div__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__div__"]], "__eq__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__eq__"]], "__ge__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__ge__"]], "__le__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__le__"]], "__lshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__lshift__"]], "__matmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__matmul__"]], "__mul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__mul__"]], "__pow__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__pow__"]], "__radd__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__radd__"]], "__rdiv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rdiv__"]], "__rlshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rlshift__"]], "__rmatmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmatmul__"]], "__rmul__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rmul__"]], "__rrshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rrshift__"]], "__rshift__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rshift__"]], "__rsub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rsub__"]], "__rtruediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__rtruediv__"]], "__sub__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__sub__"]], "__truediv__() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.__truediv__"]], "curvature (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.curvature"]], "domain (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.domain"]], "grad (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.grad"]], "is_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_affine"]], "is_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_concave"]], "is_constant() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_constant"]], "is_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_convex"]], "is_dcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dcp"]], "is_dgp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dgp"]], "is_dpp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dpp"]], "is_dqcp() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_dqcp"]], "is_log_log_affine() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_affine"]], "is_log_log_concave() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_concave"]], "is_log_log_convex() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_log_log_convex"]], "is_nonneg() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonneg"]], "is_nonpos() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_nonpos"]], "is_zero() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.is_zero"]], "name() (cvxpy.expressions.expression.expression method)": [[6, "cvxpy.expressions.expression.Expression.name"]], "name() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.name"]], "ndim (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.ndim"]], "ndim (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.ndim"]], "ndim (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.ndim"]], "ndim (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.ndim"]], "ndim (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.ndim"]], "ndim (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.ndim"]], "project() (cvxpy.expressions.constants.callback_param.callbackparam method)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.project"]], "project() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project"]], "project() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project"]], "project() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project"]], "project_and_assign() (cvxpy.expressions.constants.callback_param.callbackparam method)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.project_and_assign"]], "project_and_assign() (cvxpy.expressions.constants.parameter.parameter method)": [[6, "cvxpy.expressions.constants.parameter.Parameter.project_and_assign"]], "project_and_assign() (cvxpy.expressions.leaf.leaf method)": [[6, "cvxpy.expressions.leaf.Leaf.project_and_assign"]], "project_and_assign() (cvxpy.expressions.variable.variable method)": [[6, "cvxpy.expressions.variable.Variable.project_and_assign"]], "shape (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.shape"]], "shape (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.shape"]], "shape (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.shape"]], "shape (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.shape"]], "shape (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.shape"]], "shape (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.shape"]], "sign (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.sign"]], "size (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.size"]], "size (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.size"]], "size (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.size"]], "size (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.size"]], "size (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.size"]], "size (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.size"]], "value (cvxpy.expressions.constants.constant property)": [[6, "cvxpy.expressions.constants.Constant.value"]], "value (cvxpy.expressions.constants.callback_param.callbackparam property)": [[6, "cvxpy.expressions.constants.callback_param.CallbackParam.value"]], "value (cvxpy.expressions.constants.parameter.parameter property)": [[6, "cvxpy.expressions.constants.parameter.Parameter.value"]], "value (cvxpy.expressions.expression.expression property)": [[6, "cvxpy.expressions.expression.Expression.value"]], "value (cvxpy.expressions.leaf.leaf property)": [[6, "cvxpy.expressions.leaf.Leaf.value"]], "value (cvxpy.expressions.variable.variable property)": [[6, "cvxpy.expressions.variable.Variable.value"]], "maximize (class in cvxpy)": [[7, "cvxpy.Maximize"]], "minimize (class in cvxpy)": [[7, "cvxpy.Minimize"]], "problem (class in cvxpy)": [[7, "cvxpy.Problem"]], "sizemetrics (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SizeMetrics"]], "solverstats (class in cvxpy.problems.problem)": [[7, "cvxpy.problems.problem.SolverStats"]], "atoms() (cvxpy.problem method)": [[7, "cvxpy.Problem.atoms"]], "backward() (cvxpy.problem method)": [[7, "cvxpy.Problem.backward"]], "compilation_time (cvxpy.problem property)": [[7, "cvxpy.Problem.compilation_time"]], "constants() (cvxpy.problem method)": [[7, "cvxpy.Problem.constants"]], "constraints (cvxpy.problem property)": [[7, "cvxpy.Problem.constraints"]], "derivative() (cvxpy.problem method)": [[7, "cvxpy.Problem.derivative"]], "extra_stats (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.extra_stats"], [7, "id0"]], "from_dict() (cvxpy.problems.problem.solverstats class method)": [[7, "cvxpy.problems.problem.SolverStats.from_dict"]], "get_problem_data() (cvxpy.problem method)": [[7, "cvxpy.Problem.get_problem_data"]], "is_dcp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dcp"]], "is_dcp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dcp"]], "is_dcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dcp"]], "is_dgp() (cvxpy.maximize method)": [[7, "cvxpy.Maximize.is_dgp"]], "is_dgp() (cvxpy.minimize method)": [[7, "cvxpy.Minimize.is_dgp"]], "is_dgp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dgp"]], "is_dpp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dpp"]], "is_dqcp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_dqcp"]], "is_qp() (cvxpy.problem method)": [[7, "cvxpy.Problem.is_qp"]], "max_big_small_squared (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_big_small_squared"]], "max_data_dimension (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.max_data_dimension"]], "num_iters (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.num_iters"], [7, "id1"]], "num_scalar_data (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_data"]], "num_scalar_eq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_eq_constr"]], "num_scalar_leq_constr (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_leq_constr"]], "num_scalar_variables (cvxpy.problems.problem.sizemetrics attribute)": [[7, "cvxpy.problems.problem.SizeMetrics.num_scalar_variables"]], "objective (cvxpy.problem property)": [[7, "cvxpy.Problem.objective"]], "parameters() (cvxpy.problem method)": [[7, "cvxpy.Problem.parameters"]], "register_solve() (cvxpy.problem class method)": [[7, "cvxpy.Problem.register_solve"]], "setup_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.setup_time"], [7, "id2"]], "size_metrics (cvxpy.problem property)": [[7, "cvxpy.Problem.size_metrics"]], "solve() (cvxpy.problem method)": [[7, "cvxpy.Problem.solve"]], "solve_time (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solve_time"], [7, "id3"]], "solver_name (cvxpy.problems.problem.solverstats attribute)": [[7, "cvxpy.problems.problem.SolverStats.solver_name"], [7, "id4"]], "solver_stats (cvxpy.problem property)": [[7, "cvxpy.Problem.solver_stats"]], "status (cvxpy.problem property)": [[7, "cvxpy.Problem.status"]], "unpack_results() (cvxpy.problem method)": [[7, "cvxpy.Problem.unpack_results"]], "value (cvxpy.problem property)": [[7, "cvxpy.Problem.value"]], "variables() (cvxpy.problem method)": [[7, "cvxpy.Problem.variables"]], "chain (class in cvxpy.reductions.chain)": [[8, "cvxpy.reductions.chain.Chain"]], "reduction (class in cvxpy.reductions.reduction)": [[8, "cvxpy.reductions.reduction.Reduction"]], "solution (class in cvxpy.reductions.solution)": [[8, "cvxpy.reductions.solution.Solution"]], "solvingchain (class in cvxpy.reductions.solvers.solving_chain)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain"]], "__init__() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.__init__"]], "accepts() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.accepts"]], "accepts() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.accepts"]], "apply() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.apply"]], "apply() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.apply"]], "attr (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.attr"]], "dual_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.dual_vars"]], "invert() (cvxpy.reductions.chain.chain method)": [[8, "cvxpy.reductions.chain.Chain.invert"]], "invert() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.invert"]], "opt_val (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.opt_val"]], "prepend() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.prepend"]], "primal_vars (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.primal_vars"]], "reduce() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.reduce"]], "reductions (cvxpy.reductions.chain.chain attribute)": [[8, "cvxpy.reductions.chain.Chain.reductions"]], "reductions (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.reductions"]], "retrieve() (cvxpy.reductions.reduction.reduction method)": [[8, "cvxpy.reductions.reduction.Reduction.retrieve"]], "solve() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve"]], "solve_via_data() (cvxpy.reductions.solvers.solving_chain.solvingchain method)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solve_via_data"]], "solver (cvxpy.reductions.solvers.solving_chain.solvingchain attribute)": [[8, "cvxpy.reductions.solvers.solving_chain.SolvingChain.solver"]], "status (cvxpy.reductions.solution.solution attribute)": [[8, "cvxpy.reductions.solution.Solution.status"]], "dcp2cone (class in cvxpy.reductions.dcp2cone.dcp2cone)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone"]], "dualize (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize"]], "qp2symbolicqp (class in cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp"]], "slacks (class in cvxpy.reductions.cone2cone.affine2direct)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks"]], "accepts() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.accepts"]], "accepts() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.accepts"]], "apply() (cvxpy.reductions.cone2cone.affine2direct.slacks static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Slacks.apply"]], "apply() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.apply"]], "apply() (cvxpy.reductions.qp2quad_form.qp2symbolic_qp.qp2symbolicqp method)": [[9, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"], [12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.Qp2SymbolicQp.apply"]], "canonicalize_expr() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_expr"]], "canonicalize_tree() (cvxpy.reductions.dcp2cone.dcp2cone.dcp2cone method)": [[9, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"], [10, "cvxpy.reductions.dcp2cone.dcp2cone.Dcp2Cone.canonicalize_tree"]], "invert() (cvxpy.reductions.cone2cone.affine2direct.dualize static method)": [[9, "cvxpy.reductions.cone2cone.affine2direct.Dualize.invert"]], "constraints (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.CONSTRAINTS"]], "conedims (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims"]], "conematrixstuffing (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing"]], "eq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EQ_DIM"]], "exp_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.EXP_DIM"]], "leq_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.LEQ_DIM"]], "p3d_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.P3D_DIM"]], "psd_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.PSD_DIM"]], "paramconeprog (class in cvxpy.reductions.dcp2cone.cone_matrix_stuffing)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg"]], "soc_dim (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.SOC_DIM"]], "accepts() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.accepts"]], "apply() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.apply_parameters"]], "cvxpy.reductions.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone"]], "cvxpy.reductions.dcp2cone.cone_matrix_stuffing": [[10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"]], "cvxpy.reductions.dcp2cone.dcp2cone": [[10, "module-cvxpy.reductions.dcp2cone.dcp2cone"]], "exp (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.is_mixed_integer"]], "module": [[10, "module-cvxpy.reductions.dcp2cone"], [10, "module-cvxpy.reductions.dcp2cone.cone_matrix_stuffing"], [10, "module-cvxpy.reductions.dcp2cone.dcp2cone"], [12, "module-cvxpy.reductions.qp2quad_form"], [12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"], [12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "nonneg (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.nonneg"]], "psd (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_adjoint"]], "split_solution() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.paramconeprog method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ParamConeProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conematrixstuffing method)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.dcp2cone.cone_matrix_stuffing.conedims attribute)": [[10, "cvxpy.reductions.dcp2cone.cone_matrix_stuffing.ConeDims.zero"]], "complex2real (class in cvxpy.reductions.complex2real.complex2real)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real"]], "cvxattr2constr (class in cvxpy.reductions.cvx_attr2constr)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr"]], "dgp2dcp (class in cvxpy.reductions.dgp2dcp.dgp2dcp)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp"]], "evalparams (class in cvxpy.reductions.eval_params)": [[11, "cvxpy.reductions.eval_params.EvalParams"]], "flipobjective (class in cvxpy.reductions.flip_objective)": [[11, "cvxpy.reductions.flip_objective.FlipObjective"]], "accepts() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.accepts"]], "accepts() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.accepts"]], "accepts() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.accepts"]], "accepts() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.accepts"]], "accepts() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.accepts"]], "apply() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.apply"]], "apply() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.apply"]], "apply() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.apply"]], "apply() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.apply"]], "apply() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.apply"]], "canonicalize_expr() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.canonicalize_expr"]], "invert() (cvxpy.reductions.complex2real.complex2real.complex2real method)": [[11, "cvxpy.reductions.complex2real.complex2real.Complex2Real.invert"]], "invert() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.invert"]], "invert() (cvxpy.reductions.dgp2dcp.dgp2dcp.dgp2dcp method)": [[11, "cvxpy.reductions.dgp2dcp.dgp2dcp.Dgp2Dcp.invert"]], "invert() (cvxpy.reductions.eval_params.evalparams method)": [[11, "cvxpy.reductions.eval_params.EvalParams.invert"]], "invert() (cvxpy.reductions.flip_objective.flipobjective method)": [[11, "cvxpy.reductions.flip_objective.FlipObjective.invert"]], "reduction_attributes() (cvxpy.reductions.cvx_attr2constr.cvxattr2constr method)": [[11, "cvxpy.reductions.cvx_attr2constr.CvxAttr2Constr.reduction_attributes"]], "conedims (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims"]], "paramquadprog (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg"]], "qpmatrixstuffing (class in cvxpy.reductions.qp2quad_form.qp_matrix_stuffing)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing"]], "accepts() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing static method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.accepts"]], "accepts() (in module cvxpy.reductions.qp2quad_form.qp2symbolic_qp)": [[12, "cvxpy.reductions.qp2quad_form.qp2symbolic_qp.accepts"]], "apply() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.apply"]], "apply_param_jac() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_param_jac"]], "apply_parameters() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.apply_parameters"]], "cvxpy.reductions.qp2quad_form": [[12, "module-cvxpy.reductions.qp2quad_form"]], "cvxpy.reductions.qp2quad_form.qp2symbolic_qp": [[12, "module-cvxpy.reductions.qp2quad_form.qp2symbolic_qp"]], "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing": [[12, "module-cvxpy.reductions.qp2quad_form.qp_matrix_stuffing"]], "exp (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.exp"]], "invert() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.invert"]], "is_mixed_integer() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.is_mixed_integer"]], "nonpos (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.nonpos"]], "psd (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.psd"]], "soc (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.soc"]], "split_adjoint() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_adjoint"]], "split_solution() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.paramquadprog method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ParamQuadProg.split_solution"]], "stuffed_objective() (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.qpmatrixstuffing method)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.QpMatrixStuffing.stuffed_objective"]], "zero (cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.conedims attribute)": [[12, "cvxpy.reductions.qp2quad_form.qp_matrix_stuffing.ConeDims.zero"]], "suppfunc (class in cvxpy.transforms.suppfunc)": [[13, "cvxpy.transforms.suppfunc.SuppFunc"]], "__call__() (cvxpy.transforms.suppfunc.suppfunc method)": [[13, "cvxpy.transforms.suppfunc.SuppFunc.__call__"]], "indicator (class in cvxpy.transforms)": [[13, "cvxpy.transforms.indicator"]], "linearize() (cvxpy.transforms method)": [[13, "cvxpy.transforms.linearize"]], "log_sum_exp() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.log_sum_exp"]], "max() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.max"]], "partial_optimize() (cvxpy.transforms.partial_optimize method)": [[13, "cvxpy.transforms.partial_optimize.partial_optimize"]], "targets_and_priorities() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.targets_and_priorities"]], "weighted_sum() (cvxpy.transforms.scalarize method)": [[13, "cvxpy.transforms.scalarize.weighted_sum"]], "leaf()": [[67, "Leaf"]], "built-in function": [[67, "Leaf"], [75, "solve"]], "solve()": [[75, "solve"]]}})